; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_enet.o --depend=.\objects\fsl_enet.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_enet.crf ..\..\devices\MK66F18\drivers\fsl_enet.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.ENET_1588_Timer_IRQHandler||, CODE, READONLY, ALIGN=2

ENET_1588_Timer_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.32|
        LDR      r1,[r0,#0]  ; s_ENETHandle
        LDR      r0,|L1.36|
        LDR      r2,|L1.40|
        LDR      r2,[r2,#0]  ; s_enetTsIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L1.32|
        DCD      s_ENETHandle
|L1.36|
        DCD      0x400c0000
|L1.40|
        DCD      s_enetTsIsr

        AREA ||i.ENET_ActiveSend||, CODE, READONLY, ALIGN=2

ENET_ActiveSend PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBNZ     r5,|L2.10|
        B        |L2.22|
|L2.10|
        MOV      r2,#0x377
        ADR      r1,|L2.60|
        ADR      r0,|L2.104|
        BL       __aeabi_assert
|L2.22|
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        CBNZ     r5,|L2.48|
        MOV      r0,#0x1000000
        STR      r0,[r4,#0x14]
        B        |L2.56|
|L2.48|
        MOV      r0,#0x1000000
        STR      r0,[r4,#0x14]
        NOP      
|L2.56|
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L2.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L2.104|
        DCB      "ringId < FSL_FEATURE_ENET_QUEUE",0

        AREA ||i.ENET_AddMulticastGroup||, CODE, READONLY, ALIGN=2

ENET_AddMulticastGroup PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        CBZ      r6,|L3.12|
        B        |L3.24|
|L3.12|
        MOV      r2,#0x860
        ADR      r1,|L3.136|
        ADR      r0,|L3.180|
        BL       __aeabi_assert
|L3.24|
        MOV      r4,#0xffffffff
        MOVS     r7,#0
        MOV      r8,#0
        NOP      
        B        |L3.82|
|L3.38|
        LDRB     r0,[r6,r7]
        MOV      r8,#0
        B        |L3.74|
|L3.46|
        EOR      r1,r0,r4
        AND      r1,r1,#1
        CBZ      r1,|L3.66|
        LSRS     r4,r4,#1
        ASRS     r0,r0,#1
        LDR      r1,|L3.188|
        EORS     r4,r4,r1
        B        |L3.70|
|L3.66|
        LSRS     r4,r4,#1
        ASRS     r0,r0,#1
|L3.70|
        ADD      r8,r8,#1
|L3.74|
        CMP      r8,#8
        BCC      |L3.46|
        ADDS     r7,r7,#1
|L3.82|
        CMP      r7,#6
        BCC      |L3.38|
        MOVS     r0,#1
        AND      r0,r0,r4,LSR #31
        CBNZ     r0,|L3.114|
        LDR      r0,[r5,#0x124]
        UBFX     r2,r4,#26,#5
        MOVS     r1,#1
        LSLS     r1,r1,r2
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x124]
        B        |L3.132|
|L3.114|
        LDR      r0,[r5,#0x120]
        UBFX     r2,r4,#26,#5
        MOVS     r1,#1
        LSLS     r1,r1,r2
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x120]
|L3.132|
        POP      {r4-r8,pc}
        ENDP

|L3.136|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L3.180|
        DCB      "address",0
|L3.188|
        DCD      0xedb88320

        AREA ||i.ENET_CommonFrame0IRQHandler||, CODE, READONLY, ALIGN=2

ENET_CommonFrame0IRQHandler PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        LDR      r4,[r6,#4]
        MOV      r0,r6
        BL       ENET_GetInstance
        MOV      r5,r0
        AND      r0,r4,#0xc000000
        CBZ      r0,|L4.34|
        LDR      r0,|L4.112|
        LDR      r1,[r0,r5,LSL #2]
        MOV      r0,r6
        LDR      r2,|L4.116|
        LDR      r2,[r2,#0]  ; s_enetTxIsr
        BLX      r2
|L4.34|
        AND      r0,r4,#0x3000000
        CBZ      r0,|L4.54|
        LDR      r0,|L4.112|
        LDR      r1,[r0,r5,LSL #2]
        MOV      r0,r6
        LDR      r2,|L4.120|
        LDR      r2,[r2,#0]  ; s_enetRxIsr
        BLX      r2
|L4.54|
        AND      r0,r4,#0x18000
        CBZ      r0,|L4.74|
        LDR      r0,|L4.112|
        LDR      r1,[r0,r5,LSL #2]
        MOV      r0,r6
        LDR      r2,|L4.124|
        LDR      r2,[r2,#0]  ; s_enetTsIsr
        BLX      r2
|L4.74|
        LDR      r0,|L4.128|
        ANDS     r0,r0,r4
        CBZ      r0,|L4.94|
        LDR      r0,|L4.112|
        LDR      r1,[r0,r5,LSL #2]
        MOV      r0,r6
        LDR      r2,|L4.132|
        LDR      r2,[r2,#0]  ; s_enetErrIsr
        BLX      r2
|L4.94|
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L4.112|
        DCD      s_ENETHandle
|L4.116|
        DCD      s_enetTxIsr
|L4.120|
        DCD      s_enetRxIsr
|L4.124|
        DCD      s_enetTsIsr
|L4.128|
        DCD      0x607c0000
|L4.132|
        DCD      s_enetErrIsr

        AREA ||i.ENET_Deinit||, CODE, READONLY, ALIGN=2

ENET_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x24]
        BIC      r0,r0,#2
        STR      r0,[r4,#0x24]
        MOV      r0,r4
        BL       ENET_GetInstance
        LDR      r1,|L5.48|
        LDR      r5,[r1,r0,LSL #2]
        LDR      r1,|L5.52|
        ADD      r0,r1,r5,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r5
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L5.48|
        DCD      s_enetClock
|L5.52|
        DCD      0x40047000

        AREA ||i.ENET_DriverIRQHandler||, CODE, READONLY, ALIGN=2

ENET_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L6.44|
        BL       ENET_CommonFrame0IRQHandler
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L6.44|
        DCD      0x400c0000

        AREA ||i.ENET_ErrorIRQHandler||, CODE, READONLY, ALIGN=2

ENET_ErrorIRQHandler PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBZ      r5,|L7.12|
        B        |L7.24|
|L7.12|
        MOV      r2,#0xc2e
        ADR      r1,|L7.124|
        ADR      r0,|L7.168|
        BL       __aeabi_assert
|L7.24|
        LDR      r6,|L7.176|
        LDR      r0,[r4,#4]
        AND      r0,r0,#0x20000
        CBZ      r0,|L7.82|
        MOV      r0,#0x20000
        STR      r0,[r4,#4]
        MOVS     r0,#0
        CBZ      r0,|L7.54|
        LDR      r1,[r4,#0x24]
        ORR      r1,r1,#0xc
        STR      r1,[r4,#0x24]
        B        |L7.62|
|L7.54|
        LDR      r1,[r4,#0x24]
        BIC      r1,r1,#0xc
        STR      r1,[r4,#0x24]
|L7.62|
        NOP      
        LDR      r0,[r5,#0x1c]
        CBZ      r0,|L7.104|
        MOVS     r2,#3
        MOV      r1,r5
        MOV      r0,r4
        LDRD     r7,r3,[r5,#0x1c]
        BLX      r7
        B        |L7.104|
|L7.82|
        LDR      r0,[r4,#4]
        ANDS     r6,r6,r0
        STR      r6,[r4,#4]
        LDR      r0,[r5,#0x1c]
        CBZ      r0,|L7.104|
        MOVS     r2,#2
        MOV      r1,r5
        MOV      r0,r4
        LDRD     r7,r3,[r5,#0x1c]
        BLX      r7
|L7.104|
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4-r8,pc}
        ENDP

|L7.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L7.168|
        DCB      "handle",0
        DCB      0
|L7.176|
        DCD      0x607c0000

        AREA ||i.ENET_Error_IRQHandler||, CODE, READONLY, ALIGN=2

ENET_Error_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L8.32|
        LDR      r1,[r0,#0]  ; s_ENETHandle
        LDR      r0,|L8.36|
        LDR      r2,|L8.40|
        LDR      r2,[r2,#0]  ; s_enetErrIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L8.32|
        DCD      s_ENETHandle
|L8.36|
        DCD      0x400c0000
|L8.40|
        DCD      s_enetErrIsr

        AREA ||i.ENET_GetDefaultConfig||, CODE, READONLY, ALIGN=2

ENET_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L9.8|
        B        |L9.20|
|L9.8|
        MOV      r2,#0x150
        ADR      r1,|L9.48|
        ADR      r0,|L9.92|
        BL       __aeabi_assert
|L9.20|
        MOVS     r1,#0x18
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOVS     r0,#1
        STRB     r0,[r4,#0xa]
        STRB     r0,[r4,#0xb]
        STRB     r0,[r4,#0xc]
        STRB     r0,[r4,#0x16]
        MOV      r0,#0x5ee
        STRH     r0,[r4,#8]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L9.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L9.92|
        DCB      "config",0
        DCB      0

        AREA ||i.ENET_GetInstance||, CODE, READONLY, ALIGN=2

ENET_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L10.22|
|L10.8|
        LDR      r0,|L10.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L10.20|
        B        |L10.26|
|L10.20|
        ADDS     r4,r4,#1
|L10.22|
        CMP      r4,#0
        BEQ      |L10.8|
|L10.26|
        NOP      
        CBNZ     r4,|L10.32|
        B        |L10.44|
|L10.32|
        MOV      r2,#0x13a
        ADR      r1,|L10.52|
        ADR      r0,|L10.96|
        BL       __aeabi_assert
|L10.44|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

|L10.48|
        DCD      s_enetBases
|L10.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L10.96|
        DCB      "instance < ARRAY_SIZE(s_enetBases)",0
        DCB      0

        AREA ||i.ENET_GetMacAddr||, CODE, READONLY, ALIGN=2

ENET_GetMacAddr PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L11.10|
        B        |L11.22|
|L11.10|
        MOV      r2,#0x3e3
        ADR      r1,|L11.56|
        ADR      r0,|L11.100|
        BL       __aeabi_assert
|L11.22|
        LDR      r5,[r6,#0xe4]
        LSRS     r0,r5,#24
        STRB     r0,[r4,#0]
        LSRS     r0,r5,#16
        STRB     r0,[r4,#1]
        LSRS     r0,r5,#8
        STRB     r0,[r4,#2]
        STRB     r5,[r4,#3]
        LDR      r0,[r6,#0xe8]
        LSRS     r5,r0,#16
        LSRS     r0,r5,#8
        STRB     r0,[r4,#4]
        STRB     r5,[r4,#5]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L11.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L11.100|
        DCB      "macAddr",0

        AREA ||i.ENET_GetRxErrBeforeReadFrame||, CODE, READONLY, ALIGN=2

ENET_GetRxErrBeforeReadFrame PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r5,|L12.12|
        B        |L12.24|
|L12.12|
        MOV      r2,#0x488
        ADR      r1,|L12.164|
        ADR      r0,|L12.208|
        BL       __aeabi_assert
|L12.24|
        LDR      r0,[r5,#4]
        CBZ      r0,|L12.30|
        B        |L12.42|
|L12.30|
        MOV      r2,#0x489
        ADR      r1,|L12.164|
        ADR      r0,|L12.216|
        BL       __aeabi_assert
|L12.42|
        CBZ      r4,|L12.46|
        B        |L12.58|
|L12.46|
        MOV      r2,#0x48a
        ADR      r1,|L12.164|
        ADR      r0,|L12.240|
        BL       __aeabi_assert
|L12.58|
        MOVS     r6,#0
        LDR      r7,[r5,#4]
        NOP      
|L12.64|
        LDRH     r0,[r7,#2]
        AND      r0,r0,#0x800
        CBZ      r0,|L12.136|
        LDRH     r6,[r7,#2]
        AND      r0,r6,#1
        CBZ      r0,|L12.86|
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
|L12.86|
        AND      r0,r6,#2
        CBZ      r0,|L12.98|
        LDR      r0,[r4,#0xc]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0xc]
|L12.98|
        AND      r0,r6,#0x20
        CBZ      r0,|L12.110|
        LDR      r0,[r4,#0]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0]
|L12.110|
        AND      r0,r6,#0x10
        CBZ      r0,|L12.122|
        LDR      r0,[r4,#4]
        ADDS     r0,r0,#1
        STR      r0,[r4,#4]
|L12.122|
        AND      r0,r6,#4
        CBZ      r0,|L12.134|
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
|L12.134|
        B        |L12.156|
|L12.136|
        LDRH     r0,[r7,#2]
        AND      r0,r0,#0x2000
        CBZ      r0,|L12.148|
        LDR      r7,[r5,#0]
        B        |L12.150|
|L12.148|
        ADDS     r7,r7,#8
|L12.150|
        LDR      r0,[r5,#4]
        CMP      r0,r7
        BNE      |L12.64|
|L12.156|
        NOP      
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L12.164|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L12.208|
        DCB      "handle",0
        DCB      0
|L12.216|
        DCB      "handle->rxBdCurrent[0]",0
        DCB      0
|L12.240|
        DCB      "eErrorStatic",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.ENET_GetRxFrameSize||, CODE, READONLY, ALIGN=2

ENET_GetRxFrameSize PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        CBZ      r5,|L13.12|
        B        |L13.24|
|L13.12|
        MOV      r2,#0x4e3
        ADR      r1,|L13.164|
        ADR      r0,|L13.208|
        BL       __aeabi_assert
|L13.24|
        LDR      r0,[r5,#4]
        CBZ      r0,|L13.30|
        B        |L13.42|
|L13.30|
        MOV      r2,#0x4e4
        ADR      r1,|L13.164|
        ADR      r0,|L13.216|
        BL       __aeabi_assert
|L13.42|
        CBZ      r6,|L13.46|
        B        |L13.58|
|L13.46|
        MOV      r2,#0x4e5
        ADR      r1,|L13.164|
        ADR      r0,|L13.240|
        BL       __aeabi_assert
|L13.58|
        MOVS     r0,#0
        STR      r0,[r6,#0]
        MOV      r7,#0x8800
        LDR      r4,[r5,#4]
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x8000
        CBZ      r0,|L13.84|
        MOV      r0,#0xfa2
|L13.80|
        POP      {r4-r8,pc}
|L13.84|
        NOP      
|L13.86|
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x8000
        CBNZ     r0,|L13.104|
        LDRH     r0,[r4,#0]
        CBNZ     r0,|L13.104|
        MOV      r0,#0xfa0
        B        |L13.80|
|L13.104|
        LDRH     r0,[r4,#2]
        ANDS     r0,r0,r7
        CMP      r0,#0x800
        BNE      |L13.136|
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x37
        CBZ      r0,|L13.128|
        MOV      r0,#0xfa0
        B        |L13.80|
|L13.128|
        LDRH     r0,[r4,#0]
        STR      r0,[r6,#0]
        MOVS     r0,#0
        B        |L13.80|
|L13.136|
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x2000
        CBZ      r0,|L13.148|
        LDR      r4,[r5,#0]
        B        |L13.150|
|L13.148|
        ADDS     r4,r4,#8
|L13.150|
        LDR      r0,[r5,#4]
        CMP      r0,r4
        BNE      |L13.86|
        MOV      r0,#0xfa2
        B        |L13.80|
        ENDP

        DCW      0x0000
|L13.164|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L13.208|
        DCB      "handle",0
        DCB      0
|L13.216|
        DCB      "handle->rxBdCurrent[0]",0
        DCB      0
|L13.240|
        DCB      "length",0
        DCB      0

        AREA ||i.ENET_Init||, CODE, READONLY, ALIGN=2

ENET_Init PROC
        PUSH     {r2-r10,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r4,r2
        MOV      r7,r3
        LDRD     r8,r10,[sp,#0x28]
        CBZ      r6,|L14.20|
        B        |L14.32|
|L14.20|
        MOV      r2,#0x187
        ADR      r1,|L14.200|
        ADR      r0,|L14.244|
        BL       __aeabi_assert
|L14.32|
        CBZ      r4,|L14.36|
        B        |L14.48|
|L14.36|
        MOV      r2,#0x188
        ADR      r1,|L14.200|
        ADR      r0,|L14.252|
        BL       __aeabi_assert
|L14.48|
        CBZ      r7,|L14.52|
        B        |L14.64|
|L14.52|
        MOV      r2,#0x189
        ADR      r1,|L14.200|
        ADR      r0,|L14.260|
        BL       __aeabi_assert
|L14.64|
        CMP      r8,#0
        BEQ      |L14.72|
        B        |L14.84|
|L14.72|
        MOV      r2,#0x18a
        ADR      r1,|L14.200|
        ADR      r0,|L14.276|
        BL       __aeabi_assert
|L14.84|
        LDRB     r0,[r4,#0x16]
        CMP      r0,#1
        BGT      |L14.92|
        B        |L14.104|
|L14.92|
        MOV      r2,#0x18b
        ADR      r1,|L14.200|
        ADR      r0,|L14.284|
        BL       __aeabi_assert
|L14.104|
        MOV      r0,r5
        BL       ENET_GetInstance
        MOV      r9,r0
        LDR      r1,|L14.328|
        LDR      r0,[r1,r9,LSL #2]
        LDR      r2,|L14.332|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        NOP      
        LDR      r0,[r5,#0x24]
        ORR      r0,r0,#1
        STR      r0,[r5,#0x24]
        NOP      
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r6
        BL       ENET_SetTxBufferDescriptors
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r6
        BL       ENET_SetRxBufferDescriptors
        MOV      r3,r7
        MOV      r2,r4
        MOV      r1,r6
        MOV      r0,r5
        STRD     r8,r10,[sp,#0]
        BL       ENET_SetMacController
        MOV      r3,r7
        MOV      r2,r4
        MOV      r1,r6
        MOV      r0,r5
        BL       ENET_SetHandler
        POP      {r2-r10,pc}
        ENDP

|L14.200|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L14.244|
        DCB      "handle",0
        DCB      0
|L14.252|
        DCB      "config",0
        DCB      0
|L14.260|
        DCB      "bufferConfig",0
        DCB      0
        DCB      0
        DCB      0
|L14.276|
        DCB      "macAddr",0
|L14.284|
        DCB      "config->ringNum <= FSL_FEATURE_ENET_QUEUE",0
        DCB      0
        DCB      0
|L14.328|
        DCD      s_enetClock
|L14.332|
        DCD      0x40047000

        AREA ||i.ENET_LeaveMulticastGroup||, CODE, READONLY, ALIGN=2

ENET_LeaveMulticastGroup PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        CBZ      r6,|L15.12|
        B        |L15.24|
|L15.12|
        MOV      r2,#0x88d
        ADR      r1,|L15.136|
        ADR      r0,|L15.180|
        BL       __aeabi_assert
|L15.24|
        MOV      r4,#0xffffffff
        MOVS     r7,#0
        MOV      r8,#0
        NOP      
        B        |L15.82|
|L15.38|
        LDRB     r0,[r6,r7]
        MOV      r8,#0
        B        |L15.74|
|L15.46|
        EOR      r1,r0,r4
        AND      r1,r1,#1
        CBZ      r1,|L15.66|
        LSRS     r4,r4,#1
        ASRS     r0,r0,#1
        LDR      r1,|L15.188|
        EORS     r4,r4,r1
        B        |L15.70|
|L15.66|
        LSRS     r4,r4,#1
        ASRS     r0,r0,#1
|L15.70|
        ADD      r8,r8,#1
|L15.74|
        CMP      r8,#8
        BCC      |L15.46|
        ADDS     r7,r7,#1
|L15.82|
        CMP      r7,#6
        BCC      |L15.38|
        MOVS     r0,#1
        AND      r0,r0,r4,LSR #31
        CBNZ     r0,|L15.114|
        LDR      r0,[r5,#0x124]
        UBFX     r2,r4,#26,#5
        MOVS     r1,#1
        LSLS     r1,r1,r2
        BICS     r0,r0,r1
        STR      r0,[r5,#0x124]
        B        |L15.132|
|L15.114|
        LDR      r0,[r5,#0x120]
        UBFX     r2,r4,#26,#5
        MOVS     r1,#1
        LSLS     r1,r1,r2
        BICS     r0,r0,r1
        STR      r0,[r5,#0x120]
|L15.132|
        POP      {r4-r8,pc}
        ENDP

|L15.136|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L15.180|
        DCB      "address",0
|L15.188|
        DCD      0xedb88320

        AREA ||i.ENET_ReadFrame||, CODE, READONLY, ALIGN=2

ENET_ReadFrame PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0xc
        MOV      r4,r1
        MOV      r7,r2
        MOV      r8,r3
        CBZ      r4,|L16.16|
        B        |L16.28|
|L16.16|
        MOV      r2,#0x542
        ADR      r1,|L16.224|
        ADR      r0,|L16.268|
        BL       __aeabi_assert
|L16.28|
        LDR      r0,[r4,#4]
        CBZ      r0,|L16.34|
        B        |L16.46|
|L16.34|
        MOV      r2,#0x543
        ADR      r1,|L16.224|
        ADR      r0,|L16.276|
        BL       __aeabi_assert
|L16.46|
        MOV      r9,#0
        MOVS     r6,#0
        MOV      r11,r6
        LDR      r5,[r4,#4]
        MOVS     r0,#0
        STR      r0,[sp,#8]
        CBNZ     r7,|L16.104|
        NOP      
|L16.64|
        LDR      r0,[r4,#4]
        LDRH     r10,[r0,#2]
        MOVS     r2,#0
        MOV      r1,r4
        LDR      r0,[sp,#0xc]
        BL       ENET_UpdateReadBuffers
        AND      r0,r10,#0x800
        CBZ      r0,|L16.88|
        B        |L16.94|
|L16.88|
        LDR      r0,[r4,#4]
        CMP      r0,r5
        BNE      |L16.64|
|L16.94|
        NOP      
        LDR      r0,[sp,#8]
|L16.98|
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
|L16.104|
        LDR      r0,[r5,#4]
        STR      r0,[sp,#4]
        B        |L16.210|
|L16.110|
        LDRH     r0,[r5,#2]
        AND      r0,r0,#0x800
        CBZ      r0,|L16.170|
        MOV      r11,#1
        LDRH     r0,[r5,#0]
        CMP      r0,r8
        BNE      |L16.158|
        LDRH     r0,[r5,#0]
        SUB      r9,r0,r6
        ADDS     r0,r7,r6
        MOV      r2,r9
        LDR      r1,[sp,#4]
        BL       __aeabi_memcpy
        MOVS     r2,#0
        MOV      r1,r4
        LDR      r0,[sp,#0xc]
        BL       ENET_UpdateReadBuffers
        LDR      r0,[sp,#8]
        B        |L16.98|
|L16.158|
        MOVS     r2,#0
        MOV      r1,r4
        LDR      r0,[sp,#0xc]
        BL       ENET_UpdateReadBuffers
        B        |L16.204|
|L16.170|
        MOV      r11,#0
        CMP      r6,r8
        BCC      |L16.180|
        B        |L16.216|
|L16.180|
        ADDS     r0,r7,r6
        LDR      r2,[r4,#0x10]
        LDR      r1,[sp,#4]
        BL       __aeabi_memcpy
        LDR      r0,[r4,#0x10]
        ADD      r6,r6,r0
        MOVS     r2,#0
        MOV      r1,r4
        LDR      r0,[sp,#0xc]
        BL       ENET_UpdateReadBuffers
|L16.204|
        LDR      r5,[r4,#4]
        LDR      r0,[r5,#4]
        STR      r0,[sp,#4]
|L16.210|
        CMP      r11,#0
        BEQ      |L16.110|
|L16.216|
        NOP      
        MOV      r0,#0xfa1
        B        |L16.98|
        ENDP

|L16.224|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L16.268|
        DCB      "handle",0
        DCB      0
|L16.276|
        DCB      "handle->rxBdCurrent[0]",0
        DCB      0

        AREA ||i.ENET_ReceiveIRQHandler||, CODE, READONLY, ALIGN=2

ENET_ReceiveIRQHandler PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L17.12|
        B        |L17.24|
|L17.12|
        MOV      r2,#0xc03
        ADR      r1,|L17.60|
        ADR      r0,|L17.104|
        BL       __aeabi_assert
|L17.24|
        MOV      r6,#0x3000000
        B        |L17.48|
|L17.30|
        STR      r6,[r5,#4]
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L17.48|
        MOVS     r2,#0
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r7,r3,[r4,#0x1c]
        BLX      r7
|L17.48|
        LDR      r0,[r5,#4]
        ANDS     r0,r0,r6
        CMP      r0,#0
        BNE      |L17.30|
        POP      {r4-r8,pc}
        ENDP

|L17.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L17.104|
        DCB      "handle",0
        DCB      0

        AREA ||i.ENET_Receive_IRQHandler||, CODE, READONLY, ALIGN=2

ENET_Receive_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L18.32|
        LDR      r1,[r0,#0]  ; s_ENETHandle
        LDR      r0,|L18.36|
        LDR      r2,|L18.40|
        LDR      r2,[r2,#0]  ; s_enetRxIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L18.32|
        DCD      s_ENETHandle
|L18.36|
        DCD      0x400c0000
|L18.40|
        DCD      s_enetRxIsr

        AREA ||i.ENET_SendFrame||, CODE, READONLY, ALIGN=2

ENET_SendFrame PROC
        PUSH     {r4-r12,lr}
        MOV      r11,r0
        MOV      r5,r1
        MOV      r7,r2
        MOV      r6,r3
        CBZ      r5,|L19.16|
        B        |L19.28|
|L19.16|
        MOV      r2,#0x5f3
        ADR      r1,|L19.280|
        ADR      r0,|L19.324|
        BL       __aeabi_assert
|L19.28|
        CBZ      r7,|L19.32|
        B        |L19.44|
|L19.32|
        MOV      r2,#0x5f4
        ADR      r1,|L19.280|
        ADR      r0,|L19.332|
        BL       __aeabi_assert
|L19.44|
        MOV      r8,#0
        MOV      r9,r8
        MOV      r0,#0x5ee
        CMP      r6,r0
        BLS      |L19.66|
        MOV      r0,#0xfa3
|L19.62|
        POP      {r4-r12,pc}
|L19.66|
        LDR      r4,[r5,#0xc]
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x8000
        CBZ      r0,|L19.82|
        MOV      r0,#0xfa4
        B        |L19.62|
|L19.82|
        LDR      r0,[r5,#0x14]
        CMP      r0,r6
        BCC      |L19.144|
        LDR      r10,[r4,#4]
        MOV      r2,r6
        MOV      r1,r7
        MOV      r0,r10
        BL       __aeabi_memcpy
        STRH     r6,[r4,#0]
        LDRH     r0,[r4,#2]
        ORR      r0,r0,#0x8800
        STRH     r0,[r4,#2]
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x2000
        CBZ      r0,|L19.126|
        LDR      r0,[r5,#8]
        STR      r0,[r5,#0xc]
        B        |L19.132|
|L19.126|
        LDR      r0,[r5,#0xc]
        ADDS     r0,r0,#8
        STR      r0,[r5,#0xc]
|L19.132|
        MOVS     r1,#0
        MOV      r0,r11
        BL       ENET_ActiveSend
        MOVS     r0,#0
        B        |L19.62|
|L19.144|
        NOP      
|L19.146|
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x2000
        CBZ      r0,|L19.160|
        LDR      r0,[r5,#8]
        STR      r0,[r5,#0xc]
        B        |L19.166|
|L19.160|
        LDR      r0,[r5,#0xc]
        ADDS     r0,r0,#8
        STR      r0,[r5,#0xc]
|L19.166|
        SUB      r9,r6,r8
        LDR      r10,[r4,#4]
        LDR      r0,[r5,#0x14]
        CMP      r0,r9
        BCS      |L19.226|
        ADD      r1,r7,r8
        MOV      r0,r10
        LDR      r2,[r5,#0x14]
        BL       __aeabi_memcpy
        LDRH     r0,[r5,#0x14]
        STRH     r0,[r4,#0]
        LDR      r0,[r5,#0x14]
        ADD      r8,r8,r0
        LDRH     r0,[r4,#2]
        BIC      r0,r0,#0x800
        STRH     r0,[r4,#2]
        LDRH     r0,[r4,#2]
        ORR      r0,r0,#0x8000
        STRH     r0,[r4,#2]
        MOVS     r1,#0
        MOV      r0,r11
        BL       ENET_ActiveSend
        B        |L19.262|
|L19.226|
        ADD      r1,r7,r8
        MOV      r2,r9
        MOV      r0,r10
        BL       __aeabi_memcpy
        STRH     r9,[r4,#0]
        LDRH     r0,[r4,#2]
        ORR      r0,r0,#0x8800
        STRH     r0,[r4,#2]
        MOVS     r1,#0
        MOV      r0,r11
        BL       ENET_ActiveSend
        MOVS     r0,#0
        B        |L19.62|
|L19.262|
        LDR      r4,[r5,#0xc]
        LDRH     r0,[r4,#2]
        AND      r0,r0,#0x8000
        CMP      r0,#0
        BEQ      |L19.146|
        MOV      r0,#0xfa4
        B        |L19.62|
        ENDP

|L19.280|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L19.324|
        DCB      "handle",0
        DCB      0
|L19.332|
        DCB      "data",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.ENET_SetCallback||, CODE, READONLY, ALIGN=2

ENET_SetCallback PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        CBZ      r4,|L20.12|
        B        |L20.24|
|L20.12|
        MOV      r2,#0x1c3
        ADR      r1,|L20.32|
        ADR      r0,|L20.76|
        BL       __aeabi_assert
|L20.24|
        STR      r6,[r4,#0x1c]
        STR      r5,[r4,#0x20]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L20.32|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L20.76|
        DCB      "handle",0
        DCB      0

        AREA ||i.ENET_SetHandler||, CODE, READONLY, ALIGN=2

ENET_SetHandler PROC
        PUSH     {r4-r10,lr}
        MOV      r10,r0
        MOV      r4,r1
        MOV      r7,r2
        MOV      r9,r3
        MOV      r0,r10
        BL       ENET_GetInstance
        MOV      r8,r0
        MOV      r6,r9
        MOVS     r1,#0x24
        MOV      r0,r4
        BL       __aeabi_memclr4
        LDRB     r0,[r7,#0x16]
        CMP      r0,#1
        BLE      |L21.40|
        MOVS     r0,#1
        B        |L21.42|
|L21.40|
        LDRB     r0,[r7,#0x16]
|L21.42|
        STRB     r0,[r4,#0x18]
        MOVS     r5,#0
        B        |L21.126|
|L21.48|
        LDRH     r1,[r6,#0]
        LDR      r0,[r6,#4]
        MULS     r0,r1,r0
        LDRH     r1,[r7,#8]
        CMP      r0,r1
        BLS      |L21.62|
        B        |L21.74|
|L21.62|
        MOV      r2,#0x1d9
        ADR      r1,|L21.216|
        LDR      r0,|L21.260|
        BL       __aeabi_assert
|L21.74|
        LDR      r0,[r6,#0xc]
        STR      r0,[r4,r5,LSL #2]
        ADDS     r0,r4,#4
        LDR      r1,[r6,#0xc]
        STR      r1,[r0,r5,LSL #2]
        ADDS     r0,r0,#0xc
        LDR      r1,[r6,#4]
        STR      r1,[r0,r5,LSL #2]
        SUBS     r0,r0,#8
        LDR      r1,[r6,#0x10]
        STR      r1,[r0,r5,LSL #2]
        ADDS     r0,r0,#4
        LDR      r1,[r6,#0x10]
        STR      r1,[r0,r5,LSL #2]
        ADDS     r0,r0,#8
        LDR      r1,[r6,#8]
        STR      r1,[r0,r5,LSL #2]
        ADDS     r6,r6,#0x1c
        ADDS     r0,r5,#1
        UXTB     r5,r0
|L21.126|
        LDRB     r0,[r4,#0x18]
        CMP      r0,r5
        BGT      |L21.48|
        LDR      r0,|L21.264|
        STR      r4,[r0,r8,LSL #2]
        LDR      r0,[r7,#4]
        AND      r0,r0,#0xc000000
        CBZ      r0,|L21.162|
        LDR      r0,|L21.268|
        LDR      r1,|L21.272|
        STR      r0,[r1,#0]  ; s_enetTxIsr
        LDR      r1,|L21.276|
        LDRSB    r0,[r1,r8]
        BL       EnableIRQ
|L21.162|
        LDR      r0,[r7,#4]
        AND      r0,r0,#0x3000000
        CBZ      r0,|L21.186|
        LDR      r0,|L21.280|
        LDR      r1,|L21.284|
        STR      r0,[r1,#0]  ; s_enetRxIsr
        LDR      r1,|L21.288|
        LDRSB    r0,[r1,r8]
        BL       EnableIRQ
|L21.186|
        LDR      r1,|L21.292|
        LDR      r0,[r7,#4]
        ANDS     r0,r0,r1
        CBZ      r0,|L21.210|
        LDR      r0,|L21.296|
        LDR      r1,|L21.300|
        STR      r0,[r1,#0]  ; s_enetErrIsr
        LDR      r1,|L21.304|
        LDRSB    r0,[r1,r8]
        BL       EnableIRQ
|L21.210|
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L21.216|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L21.260|
        DCD      ||.conststring||
|L21.264|
        DCD      s_ENETHandle
|L21.268|
        DCD      ENET_TransmitIRQHandler
|L21.272|
        DCD      s_enetTxIsr
|L21.276|
        DCD      s_enetTxIrqId
|L21.280|
        DCD      ENET_ReceiveIRQHandler
|L21.284|
        DCD      s_enetRxIsr
|L21.288|
        DCD      s_enetRxIrqId
|L21.292|
        DCD      0x607c0000
|L21.296|
        DCD      ENET_ErrorIRQHandler
|L21.300|
        DCD      s_enetErrIsr
|L21.304|
        DCD      s_enetErrIrqId

        AREA ||i.ENET_SetMII||, CODE, READONLY, ALIGN=1

ENET_SetMII PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r1
        MOV      r4,r2
        LDR      r1,[r0,#0x84]
        LDR      r2,[r0,#0xc4]
        CBNZ     r3,|L22.22|
        ORR      r1,r1,#0x200
        B        |L22.26|
|L22.22|
        BIC      r1,r1,#0x200
|L22.26|
        CBNZ     r4,|L22.38|
        ORR      r1,r1,#2
        BIC      r2,r2,#4
        B        |L22.46|
|L22.38|
        BIC      r1,r1,#2
        ORR      r2,r2,#4
|L22.46|
        STR      r1,[r0,#0x84]
        STR      r2,[r0,#0xc4]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.ENET_SetMacAddr||, CODE, READONLY, ALIGN=1

ENET_SetMacAddr PROC
        PUSH     {r4,lr}
        LDRB     r3,[r1,#0]
        LSLS     r3,r3,#24
        LDRB     r4,[r1,#1]
        ORR      r3,r3,r4,LSL #16
        LDRB     r4,[r1,#2]
        ORR      r3,r3,r4,LSL #8
        LDRB     r4,[r1,#3]
        ORR      r2,r3,r4
        STR      r2,[r0,#0xe4]
        LDRB     r3,[r1,#5]
        LDRB     r4,[r1,#4]
        ORR      r2,r3,r4,LSL #8
        LSLS     r3,r2,#16
        STR      r3,[r0,#0xe8]
        POP      {r4,pc}
        ENDP


        AREA ||i.ENET_SetMacController||, CODE, READONLY, ALIGN=2

ENET_SetMacController PROC
        PUSH     {r4-r12,lr}
        MOV      r4,r0
        MOV      r5,r2
        MOV      r8,r3
        MOVS     r7,#0
        MOV      r9,r7
        LDR      r10,[r4,#0x24]
        LDR      r6,[r5,#0]
        LDRH     r11,[r5,#8]
        AND      r0,r6,#0x200
        CBZ      r0,|L24.42|
        MOV      r0,#0x5ee
        CMP      r11,r0
        BHI      |L24.42|
        MOV      r11,#0x5f2
|L24.42|
        AND      r0,r6,#2
        CBZ      r0,|L24.54|
        MOV      r0,#0x40000000
        B        |L24.56|
|L24.54|
        MOVS     r0,#0
|L24.56|
        AND      r1,r6,#1
        CBZ      r1,|L24.68|
        MOV      r1,#0x8000
        B        |L24.70|
|L24.68|
        MOVS     r1,#0
|L24.70|
        ORRS     r0,r0,r1
        AND      r1,r6,#1
        CBZ      r1,|L24.82|
        MOVS     r1,#0x20
        B        |L24.84|
|L24.82|
        MOVS     r1,#0
|L24.84|
        ORRS     r0,r0,r1
        AND      r1,r6,#4
        CBZ      r1,|L24.98|
        MOV      r1,#0x1000
        B        |L24.100|
|L24.98|
        MOVS     r1,#0
|L24.100|
        ORRS     r0,r0,r1
        AND      r1,r6,#8
        CBZ      r1,|L24.112|
        MOVS     r1,#0x10
        B        |L24.114|
|L24.112|
        MOVS     r1,#0
|L24.114|
        ORRS     r0,r0,r1
        AND      r1,r6,#0x80
        CBZ      r1,|L24.126|
        MOVS     r1,#8
        B        |L24.128|
|L24.126|
        MOVS     r1,#0
|L24.128|
        ORRS     r0,r0,r1
        LDR      r1,|L24.440|
        AND      r1,r1,r11,LSL #16
        ORRS     r0,r0,r1
        ORR      r7,r0,#0x4000
        ORR      r7,r7,#4
        LDRB     r0,[r5,#0xa]
        CMP      r0,#1
        BNE      |L24.156|
        ORR      r7,r7,#0x100
|L24.156|
        LDRB     r0,[r5,#0xb]
        CBNZ     r0,|L24.164|
        ORR      r7,r7,#0x200
|L24.164|
        LDRB     r0,[r5,#0xc]
        CBNZ     r0,|L24.172|
        ORR      r7,r7,#2
|L24.172|
        LDRH     r0,[r5,#0]
        AND      r0,r0,#0x100
        CBZ      r0,|L24.194|
        LDRB     r0,[r5,#0xa]
        CMP      r0,#1
        BEQ      |L24.194|
        ORR      r7,r7,#1
        BIC      r7,r7,#2
|L24.194|
        STR      r7,[r4,#0x84]
        LDR      r0,[r4,#0xc4]
        BIC      r9,r0,#0x104
        LDRB     r0,[r5,#0xc]
        CBZ      r0,|L24.214|
        MOVS     r0,#4
        B        |L24.216|
|L24.214|
        MOVS     r0,#0
|L24.216|
        AND      r1,r6,#0x10
        CBZ      r1,|L24.228|
        MOV      r1,#0x100
        B        |L24.230|
|L24.228|
        MOVS     r1,#0
|L24.230|
        ORRS     r0,r0,r1
        ORR      r9,r0,r9
        STR      r9,[r4,#0xc4]
        LDRB     r0,[r5,#0xe]
        STR      r0,[r4,#0x1c0]
        LDRB     r0,[r5,#0xd]
        STR      r0,[r4,#0x1c4]
        AND      r0,r6,#1
        CBZ      r0,|L24.284|
        LDRH     r1,[r5,#0x10]
        STR      r1,[r4,#0xec]
        LDRB     r0,[r5,#0x12]
        LDRB     r1,[r5,#0x13]
        MOV      r2,#0x1f0000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x194]
        NOP      
|L24.284|
        AND      r0,r6,#0x20
        CBZ      r0,|L24.308|
        LDRB     r0,[r5,#0x15]
        AND      r0,r0,#0x3f
        STR      r0,[r4,#0x144]
        LDRB     r0,[r5,#0x14]
        STR      r0,[r4,#0x190]
        B        |L24.322|
|L24.308|
        MOV      r0,#0x100
        STR      r0,[r4,#0x144]
        MOVS     r0,#0
        STR      r0,[r4,#0x190]
|L24.322|
        LDRB     r0,[r5,#0xe]
        AND      r0,r0,#0x18
        CBZ      r0,|L24.338|
        MOV      r0,#0x100
        STR      r0,[r4,#0x144]
|L24.338|
        LDRB     r0,[r5,#0xd]
        AND      r0,r0,#6
        CBZ      r0,|L24.352|
        MOVS     r0,#0
        STR      r0,[r4,#0x190]
|L24.352|
        LDR      r0,[r8,#0x10]
        STR      r0,[r4,#0x184]
        LDR      r0,[r8,#0xc]
        STR      r0,[r4,#0x180]
        LDR      r0,[r8,#4]
        STR      r0,[r4,#0x188]
        MOV      r0,r4
        LDR      r1,[sp,#0x28]
        BL       ENET_SetMacAddr
        NOP      
        LDR      r0,[r4,#0x44]
        AND      r0,r0,#0x7e
        CBZ      r0,|L24.398|
        MOVS     r0,#1
        B        |L24.400|
|L24.398|
        MOVS     r0,#0
|L24.400|
        CBNZ     r0,|L24.416|
        LDRB     r0,[r5,#0]
        UBFX     r2,r0,#6,#1
        MOV      r0,r4
        LDR      r1,[sp,#0x2c]
        BL       ENET_SetSMI
|L24.416|
        LDR      r0,[r5,#4]
        LDR      r1,[r4,#8]
        ORRS     r1,r1,r0
        STR      r1,[r4,#8]
        NOP      
        ORR      r10,r10,#0x102
        STR      r10,[r4,#0x24]
        POP      {r4-r12,pc}
        ENDP

        DCW      0x0000
|L24.440|
        DCD      0x3fff0000

        AREA ||i.ENET_SetRxBufferDescriptors||, CODE, READONLY, ALIGN=2

ENET_SetRxBufferDescriptors PROC
        PUSH     {r4-r12,lr}
        MOV      r11,r0
        MOV      r6,r1
        MOV      r7,r2
        CBZ      r6,|L25.14|
        B        |L25.26|
|L25.14|
        MOV      r2,#0x327
        ADR      r1,|L25.156|
        ADR      r0,|L25.200|
        BL       __aeabi_assert
|L25.26|
        CBZ      r7,|L25.30|
        B        |L25.42|
|L25.30|
        MOV      r2,#0x328
        ADR      r1,|L25.156|
        ADR      r0,|L25.208|
        BL       __aeabi_assert
|L25.42|
        MOV      r4,r7
        MOV      r8,#0
        B        |L25.146|
|L25.50|
        LDR      r0,[r4,#4]
        CMP      r0,#0xff
        BLS      |L25.58|
        B        |L25.70|
|L25.58|
        MOV      r2,#0x337
        ADR      r1,|L25.156|
        ADR      r0,|L25.224|
        BL       __aeabi_assert
|L25.70|
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L25.136|
        LDR      r0,[r4,#0x14]
        CBZ      r0,|L25.136|
        LDR      r0,[r4,#0xc]
        LDR      r9,[r4,#4]
        LDR      r10,[r4,#0x14]
        MOVS     r5,#0
        B        |L25.128|
|L25.92|
        MLA      r1,r5,r9,r10
        STR      r1,[r0,#4]
        MOVS     r1,#0
        STRH     r1,[r0,#0]
        MOV      r1,#0x8000
        STRH     r1,[r0,#2]
        LDRH     r1,[r4,#0]
        SUBS     r1,r1,#1
        CMP      r1,r5
        BNE      |L25.124|
        LDRH     r1,[r0,#2]
        ORR      r1,r1,#0x2000
        STRH     r1,[r0,#2]
|L25.124|
        ADDS     r0,r0,#8
        ADDS     r5,r5,#1
|L25.128|
        LDRH     r1,[r4,#0]
        CMP      r1,r5
        BHI      |L25.92|
        NOP      
|L25.136|
        ADDS     r4,r4,#0x1c
        ADD      r0,r8,#1
        AND      r8,r0,#0xff
|L25.146|
        LDRB     r0,[r6,#0x16]
        CMP      r0,r8
        BGT      |L25.50|
        POP      {r4-r12,pc}
        ENDP

|L25.156|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L25.200|
        DCB      "config",0
        DCB      0
|L25.208|
        DCB      "bufferConfig",0
        DCB      0
        DCB      0
        DCB      0
|L25.224|
        DCB      "buffCfg->rxBuffSizeAlign >= ENET_RX_MIN_BUFFERSIZE",0
        DCB      0

        AREA ||i.ENET_SetSMI||, CODE, READONLY, ALIGN=2

ENET_SetSMI PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        CBZ      r4,|L26.14|
        B        |L26.26|
|L26.14|
        MOV      r2,#0x3ff
        ADR      r1,|L26.96|
        ADR      r0,|L26.140|
        BL       __aeabi_assert
|L26.26|
        MOV      r8,#0
        MOV      r9,r8
        MOVS     r7,#0
        LDR      r0,|L26.152|
        UDIV     r9,r4,r0
        LDR      r0,|L26.156|
        UDIV     r0,r0,r4
        ADDS     r0,r0,#9
        LDR      r1,|L26.156|
        UDIV     r1,r1,r4
        UDIV     r0,r0,r1
        SUB      r8,r0,#1
        MOVS     r0,#0x7e
        AND      r0,r0,r9,LSL #1
        MOV      r1,#0x700
        AND      r1,r1,r8,LSL #8
        ORRS     r0,r0,r1
        CBZ      r6,|L26.84|
        MOVS     r1,#0x80
        B        |L26.86|
|L26.84|
        MOVS     r1,#0
|L26.86|
        ORR      r7,r0,r1
        STR      r7,[r5,#0x44]
        POP      {r4-r10,pc}
        ENDP

|L26.96|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L26.140|
        DCB      "srcClock_Hz",0
|L26.152|
        DCD      0x004c4b40
|L26.156|
        DCD      0x3b9aca00

        AREA ||i.ENET_SetTxBufferDescriptors||, CODE, READONLY, ALIGN=2

ENET_SetTxBufferDescriptors PROC
        PUSH     {r4-r12,lr}
        MOV      r11,r0
        MOV      r6,r1
        MOV      r7,r2
        CBZ      r6,|L27.14|
        B        |L27.26|
|L27.14|
        MOV      r2,#0x2ef
        ADR      r1,|L27.136|
        ADR      r0,|L27.180|
        BL       __aeabi_assert
|L27.26|
        CBZ      r7,|L27.30|
        B        |L27.42|
|L27.30|
        MOV      r2,#0x2f0
        ADR      r1,|L27.136|
        ADR      r0,|L27.188|
        BL       __aeabi_assert
|L27.42|
        MOV      r4,r7
        MOV      r8,#0
        B        |L27.126|
|L27.50|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L27.116|
        LDR      r0,[r4,#0x18]
        CBZ      r0,|L27.116|
        LDR      r0,[r4,#0x10]
        LDR      r9,[r4,#8]
        LDR      r10,[r4,#0x18]
        MOVS     r5,#0
        B        |L27.108|
|L27.72|
        MLA      r1,r5,r9,r10
        STR      r1,[r0,#4]
        MOVS     r1,#0
        STRH     r1,[r0,#0]
        MOV      r1,#0x400
        STRH     r1,[r0,#2]
        LDRH     r1,[r4,#2]
        SUBS     r1,r1,#1
        CMP      r1,r5
        BNE      |L27.104|
        LDRH     r1,[r0,#2]
        ORR      r1,r1,#0x2000
        STRH     r1,[r0,#2]
|L27.104|
        ADDS     r0,r0,#8
        ADDS     r5,r5,#1
|L27.108|
        LDRH     r1,[r4,#2]
        CMP      r1,r5
        BHI      |L27.72|
        NOP      
|L27.116|
        ADDS     r4,r4,#0x1c
        ADD      r0,r8,#1
        AND      r8,r0,#0xff
|L27.126|
        LDRB     r0,[r6,#0x16]
        CMP      r0,r8
        BGT      |L27.50|
        POP      {r4-r12,pc}
        ENDP

|L27.136|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L27.180|
        DCB      "config",0
        DCB      0
|L27.188|
        DCB      "bufferConfig",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.ENET_StartSMIRead||, CODE, READONLY, ALIGN=1

ENET_StartSMIRead PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,#0
        MOV      r5,#0x30000000
        AND      r5,r5,r3,LSL #28
        ORR      r5,r5,#0x40000000
        MOV      r6,#0xf800000
        AND      r6,r6,r1,LSL #23
        ORRS     r5,r5,r6
        MOV      r6,#0x7c0000
        AND      r6,r6,r2,LSL #18
        ORRS     r5,r5,r6
        ORR      r4,r5,#0x20000
        STR      r4,[r0,#0x40]
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.ENET_StartSMIWrite||, CODE, READONLY, ALIGN=1

ENET_StartSMIWrite PROC
        PUSH     {r4-r7,lr}
        LDR      r4,[sp,#0x14]
        MOVS     r5,#0
        MOV      r6,#0x30000000
        AND      r6,r6,r3,LSL #28
        ORR      r6,r6,#0x40000000
        MOV      r7,#0xf800000
        AND      r7,r7,r1,LSL #23
        ORRS     r6,r6,r7
        MOV      r7,#0x7c0000
        AND      r7,r7,r2,LSL #18
        ORRS     r6,r6,r7
        ORR      r6,r6,#0x20000
        UXTH     r7,r4
        ORR      r5,r6,r7
        STR      r5,[r0,#0x40]
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.ENET_TransmitIRQHandler||, CODE, READONLY, ALIGN=2

ENET_TransmitIRQHandler PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L30.12|
        B        |L30.24|
|L30.12|
        MOV      r2,#0xbc2
        ADR      r1,|L30.60|
        ADR      r0,|L30.104|
        BL       __aeabi_assert
|L30.24|
        MOV      r6,#0xc000000
        B        |L30.48|
|L30.30|
        STR      r6,[r5,#4]
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L30.48|
        MOVS     r2,#1
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r7,r3,[r4,#0x1c]
        BLX      r7
|L30.48|
        LDR      r0,[r5,#4]
        ANDS     r0,r0,r6
        CMP      r0,#0
        BNE      |L30.30|
        POP      {r4-r8,pc}
        ENDP

|L30.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L30.104|
        DCB      "handle",0
        DCB      0

        AREA ||i.ENET_Transmit_IRQHandler||, CODE, READONLY, ALIGN=2

ENET_Transmit_IRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L31.32|
        LDR      r1,[r0,#0]  ; s_ENETHandle
        LDR      r0,|L31.36|
        LDR      r2,|L31.40|
        LDR      r2,[r2,#0]  ; s_enetTxIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L31.32|
        DCD      s_ENETHandle
|L31.36|
        DCD      0x400c0000
|L31.40|
        DCD      s_enetTxIsr

        AREA ||i.ENET_UpdateReadBuffers||, CODE, READONLY, ALIGN=2

ENET_UpdateReadBuffers PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        CBZ      r5,|L32.12|
        B        |L32.24|
|L32.12|
        MOV      r2,#0x5b8
        ADR      r1,|L32.160|
        ADR      r0,|L32.204|
        BL       __aeabi_assert
|L32.24|
        CBNZ     r4,|L32.28|
        B        |L32.40|
|L32.28|
        MOV      r2,#0x5b9
        ADR      r1,|L32.160|
        ADR      r0,|L32.212|
        BL       __aeabi_assert
|L32.40|
        ADDS     r0,r5,#4
        LDR      r0,[r0,r4,LSL #2]
        LDRH     r0,[r0,#2]
        AND      r1,r0,#0x2000
        ADDS     r0,r5,#4
        LDR      r0,[r0,r4,LSL #2]
        STRH     r1,[r0,#2]
        ADDS     r0,r5,#4
        LDR      r0,[r0,r4,LSL #2]
        LDRH     r0,[r0,#2]
        ORR      r1,r0,#0x8000
        ADDS     r0,r5,#4
        LDR      r0,[r0,r4,LSL #2]
        STRH     r1,[r0,#2]
        ADDS     r0,r5,#4
        LDR      r0,[r0,r4,LSL #2]
        LDRH     r0,[r0,#2]
        AND      r0,r0,#0x2000
        CBZ      r0,|L32.106|
        LDR      r1,[r5,r4,LSL #2]
        ADDS     r0,r5,#4
        STR      r1,[r0,r4,LSL #2]
        B        |L32.120|
|L32.106|
        ADDS     r0,r5,#4
        LDR      r0,[r0,r4,LSL #2]
        ADDS     r0,r0,#8
        ADDS     r1,r5,#4
        STR      r0,[r1,r4,LSL #2]
|L32.120|
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        CBNZ     r4,|L32.146|
        MOV      r0,#0x1000000
        STR      r0,[r6,#0x10]
        B        |L32.154|
|L32.146|
        MOV      r0,#0x1000000
        STR      r0,[r6,#0x10]
        NOP      
|L32.154|
        NOP      
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L32.160|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c",0
        DCB      0
        DCB      0
        DCB      0
|L32.204|
        DCB      "handle",0
        DCB      0
|L32.212|
        DCB      "ringId < FSL_FEATURE_ENET_QUEUE",0

        AREA ||i.EnableIRQ||, CODE, READONLY, ALIGN=1

EnableIRQ PROC
        MOV      r1,r0
        CMN      r1,#0x80
        BNE      |L33.12|
        MOVS     r0,#1
|L33.10|
        BX       lr
|L33.12|
        MOV      r0,r1
        CMP      r0,#0
        BLT      |L33.38|
        AND      r3,r0,#0x1f
        MOVS     r2,#1
        LSLS     r2,r2,r3
        LSRS     r3,r0,#5
        LSLS     r3,r3,#2
        ADD      r3,r3,#0xe000e000
        STR      r2,[r3,#0x100]
|L33.38|
        NOP      
        MOVS     r0,#0
        B        |L33.10|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_enetClock
        DCD      0x102c0000
s_enetTxIrqId
        DCB      0x53
s_enetRxIrqId
        DCB      0x54
s_enetErrIrqId
        DCB      0x55,0x00
s_enetBases
        DCD      0x400c0000

        AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

        DCB      "buffCfg->rxBuffSizeAlign * buffCfg->rxBdNumber > config"
        DCB      "->rxMaxFrameLen",0

        AREA ||.data||, DATA, ALIGN=2

s_ENETHandle
        DCD      0x00000000
s_enetTxIsr
        DCD      0x00000000
s_enetRxIsr
        DCD      0x00000000
s_enetErrIsr
        DCD      0x00000000
s_enetTsIsr
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_enet.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_enet_c_676864a7____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_fsl_enet_c_676864a7____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_enet_c_676864a7____REVSH|
#line 483
|__asm___10_fsl_enet_c_676864a7____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_enet_c_676864a7____RRX|
#line 670
|__asm___10_fsl_enet_c_676864a7____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT ENET_1588_Timer_IRQHandler [CODE]
        EXPORT ENET_AddMulticastGroup [CODE]
        EXPORT ENET_CommonFrame0IRQHandler [CODE]
        EXPORT ENET_Deinit [CODE]
        EXPORT ENET_DriverIRQHandler [CODE]
        EXPORT ENET_ErrorIRQHandler [CODE]
        EXPORT ENET_Error_IRQHandler [CODE]
        EXPORT ENET_GetDefaultConfig [CODE]
        EXPORT ENET_GetInstance [CODE]
        EXPORT ENET_GetMacAddr [CODE]
        EXPORT ENET_GetRxErrBeforeReadFrame [CODE]
        EXPORT ENET_GetRxFrameSize [CODE]
        EXPORT ENET_Init [CODE]
        EXPORT ENET_LeaveMulticastGroup [CODE]
        EXPORT ENET_ReadFrame [CODE]
        EXPORT ENET_ReceiveIRQHandler [CODE]
        EXPORT ENET_Receive_IRQHandler [CODE]
        EXPORT ENET_SendFrame [CODE]
        EXPORT ENET_SetCallback [CODE]
        EXPORT ENET_SetMII [CODE]
        EXPORT ENET_SetMacAddr [CODE]
        EXPORT ENET_SetSMI [CODE]
        EXPORT ENET_StartSMIRead [CODE]
        EXPORT ENET_StartSMIWrite [CODE]
        EXPORT ENET_TransmitIRQHandler [CODE]
        EXPORT ENET_Transmit_IRQHandler [CODE]
        EXPORT s_enetClock [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT __aeabi_memclr4 [CODE]
        IMPORT __aeabi_memcpy [CODE]

        KEEP ENET_ActiveSend
        KEEP ENET_SetHandler
        KEEP ENET_SetMacController
        KEEP ENET_SetRxBufferDescriptors
        KEEP ENET_SetTxBufferDescriptors
        KEEP ENET_UpdateReadBuffers
        KEEP EnableIRQ
        KEEP s_enetTxIrqId
        KEEP s_enetRxIrqId
        KEEP s_enetErrIrqId
        KEEP s_enetBases
        KEEP s_ENETHandle
        KEEP s_enetTxIsr
        KEEP s_enetRxIsr
        KEEP s_enetErrIsr
        KEEP s_enetTsIsr

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
