; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\i2commands.o --depend=.\objects\i2commands.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\i2commands.crf ..\..\I2Commands\I2Commands.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.ActivateSlaveSpi||, CODE, READONLY, ALIGN=2

ActivateSlaveSpi PROC
        PUSH     {r4,lr}
        MOVS     r4,#0
        MOVS     r0,#0
        BL       SendSpi
        B        |L1.24|
|L1.12|
        MOVS     r0,#0x81
        BL       SendSpi
        BL       ReadSpi
        UXTB     r4,r0
|L1.24|
        CMP      r4,#0
        BEQ      |L1.12|
        LDR      r0,|L1.36|
        BL       SetConvRate
        POP      {r4,pc}
        ENDP

|L1.36|
        DCD      0x0007a120

        AREA ||i.ChnlEnable||, CODE, READONLY, ALIGN=2

ChnlEnable PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        CMP      r4,#1
        BGE      |L2.14|
        CMP      r4,#3
        BLE      |L2.14|
|L2.12|
        POP      {r3-r5,pc}
|L2.14|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r5,#0
        NOP      
|L2.22|
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        BIC      r0,r0,#0xc0
        STR      r0,[sp,#0]
        CMP      r4,#1
        BEQ      |L2.54|
        CMP      r4,#2
        BEQ      |L2.86|
        CMP      r4,#3
        BNE      |L2.146|
        B        |L2.116|
|L2.54|
        LDRB     r0,[sp,#0]
        ORR      r5,r0,#0x40
        MOVS     r0,#1
        LDR      r1,|L2.172|
        STRB     r0,[r1,#1]
        MOVS     r0,#0
        STRB     r0,[r1,#2]
        MOVS     r0,#1
        STR      r0,[r1,#8]  ; spiI2Props
        MOV      r1,r5
        MOVS     r0,#4
        BL       WriteReg8
        B        |L2.146|
|L2.86|
        LDRB     r0,[sp,#0]
        ORR      r5,r0,#0x80
        MOVS     r0,#0
        LDR      r1,|L2.172|
        STRB     r0,[r1,#1]
        MOVS     r0,#1
        STRB     r0,[r1,#2]
        STR      r0,[r1,#8]  ; spiI2Props
        MOV      r1,r5
        MOVS     r0,#4
        BL       WriteReg8
        B        |L2.146|
|L2.116|
        LDRB     r0,[sp,#0]
        ORR      r5,r0,#0xc0
        MOVS     r0,#1
        LDR      r1,|L2.172|
        STRB     r0,[r1,#1]
        STRB     r0,[r1,#2]
        MOVS     r0,#2
        STR      r0,[r1,#8]  ; spiI2Props
        MOV      r1,r5
        MOVS     r0,#4
        BL       WriteReg8
        NOP      
|L2.146|
        NOP      
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        CMP      r5,r0
        BEQ      |L2.166|
        B        |L2.22|
|L2.166|
        NOP      
        B        |L2.12|
        ENDP

        DCW      0x0000
|L2.172|
        DCD      spiI2Props

        AREA ||i.EnableContMode||, CODE, READONLY, ALIGN=2

EnableContMode PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r4,#0
        NOP      
|L3.12|
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        CBZ      r5,|L3.38|
        LDRB     r0,[sp,#0]
        ORR      r4,r0,#0x20
        MOVS     r0,#1
        LDR      r1,|L3.80|
        STRB     r0,[r1,#3]
        B        |L3.52|
|L3.38|
        LDRB     r0,[sp,#0]
        BIC      r4,r0,#0x20
        MOVS     r0,#0
        LDR      r1,|L3.80|
        STRB     r0,[r1,#3]
|L3.52|
        MOV      r1,r4
        MOVS     r0,#4
        BL       WriteReg8
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        CMP      r4,r0
        BEQ      |L3.78|
        B        |L3.12|
|L3.78|
        POP      {r3-r5,pc}
        ENDP

|L3.80|
        DCD      spiI2Props

        AREA ||i.FrameSizeSet||, CODE, READONLY, ALIGN=2

FrameSizeSet PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#1
        LDR      r1,|L4.132|
        STRB     r0,[r1,#0]
        LDR      r0,|L4.136|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#0x10
        BNE      |L4.68|
        CMP      r4,#8
        BNE      |L4.68|
        BL       WaitTillIdle
        MOVS     r1,#0
        MOVS     r0,#3
        BL       WriteReg16
        LDR      r0,|L4.140|
        LDR      r0,[r0,#0xc]
        BIC      r5,r0,#0x78000000
        SUBS     r0,r4,#1
        MOV      r1,#0x78000000
        AND      r0,r1,r0,LSL #27
        ORRS     r0,r0,r5
        LDR      r1,|L4.140|
        STR      r0,[r1,#0xc]
        MOVS     r0,#8
        LDR      r1,|L4.136|
        STRB     r0,[r1,#0]
        B        |L4.120|
|L4.68|
        LDR      r0,|L4.136|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#8
        BNE      |L4.120|
        CMP      r4,#0x10
        BNE      |L4.120|
        BL       WaitTillIdle
        MOVS     r1,#1
        MOVS     r0,#3
        BL       WriteReg8
        LDR      r0,|L4.140|
        LDR      r0,[r0,#0xc]
        BIC      r5,r0,#0x78000000
        SUBS     r0,r4,#1
        LSLS     r1,r0,#27
        AND      r0,r1,r0,LSL #27
        ORRS     r0,r0,r5
        LDR      r1,|L4.140|
        STR      r0,[r1,#0xc]
        MOVS     r0,#0x10
        LDR      r1,|L4.136|
        STRB     r0,[r1,#0]
|L4.120|
        MOVS     r0,#0
        LDR      r1,|L4.132|
        STRB     r0,[r1,#0]
        BL       WaitTillIdle
        POP      {r4-r6,pc}
        ENDP

|L4.132|
        DCD      frmSizeChange
|L4.136|
        DCD      spiI2Props
|L4.140|
        DCD      0x400ac000

        AREA ||i.ReadBurst16||, CODE, READONLY, ALIGN=2

ReadBurst16 PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r4,r1
        BL       WaitTillIdle
        MOV      r0,r6
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        LDR      r0,|L5.148|
        LDRB     r0,[r0,#0]  ; convRateTest
        CBZ      r0,|L5.58|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOV      r1,sp
        MOV      r0,r4
        BL       StartDma
        NOP      
|L5.44|
        LDR      r0,|L5.152|
        LDRB     r0,[r0,#5]  ; spiI2Props
        CMP      r0,#0
        BNE      |L5.44|
        BL       StopDma
        B        |L5.144|
|L5.58|
        MOVS     r5,#0
        B        |L5.136|
|L5.62|
        MOVS     r0,#0
        STRH     r0,[r4,r5,LSL #1]
        LDR      r0,|L5.152|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#0x10
        BNE      |L5.88|
        BL       ReadSpiBurst
        SXTH     r0,r0
        STRH     r0,[r4,r5,LSL #1]
        B        |L5.134|
|L5.88|
        LDR      r0,|L5.152|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#8
        BNE      |L5.134|
        BL       ReadSpiBurst
        SXTH     r0,r0
        STRH     r0,[r4,r5,LSL #1]
        LDRB     r0,[r4,r5,LSL #1]
        LSLS     r0,r0,#8
        SXTH     r0,r0
        STRH     r0,[r4,r5,LSL #1]
        BL       ReadSpiBurst
        LDRH     r1,[r4,r5,LSL #1]
        ORRS     r0,r0,r1
        SXTH     r0,r0
        STRH     r0,[r4,r5,LSL #1]
|L5.134|
        ADDS     r5,r5,#1
|L5.136|
        LDR      r0,|L5.152|
        LDRH     r0,[r0,#0xe]  ; spiI2Props
        CMP      r0,r5
        BGT      |L5.62|
|L5.144|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L5.148|
        DCD      convRateTest
|L5.152|
        DCD      spiI2Props

        AREA ||i.ReadBurst32||, CODE, READONLY, ALIGN=2

ReadBurst32 PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r5,r1
        BL       WaitTillIdle
        MOV      r0,r7
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        MOVS     r4,#0
        B        |L6.130|
|L6.30|
        MOVS     r0,#0
        STR      r0,[r5,r4,LSL #2]
        LDR      r0,|L6.148|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#0x10
        BNE      |L6.78|
        BL       ReadSpiBurst
        STR      r0,[r5,r4,LSL #2]
        LDRH     r0,[r5,r4,LSL #2]
        LSLS     r0,r0,#16
        STR      r0,[r5,r4,LSL #2]
        BL       ReadSpiBurst
        LDR      r1,[r5,r4,LSL #2]
        ORRS     r0,r0,r1
        STR      r0,[r5,r4,LSL #2]
        B        |L6.128|
|L6.78|
        LDR      r0,|L6.148|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#8
        BNE      |L6.128|
        BL       ReadSpiBurst
        STR      r0,[r5,r4,LSL #2]
        MOVS     r6,#0
        B        |L6.124|
|L6.98|
        LDR      r0,[r5,r4,LSL #2]
        LSLS     r0,r0,#8
        STR      r0,[r5,r4,LSL #2]
        BL       ReadSpiBurst
        LDR      r1,[r5,r4,LSL #2]
        ORRS     r0,r0,r1
        STR      r0,[r5,r4,LSL #2]
        ADDS     r6,r6,#1
|L6.124|
        CMP      r6,#3
        BLT      |L6.98|
|L6.128|
        ADDS     r4,r4,#1
|L6.130|
        LDR      r1,|L6.148|
        LDRH     r0,[r1,#0xe]  ; spiI2Props
        ADD      r1,r0,r0,LSR #31
        CMP      r4,r1,ASR #1
        BLT      |L6.30|
        POP      {r4-r8,pc}
        ENDP

|L6.148|
        DCD      spiI2Props

        AREA ||i.ReadReg16||, CODE, READONLY, ALIGN=2

ReadReg16 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        BL       WaitTillIdle
        MOVS     r0,#0
        STRH     r0,[r4,#0]
        LDR      r0,|L7.124|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#0x10
        BNE      |L7.54|
        MOV      r0,r5
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        SXTH     r0,r0
        STRH     r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        B        |L7.120|
|L7.54|
        LDR      r0,|L7.124|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#8
        BNE      |L7.120|
        MOV      r0,r5
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        SXTH     r0,r0
        STRH     r0,[r4,#0]
        LDRB     r0,[r4,#0]
        LSLS     r0,r0,#8
        SXTH     r0,r0
        STRH     r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        LDRH     r1,[r4,#0]
        ORRS     r0,r0,r1
        SXTH     r0,r0
        STRH     r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
|L7.120|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L7.124|
        DCD      spiI2Props

        AREA ||i.ReadReg32||, CODE, READONLY, ALIGN=2

ReadReg32 PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        BL       WaitTillIdle
        MOVS     r0,#0
        STR      r0,[r4,#0]
        LDR      r0,|L8.140|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#0x10
        BNE      |L8.76|
        MOV      r0,r6
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        STR      r0,[r4,#0]
        LDRH     r0,[r4,#0]
        LSLS     r0,r0,#16
        STR      r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        LDR      r1,[r4,#0]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        B        |L8.138|
|L8.76|
        LDR      r0,|L8.140|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#8
        BNE      |L8.138|
        MOV      r0,r6
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        STR      r0,[r4,#0]
        MOVS     r5,#0
        B        |L8.134|
|L8.108|
        LDR      r0,[r4,#0]
        LSLS     r0,r0,#8
        STR      r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        LDR      r1,[r4,#0]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0]
        ADDS     r5,r5,#1
|L8.134|
        CMP      r5,#3
        BLT      |L8.108|
|L8.138|
        POP      {r4-r6,pc}
        ENDP

|L8.140|
        DCD      spiI2Props

        AREA ||i.ReadReg8||, CODE, READONLY, ALIGN=1

ReadReg8 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        BL       WaitTillIdle
        MOV      r0,r5
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       ReadSpi
        STRB     r0,[r4,#0]
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SendStartConv||, CODE, READONLY, ALIGN=1

SendStartConv PROC
        PUSH     {r4,lr}
        MOVS     r0,#2
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       WaitTillIdle
        POP      {r4,pc}
        ENDP


        AREA ||i.SendStopConv||, CODE, READONLY, ALIGN=1

SendStopConv PROC
        PUSH     {r4,lr}
        MOVS     r0,#1
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        BL       WaitTillIdle
        POP      {r4,pc}
        ENDP


        AREA ||i.SetBurst||, CODE, READONLY, ALIGN=2

SetBurst PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBNZ     r6,|L12.64|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r5,#0
        LDR      r1,|L12.148|
        STRB     r0,[r1,#4]
        NOP      
|L12.20|
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        BIC      r5,r0,#0x10
        MOV      r1,r5
        MOVS     r0,#4
        BL       WriteReg8
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        CMP      r5,r0
        BEQ      |L12.62|
        B        |L12.20|
|L12.62|
        B        |L12.146|
|L12.64|
        LDR      r1,|L12.152|
        STRB     r4,[r1,#0]
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r5,#0
        MOVS     r0,#1
        LDR      r1,|L12.148|
        STRB     r0,[r1,#4]
        LSLS     r0,r0,#9
        ASRS     r0,r0,r4
        STRH     r0,[r1,#0xe]
        NOP      
|L12.88|
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        BIC      r5,r0,#0xe
        LDR      r0,|L12.152|
        LDRB     r0,[r0,#0]  ; burstSizeEnum
        MOVS     r1,#0x10
        ORR      r0,r1,r0,LSL #1
        ORRS     r0,r0,r5
        UXTB     r5,r0
        MOV      r1,r5
        MOVS     r0,#4
        BL       WriteReg8
        MOV      r1,sp
        MOVS     r0,#0x84
        BL       ReadReg8
        LDRB     r0,[sp,#0]
        CMP      r5,r0
        BEQ      |L12.144|
        B        |L12.88|
|L12.144|
        NOP      
|L12.146|
        POP      {r3-r7,pc}
        ENDP

|L12.148|
        DCD      spiI2Props
|L12.152|
        DCD      burstSizeEnum

        AREA ||i.SetConvRate||, CODE, READONLY, ALIGN=2

SetConvRate PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8-d10}
        SUB      sp,sp,#8
        MOV      r4,r0
        LDR      r0,|L13.116|
        SDIV     r0,r0,r4
        UXTH     r5,r0
        MOV      r0,r5
        BL       __aeabi_ui2d
        VMOV     d10,r0,r1
        VMOV     r2,r3,d10
        VLDR     d0,|L13.120|
        VMOV     r0,r1,d0
        BL       __aeabi_ddiv
        VMOV     d9,r0,r1
        VLDR     d0,|L13.128|
        VMOV     r2,r3,d0
        BL       __aeabi_dmul
        VMOV     d8,r0,r1
        BL       __aeabi_d2iz
        MOV      r4,r0
        LDR      r0,|L13.136|
        STR      r4,[r0,#0x10]  ; spiI2Props
        MOVS     r0,#0
        STR      r0,[sp,#4]
        MOV      r6,r5
        NOP      
|L13.82|
        MOV      r1,r6
        MOVS     r0,#5
        BL       WriteReg16
        ADD      r1,sp,#4
        MOVS     r0,#0x85
        BL       ReadReg16
        LDRH     r0,[sp,#4]
        CMP      r6,r0
        BEQ      |L13.108|
        B        |L13.82|
|L13.108|
        ADD      sp,sp,#8
        VPOP     {d8-d10}
        POP      {r4-r6,pc}
        ENDP

|L13.116|
        DCD      0x02dc6c00
|L13.120|
        DCFD     0x4048000000000000 ; 48
|L13.128|
        DCFD     0x412e848000000000 ; 1000000
|L13.136|
        DCD      spiI2Props

        AREA ||i.SetRunMode||, CODE, READONLY, ALIGN=2

SetRunMode PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CMP      r4,#1
        BEQ      |L14.22|
        CMP      r4,#2
        BEQ      |L14.44|
        CMP      r4,#3
        BEQ      |L14.66|
        CMP      r4,#4
        BNE      |L14.110|
        B        |L14.88|
|L14.22|
        LDR      r0,|L14.120|
        LDRB     r1,[r0,#0]  ; burstSizeEnum
        MOVS     r0,#0
        BL       SetBurst
        MOVS     r0,#0
        BL       EnableContMode
        LDR      r0,|L14.124|
        STRB     r4,[r0,#0xc]
        B        |L14.112|
|L14.44|
        LDR      r0,|L14.120|
        LDRB     r1,[r0,#0]  ; burstSizeEnum
        MOVS     r0,#1
        BL       SetBurst
        MOVS     r0,#0
        BL       EnableContMode
        LDR      r0,|L14.124|
        STRB     r4,[r0,#0xc]
        B        |L14.112|
|L14.66|
        LDR      r0,|L14.120|
        LDRB     r1,[r0,#0]  ; burstSizeEnum
        MOVS     r0,#0
        BL       SetBurst
        MOVS     r0,#1
        BL       EnableContMode
        LDR      r0,|L14.124|
        STRB     r4,[r0,#0xc]
        B        |L14.112|
|L14.88|
        LDR      r0,|L14.120|
        LDRB     r1,[r0,#0]  ; burstSizeEnum
        MOVS     r0,#1
        BL       SetBurst
        MOVS     r0,#1
        BL       EnableContMode
        LDR      r0,|L14.124|
        STRB     r4,[r0,#0xc]
        B        |L14.112|
|L14.110|
        POP      {r4,pc}
|L14.112|
        NOP      
        NOP      
        B        |L14.110|
        ENDP

        DCW      0x0000
|L14.120|
        DCD      burstSizeEnum
|L14.124|
        DCD      spiI2Props

        AREA ||i.WaitTillIdle||, CODE, READONLY, ALIGN=1

WaitTillIdle PROC
        PUSH     {r4,lr}
        MOVS     r4,#0
        B        |L15.18|
|L15.6|
        MOVS     r0,#0x81
        BL       SendSpi
        BL       ReadSpi
        UXTB     r4,r0
|L15.18|
        CMP      r4,#0
        BEQ      |L15.6|
        POP      {r4,pc}
        ENDP


        AREA ||i.WriteReg16||, CODE, READONLY, ALIGN=2

WriteReg16 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,|L16.112|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#0x10
        BNE      |L16.44|
        MOV      r0,r5
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        MOV      r0,r4
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        B        |L16.100|
|L16.44|
        LDR      r0,|L16.112|
        LDRB     r0,[r0,#0]  ; spiI2Props
        CMP      r0,#8
        BNE      |L16.100|
        UXTB     r6,r4
        ASRS     r4,r4,#8
        MOV      r0,r5
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        MOV      r0,r4
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        MOV      r0,r6
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        NOP      
|L16.100|
        LDR      r0,|L16.116|
        LDRB     r0,[r0,#0]  ; frmSizeChange
        CBNZ     r0,|L16.110|
        BL       WaitTillIdle
|L16.110|
        POP      {r4-r6,pc}
        ENDP

|L16.112|
        DCD      spiI2Props
|L16.116|
        DCD      frmSizeChange

        AREA ||i.WriteReg8||, CODE, READONLY, ALIGN=2

WriteReg8 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r0,r5
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        MOV      r0,r4
        BL       SendSpi
        VMOV.F32 s0,#2.50000000
        BL       SysTickDelayUs
        LDR      r0,|L17.48|
        LDRB     r0,[r0,#0]  ; frmSizeChange
        CBNZ     r0,|L17.44|
        BL       WaitTillIdle
|L17.44|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L17.48|
        DCD      frmSizeChange

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

frmSizeChange
        DCB      0x00
convRateTest
        DCB      0x00
burstSizeEnum
        DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\I2Commands\\I2Commands.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_I2Commands_c_4297394e____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_I2Commands_c_4297394e____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_I2Commands_c_4297394e____REVSH|
#line 483
|__asm___12_I2Commands_c_4297394e____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_I2Commands_c_4297394e____RRX|
#line 670
|__asm___12_I2Commands_c_4297394e____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT ActivateSlaveSpi [CODE]
        EXPORT ChnlEnable [CODE]
        EXPORT EnableContMode [CODE]
        EXPORT FrameSizeSet [CODE]
        EXPORT ReadBurst16 [CODE]
        EXPORT ReadBurst32 [CODE]
        EXPORT ReadReg16 [CODE]
        EXPORT ReadReg32 [CODE]
        EXPORT ReadReg8 [CODE]
        EXPORT SendStartConv [CODE]
        EXPORT SendStopConv [CODE]
        EXPORT SetBurst [CODE]
        EXPORT SetConvRate [CODE]
        EXPORT SetRunMode [CODE]
        EXPORT WaitTillIdle [CODE]
        EXPORT WriteReg16 [CODE]
        EXPORT WriteReg8 [CODE]
        EXPORT frmSizeChange [DATA,SIZE=1]
        EXPORT convRateTest [DATA,SIZE=1]
        EXPORT burstSizeEnum [DATA,SIZE=1]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SendSpi [CODE]
        IMPORT ReadSpi [CODE]
        IMPORT SysTickDelayUs [CODE]
        IMPORT spiI2Props [DATA]
        IMPORT __aeabi_ui2d [CODE]
        IMPORT __aeabi_ddiv [CODE]
        IMPORT __aeabi_dmul [CODE]
        IMPORT __aeabi_d2iz [CODE]
        IMPORT StartDma [CODE]
        IMPORT StopDma [CODE]
        IMPORT ReadSpiBurst [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
