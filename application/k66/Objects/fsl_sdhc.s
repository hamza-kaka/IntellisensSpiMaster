; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_sdhc.o --depend=.\objects\fsl_sdhc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_sdhc.crf ..\..\devices\MK66F18\drivers\fsl_sdhc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SDHC_ClearInterruptStatusFlags||, CODE, READONLY, ALIGN=1

SDHC_ClearInterruptStatusFlags PROC
        STR      r1,[r0,#0x30]
        BX       lr
        ENDP


        AREA ||i.SDHC_Deinit||, CODE, READONLY, ALIGN=2

SDHC_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,r5
        BL       SDHC_GetInstance
        LDR      r1,|L2.36|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L2.40|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L2.36|
        DCD      s_sdhcClock
|L2.40|
        DCD      0x40047000

        AREA ||i.SDHC_DriverIRQHandler||, CODE, READONLY, ALIGN=2

SDHC_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L3.52|
        LDR      r0,[r0,#0]  ; s_sdhcHandle
        CBZ      r0,|L3.10|
        B        |L3.22|
|L3.10|
        MOV      r2,#0x612
        ADR      r1,|L3.56|
        ADR      r0,|L3.100|
        BL       __aeabi_assert
|L3.22|
        LDR      r0,|L3.52|
        LDR      r1,[r0,#0]  ; s_sdhcHandle
        LDR      r0,|L3.116|
        LDR      r2,|L3.120|
        LDR      r2,[r2,#0]  ; s_sdhcIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L3.52|
        DCD      s_sdhcHandle
|L3.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L3.100|
        DCB      "s_sdhcHandle[0]",0
|L3.116|
        DCD      0x400b1000
|L3.120|
        DCD      s_sdhcIsr

        AREA ||i.SDHC_EnableSdioControl||, CODE, READONLY, ALIGN=1

SDHC_EnableSdioControl PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOV      r4,r2
        LDR      r0,[r3,#0x28]
        LDR      r2,[r3,#0xc0]
        CBZ      r4,|L4.56|
        AND      r5,r1,#1
        CBZ      r5,|L4.24|
        ORR      r0,r0,#0x10000
|L4.24|
        AND      r5,r1,#2
        CBZ      r5,|L4.34|
        ORR      r0,r0,#0x40000
|L4.34|
        AND      r5,r1,#4
        CBZ      r5,|L4.44|
        ORR      r0,r0,#0x80000
|L4.44|
        AND      r5,r1,#8
        CBZ      r5,|L4.96|
        ORR      r2,r2,#2
        B        |L4.96|
|L4.56|
        AND      r5,r1,#1
        CBZ      r5,|L4.66|
        BIC      r0,r0,#0x10000
|L4.66|
        AND      r5,r1,#2
        CBZ      r5,|L4.76|
        BIC      r0,r0,#0x40000
|L4.76|
        AND      r5,r1,#4
        CBZ      r5,|L4.86|
        BIC      r0,r0,#0x80000
|L4.86|
        AND      r5,r1,#8
        CBZ      r5,|L4.96|
        BIC      r2,r2,#2
|L4.96|
        STR      r0,[r3,#0x28]
        STR      r2,[r3,#0xc0]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDHC_GetCapability||, CODE, READONLY, ALIGN=2

SDHC_GetCapability PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L5.12|
        B        |L5.24|
|L5.12|
        MOV      r2,#0x36a
        ADR      r1,|L5.80|
        ADR      r0,|L5.124|
        BL       __aeabi_assert
|L5.24|
        LDR      r7,[r5,#0xfc]
        LDR      r6,[r5,#0x40]
        UXTB     r0,r7
        STR      r0,[r4,#0]
        UBFX     r0,r7,#8,#8
        STR      r0,[r4,#4]
        UBFX     r8,r6,#16,#3
        MOV      r0,#0x200
        LSL      r0,r0,r8
        STR      r0,[r4,#8]
        MOV      r0,#0xffff
        STR      r0,[r4,#0xc]
        AND      r0,r6,#0x1f00000
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0x10]
        ORR      r0,r0,#0x30
        STR      r0,[r4,#0x10]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L5.80|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L5.124|
        DCB      "capability",0
        DCB      0

        AREA ||i.SDHC_GetInstance||, CODE, READONLY, ALIGN=2

SDHC_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L6.12|
|L6.8|
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L6.12|
        CBNZ     r4,|L6.24|
        LDR      r0,|L6.44|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L6.8|
|L6.24|
        CBNZ     r4,|L6.28|
        B        |L6.38|
|L6.28|
        MOVS     r2,#0xe7
        ADR      r1,|L6.48|
        ADR      r0,|L6.92|
        BL       __aeabi_assert
|L6.38|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L6.44|
        DCD      s_sdhcBase
|L6.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L6.92|
        DCB      "instance < ARRAY_SIZE(s_sdhcBase)",0
        DCB      0
        DCB      0

        AREA ||i.SDHC_GetInterruptStatusFlags||, CODE, READONLY, ALIGN=1

SDHC_GetInterruptStatusFlags PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x30]
        BX       lr
        ENDP


        AREA ||i.SDHC_GetPresentStatusFlags||, CODE, READONLY, ALIGN=1

SDHC_GetPresentStatusFlags PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x24]
        BX       lr
        ENDP


        AREA ||i.SDHC_Init||, CODE, READONLY, ALIGN=2

SDHC_Init PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L9.12|
        B        |L9.24|
|L9.12|
        MOV      r2,#0x30f
        ADR      r1,|L9.220|
        ADR      r0,|L9.264|
        BL       __aeabi_assert
|L9.24|
        LDRB     r0,[r4,#2]
        CMP      r0,#1
        BEQ      |L9.32|
        B        |L9.44|
|L9.32|
        MOV      r2,#0x311
        ADR      r1,|L9.220|
        ADR      r0,|L9.272|
        BL       __aeabi_assert
|L9.44|
        LDR      r0,[r4,#8]
        CBZ      r0,|L9.56|
        LDR      r0,[r4,#8]
        CMP      r0,#0x80
        BHI      |L9.56|
        B        |L9.68|
|L9.56|
        MOV      r2,#0x313
        ADR      r1,|L9.220|
        LDR      r0,|L9.312|
        BL       __aeabi_assert
|L9.68|
        LDR      r0,[r4,#4]
        CBZ      r0,|L9.80|
        LDR      r0,[r4,#4]
        CMP      r0,#0x80
        BHI      |L9.80|
        B        |L9.92|
|L9.80|
        MOV      r2,#0x314
        ADR      r1,|L9.220|
        LDR      r0,|L9.316|
        BL       __aeabi_assert
|L9.92|
        MOV      r0,r5
        BL       SDHC_GetInstance
        LDR      r1,|L9.320|
        LDR      r8,[r1,r0,LSL #2]
        LDR      r1,|L9.324|
        ADD      r0,r1,r8,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSL      r2,r2,r8
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        MOVS     r2,#0x64
        MOV      r1,#0x1000000
        MOV      r0,r5
        BL       SDHC_Reset
        LDR      r6,[r5,#0x28]
        LDR      r7,[r5,#0x44]
        BIC      r6,r6,#0x338
        LDRB     r0,[r4,#0]
        CBZ      r0,|L9.152|
        ORR      r6,r6,#8
|L9.152|
        LDRB     r0,[r4,#1]
        MOVS     r1,#0x30
        AND      r0,r1,r0,LSL #4
        LDRB     r1,[r4,#2]
        MOV      r2,#0x300
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        ORRS     r6,r6,r0
        AND      r7,r7,#0xff00ff00
        LDRB     r0,[r4,#4]
        LDRH     r1,[r4,#8]
        MOV      r2,#0xff0000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        ORRS     r7,r7,r0
        STR      r7,[r5,#0x44]
        STR      r6,[r5,#0x28]
        LDR      r0,[r5,#0x2c]
        ORR      r0,r0,#7
        STR      r0,[r5,#0x2c]
        MOVS     r1,#0
        MOV      r0,r5
        BL       SDHC_SetTransferInterrupt
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L9.220|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L9.264|
        DCB      "config",0
        DCB      0
|L9.272|
        DCB      "config->dmaMode != kSDHC_DmaModeAdma1",0
        DCB      0
        DCB      0
|L9.312|
        DCD      ||.conststring||+0xa8
|L9.316|
        DCD      ||.conststring||+0xf8
|L9.320|
        DCD      s_sdhcClock
|L9.324|
        DCD      0x40047000

        AREA ||i.SDHC_ReadByDataPortBlocking||, CODE, READONLY, ALIGN=2

SDHC_ReadByDataPortBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOVS     r7,#0
        MOVS     r5,#0
        LDRB     r0,[r4,#4]
        AND      r0,r0,#3
        CBZ      r0,|L10.36|
        LDRB     r1,[r4,#4]
        AND      r1,r1,#3
        RSB      r1,r1,#4
        LDR      r0,[r4,#4]
        ADD      r0,r0,r1
        STR      r0,[r4,#4]
|L10.36|
        LDRD     r1,r0,[r4,#4]
        MULS     r0,r1,r0
        LSRS     r6,r0,#2
        B        |L10.102|
|L10.46|
        NOP      
|L10.48|
        MOV      r0,r8
        BL       SDHC_GetInterruptStatusFlags
        LDR      r1,|L10.124|
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L10.48|
        MOV      r0,r8
        BL       SDHC_GetInterruptStatusFlags
        AND      r0,r0,#0x1700000
        CBZ      r0,|L10.80|
        LDRB     r0,[r4,#1]
        CBNZ     r0,|L10.80|
        MOVS     r5,#1
|L10.80|
        CBNZ     r5,|L10.94|
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r8
        BL       SDHC_ReadDataPort
        MOV      r7,r0
|L10.94|
        LDR      r1,|L10.124|
        MOV      r0,r8
        BL       SDHC_ClearInterruptStatusFlags
|L10.102|
        CBNZ     r5,|L10.108|
        CMP      r7,r6
        BCC      |L10.46|
|L10.108|
        LDR      r1,|L10.124|
        SUBS     r1,r1,#0x1e
        MOV      r0,r8
        BL       SDHC_ClearInterruptStatusFlags
        MOV      r0,r5
        POP      {r4-r8,pc}
        ENDP

|L10.124|
        DCD      0x01700020

        AREA ||i.SDHC_ReadDataPort||, CODE, READONLY, ALIGN=1

SDHC_ReadDataPort PROC
        PUSH     {r4-r9,lr}
        MOV      r6,r0
        MOV      r3,r2
        LDR      r0,[r6,#0x44]
        UXTB     r5,r0
        LDRB     r0,[r1,#4]
        AND      r0,r0,#3
        CBZ      r0,|L11.38|
        LDRB     r12,[r1,#4]
        AND      r12,r12,#3
        RSB      r12,r12,#4
        LDR      r0,[r1,#4]
        ADD      r0,r0,r12
        STR      r0,[r1,#4]
|L11.38|
        LDRD     r12,r0,[r1,#4]
        MUL      r0,r0,r12
        LSRS     r2,r0,#2
        CMP      r5,r2
        BCC      |L11.56|
        MOV      r4,r2
        B        |L11.72|
|L11.56|
        CMP      r5,r2
        BCS      |L11.70|
        SUBS     r0,r2,r3
        CMP      r0,r5
        BCC      |L11.70|
        MOV      r4,r5
        B        |L11.72|
|L11.70|
        SUBS     r4,r2,r3
|L11.72|
        MOVS     r7,#0
        B        |L11.94|
|L11.76|
        NOP      
        LDR      r0,[r6,#0x20]
        MOV      r12,r3
        ADDS     r3,r3,#1
        LDR      r9,[r1,#0xc]
        STR      r0,[r9,r12,LSL #2]
        ADDS     r7,r7,#1
|L11.94|
        CMP      r7,r4
        BCC      |L11.76|
        MOV      r0,r3
        POP      {r4-r9,pc}
        ENDP


        AREA ||i.SDHC_ReceiveCommandResponse||, CODE, READONLY, ALIGN=2

SDHC_ReceiveCommandResponse PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L12.10|
        B        |L12.22|
|L12.10|
        MOV      r2,#0x163
        ADR      r1,|L12.124|
        ADR      r0,|L12.168|
        BL       __aeabi_assert
|L12.22|
        LDRB     r0,[r4,#9]
        CBZ      r0,|L12.78|
        LDR      r0,[r5,#0x10]
        STR      r0,[r4,#0xc]
        LDRB     r0,[r4,#9]
        CMP      r0,#3
        BNE      |L12.78|
        LDR      r0,[r4,#0xc]
        LSLS     r0,r0,#8
        STR      r0,[r4,#0xc]
        LDR      r0,[r5,#0x14]
        LSLS     r0,r0,#8
        LDR      r1,[r5,#0x10]
        ORR      r1,r0,r1,LSR #24
        STR      r1,[r4,#0x10]
        LDR      r0,[r5,#0x18]
        LSLS     r1,r0,#8
        LDR      r0,[r5,#0x14]
        ORR      r1,r1,r0,LSR #24
        STR      r1,[r4,#0x14]
        LDR      r0,[r5,#0x1c]
        LSLS     r1,r0,#8
        LDR      r0,[r5,#0x18]
        ORR      r1,r1,r0,LSR #24
        STR      r1,[r4,#0x18]
|L12.78|
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L12.120|
        LDRB     r0,[r4,#9]
        CMP      r0,#1
        BEQ      |L12.106|
        LDRB     r0,[r4,#9]
        CMP      r0,#2
        BEQ      |L12.106|
        LDRB     r0,[r4,#9]
        CMP      r0,#8
        BEQ      |L12.106|
        LDRB     r0,[r4,#9]
        CMP      r0,#6
        BNE      |L12.120|
|L12.106|
        LDR      r1,[r4,#0xc]
        LDR      r0,[r4,#0x1c]
        ANDS     r0,r0,r1
        CBZ      r0,|L12.120|
        MOV      r0,#0x6a6
|L12.118|
        POP      {r4-r6,pc}
|L12.120|
        MOVS     r0,#0
        B        |L12.118|
        ENDP

|L12.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L12.168|
        DCB      "command != NULL",0

        AREA ||i.SDHC_Reset||, CODE, READONLY, ALIGN=1

SDHC_Reset PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        LDR      r0,[r3,#0x2c]
        AND      r4,r1,#0x7000000
        ORRS     r0,r0,r4
        STR      r0,[r3,#0x2c]
        B        |L13.22|
|L13.16|
        CBNZ     r2,|L13.20|
        B        |L13.30|
|L13.20|
        SUBS     r2,r2,#1
|L13.22|
        LDR      r0,[r3,#0x2c]
        ANDS     r0,r0,r1
        CMP      r0,#0
        BNE      |L13.16|
|L13.30|
        NOP      
        CBZ      r2,|L13.38|
        MOVS     r0,#1
|L13.36|
        POP      {r4,pc}
|L13.38|
        MOVS     r0,#0
        B        |L13.36|
        ENDP


        AREA ||i.SDHC_SendCommandBlocking||, CODE, READONLY, ALIGN=2

SDHC_SendCommandBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOVS     r4,#0
        NOP      
|L14.10|
        MOV      r0,r5
        BL       SDHC_GetInterruptStatusFlags
        LDR      r1,|L14.64|
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L14.10|
        MOV      r0,r5
        BL       SDHC_GetInterruptStatusFlags
        AND      r0,r0,#0xf0000
        CBZ      r0,|L14.38|
        MOVS     r4,#1
|L14.38|
        CBNZ     r4,|L14.50|
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_ReceiveCommandResponse
        MOV      r4,r0
|L14.50|
        LDR      r1,|L14.64|
        MOV      r0,r5
        BL       SDHC_ClearInterruptStatusFlags
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L14.64|
        DCD      0x000f0001

        AREA ||i.SDHC_SetAdmaTableConfig||, CODE, READONLY, ALIGN=2

SDHC_SetAdmaTableConfig PROC
        PUSH     {r4-r11,lr}
        MOV      r12,r0
        MOV      r5,r1
        MOV      r7,r2
        MOV      r8,r3
        LDRD     r6,r4,[sp,#0x24]
        MOVS     r0,#0
        MOV      r3,r6
        CBZ      r7,|L15.28|
        CMP      r8,#0
        BNE      |L15.36|
|L15.28|
        CMP      r5,#1
        BEQ      |L15.44|
        CMP      r5,#2
        BEQ      |L15.44|
|L15.36|
        CBZ      r6,|L15.44|
        CBZ      r4,|L15.44|
        CMP      r5,#1
        BNE      |L15.48|
|L15.44|
        MOVS     r0,#4
        B        |L15.252|
|L15.48|
        CMP      r5,#2
        BNE      |L15.68|
        AND      r10,r3,#3
        CMP      r10,#0
        BEQ      |L15.68|
        MOV      r0,#0x6a8
        B        |L15.252|
|L15.68|
        CBZ      r5,|L15.76|
        CMP      r5,#2
        BNE      |L15.248|
        B        |L15.78|
|L15.76|
        B        |L15.250|
|L15.78|
        AND      r10,r4,#3
        CMP      r10,#0
        BEQ      |L15.98|
        AND      r10,r4,#3
        RSB      r10,r10,#4
        ADD      r4,r4,r10
|L15.98|
        MOV      r10,#0xffff
        UDIV     r10,r4,r10
        ADD      r9,r10,#1
        LSL      r10,r8,#2
        CMP      r9,r10,LSR #3
        BLS      |L15.124|
        MOVS     r0,#3
        B        |L15.246|
|L15.124|
        MOV      r2,r7
        MOVS     r1,#0
        B        |L15.230|
|L15.130|
        SUB      r10,r3,r6
        ASR      r10,r10,#2
        MOV      r11,#4
        MLS      r10,r11,r10,r4
        CMP      r10,#0x10000
        BCS      |L15.194|
        ADD      r10,r2,r1,LSL #3
        STR      r3,[r10,#4]
        SUB      r10,r3,r6
        ASR      r10,r10,#2
        MLS      r10,r11,r10,r4
        LSL      r10,r10,#16
        STR      r10,[r2,r1,LSL #3]
        LDR      r10,[r2,r1,LSL #3]
        ORR      r10,r10,#0x23
        STR      r10,[r2,r1,LSL #3]
        B        |L15.228|
|L15.194|
        ADD      r10,r2,r1,LSL #3
        STR      r3,[r10,#4]
        LDR      r10,|L15.256|
        STR      r10,[r2,r1,LSL #3]
        LDR      r10,[r2,r1,LSL #3]
        ORR      r10,r10,#0x21
        STR      r10,[r2,r1,LSL #3]
        MOV      r10,#0xfffc
        ADD      r3,r3,r10
|L15.228|
        ADDS     r1,r1,#1
|L15.230|
        CMP      r1,r9
        BCC      |L15.130|
        MOV      r10,#0
        STR      r10,[r12,#0]
        STR      r7,[r12,#0x58]
|L15.246|
        B        |L15.250|
|L15.248|
        NOP      
|L15.250|
        NOP      
|L15.252|
        POP      {r4-r11,pc}
        ENDP

|L15.256|
        DCD      0xfffc0000

        AREA ||i.SDHC_SetCardActive||, CODE, READONLY, ALIGN=1

SDHC_SetCardActive PROC
        MOV      r2,r0
        LDR      r0,[r2,#0x2c]
        ORR      r0,r0,#0x8000000
        STR      r0,[r2,#0x2c]
        B        |L16.18|
|L16.12|
        CBNZ     r1,|L16.16|
        B        |L16.28|
|L16.16|
        SUBS     r1,r1,#1
|L16.18|
        LDR      r0,[r2,#0x2c]
        AND      r0,r0,#0x8000000
        CMP      r0,#0
        BNE      |L16.12|
|L16.28|
        NOP      
        CBZ      r1,|L16.36|
        MOVS     r0,#1
|L16.34|
        BX       lr
|L16.36|
        MOVS     r0,#0
        B        |L16.34|
        ENDP


        AREA ||i.SDHC_SetMmcBootConfig||, CODE, READONLY, ALIGN=2

SDHC_SetMmcBootConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L17.10|
        B        |L17.22|
|L17.10|
        MOV      r2,#0x474
        ADR      r1,|L17.124|
        ADR      r0,|L17.168|
        BL       __aeabi_assert
|L17.22|
        LDR      r0,[r4,#0]
        CMP      r0,#0xf
        BHI      |L17.30|
        B        |L17.42|
|L17.30|
        MOV      r2,#0x475
        ADR      r1,|L17.124|
        LDR      r0,|L17.176|
        BL       __aeabi_assert
|L17.42|
        LDR      r0,[r4,#8]
        CMP      r0,#0x10000
        BCS      |L17.52|
        B        |L17.64|
|L17.52|
        MOV      r2,#0x476
        ADR      r1,|L17.124|
        LDR      r0,|L17.180|
        BL       __aeabi_assert
|L17.64|
        MOVS     r5,#0
        LDRB     r0,[r4,#0]
        AND      r0,r0,#0xf
        LDRB     r1,[r4,#4]
        MOVS     r2,#0x20
        AND      r1,r2,r1,LSL #5
        ORRS     r0,r0,r1
        LDRH     r1,[r4,#8]
        LDR      r2,|L17.184|
        AND      r1,r2,r1,LSL #16
        ORR      r5,r0,r1
        LDRB     r0,[r4,#0xc]
        CBZ      r0,|L17.102|
        ORR      r5,r5,#0x10
|L17.102|
        LDRB     r0,[r4,#0xd]
        CBZ      r0,|L17.110|
        ORR      r5,r5,#0x40
|L17.110|
        LDRB     r0,[r4,#0xe]
        CBZ      r0,|L17.118|
        ORR      r5,r5,#0x80
|L17.118|
        STR      r5,[r6,#0xc4]
        POP      {r4-r6,pc}
        ENDP

|L17.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L17.168|
        DCB      "config",0
        DCB      0
|L17.176|
        DCD      ||.conststring||+0x144
|L17.180|
        DCD      ||.conststring||+0x19c
|L17.184|
        DCD      0xffff0000

        AREA ||i.SDHC_SetSdClock||, CODE, READONLY, ALIGN=2

SDHC_SetSdClock PROC
        PUSH     {r4-r12,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r9,r2
        CBZ      r7,|L18.14|
        B        |L18.26|
|L18.14|
        MOV      r2,#0x391
        ADR      r1,|L18.264|
        ADR      r0,|L18.308|
        BL       __aeabi_assert
|L18.26|
        CMP      r9,#0
        BEQ      |L18.38|
        CMP      r9,r7
        BHI      |L18.38|
        B        |L18.50|
|L18.38|
        MOV      r2,#0x392
        ADR      r1,|L18.264|
        ADR      r0,|L18.328|
        BL       __aeabi_assert
|L18.50|
        MOVS     r5,#0
        MOV      r8,r5
        MOVS     r4,#0
        MOV      r10,r4
        MOV      r11,r4
        UDIV     r0,r7,r9
        MOV      r5,r0
        CMP      r0,#0x1000
        BLS      |L18.78|
        MOVS     r0,#0
|L18.74|
        POP      {r4-r12,pc}
|L18.78|
        CBZ      r5,|L18.170|
        UDIV     r0,r7,r5
        CMP      r0,r9
        BLS      |L18.90|
        ADDS     r5,r5,#1
|L18.90|
        CMP      r5,#0x10
        BLS      |L18.160|
        LSRS     r4,r5,#4
        B        |L18.100|
|L18.98|
        ADDS     r4,r4,#1
|L18.100|
        MOV      r0,#0x100
        UDIV     r1,r0,r4
        MLS      r0,r4,r1,r0
        CMP      r0,#0
        BNE      |L18.98|
        CMP      r4,#1
        BEQ      |L18.98|
        UDIV     r8,r5,r4
        B        |L18.130|
|L18.126|
        ADD      r8,r8,#1
|L18.130|
        MUL      r0,r8,r4
        CMP      r0,r5
        BCC      |L18.126|
        CMP      r8,#0
        BNE      |L18.148|
        MOVS     r0,#1
        B        |L18.150|
|L18.148|
        MOV      r0,r8
|L18.150|
        UDIV     r0,r7,r0
        UDIV     r11,r0,r4
        B        |L18.178|
|L18.160|
        MOV      r8,r5
        MOVS     r4,#0
        UDIV     r11,r7,r8
        B        |L18.178|
|L18.170|
        MOV      r8,#0
        MOVS     r4,#0
        MOV      r11,r7
|L18.178|
        CMP      r8,#0
        BEQ      |L18.188|
        SUB      r8,r8,#1
|L18.188|
        CBZ      r4,|L18.192|
        LSRS     r4,r4,#1
|L18.192|
        LDR      r0,[r6,#0x2c]
        BIC      r0,r0,#8
        STR      r0,[r6,#0x2c]
        LDR      r10,[r6,#0x2c]
        LDR      r0,|L18.380|
        AND      r10,r10,r0
        MOVS     r0,#0xf0
        AND      r0,r0,r8,LSL #4
        MOV      r1,#0xff00
        AND      r1,r1,r4,LSL #8
        ORRS     r0,r0,r1
        ORR      r0,r0,#0xe0000
        ORR      r10,r0,r10
        STR      r10,[r6,#0x2c]
        NOP      
|L18.240|
        LDR      r0,[r6,#0x24]
        AND      r0,r0,#8
        CMP      r0,#0
        BEQ      |L18.240|
        LDR      r0,[r6,#0x2c]
        ORR      r0,r0,#8
        STR      r0,[r6,#0x2c]
        MOV      r0,r11
        B        |L18.74|
        ENDP

        DCW      0x0000
|L18.264|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L18.308|
        DCB      "srcClock_Hz != 0U",0
        DCB      0
        DCB      0
|L18.328|
        DCB      "(busClock_Hz != 0U) && (busClock_Hz <= srcClock_Hz)",0
|L18.380|
        DCD      0xfff0000f

        AREA ||i.SDHC_SetTransferConfig||, CODE, READONLY, ALIGN=2

SDHC_SetTransferConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L19.10|
        B        |L19.22|
|L19.10|
        MOV      r2,#0x41b
        ADR      r1,|L19.120|
        ADR      r0,|L19.164|
        BL       __aeabi_assert
|L19.22|
        LDR      r0,[r4,#0]
        CMP      r0,#0x2000
        BCS      |L19.32|
        B        |L19.44|
|L19.32|
        MOV      r2,#0x41c
        ADR      r1,|L19.120|
        LDR      r0,|L19.172|
        BL       __aeabi_assert
|L19.44|
        LDR      r0,[r4,#4]
        CMP      r0,#0x10000
        BCS      |L19.54|
        B        |L19.66|
|L19.54|
        MOV      r2,#0x41d
        ADR      r1,|L19.120|
        LDR      r0,|L19.176|
        BL       __aeabi_assert
|L19.66|
        LDRH     r0,[r4,#0]
        UBFX     r0,r0,#0,#13
        LDRH     r1,[r4,#4]
        LDR      r2,|L19.180|
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        LDR      r1,[r5,#4]
        AND      r1,r1,#0xe000
        ORRS     r0,r0,r1
        STR      r0,[r5,#4]
        LDR      r0,[r4,#8]
        STR      r0,[r5,#8]
        LDRB     r0,[r4,#0xc]
        MOV      r1,#0x3f000000
        AND      r0,r1,r0,LSL #24
        LDR      r2,|L19.184|
        LDR      r1,[r4,#0x10]
        ANDS     r1,r1,r2
        ORRS     r0,r0,r1
        STR      r0,[r5,#0xc]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L19.120|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L19.164|
        DCB      "config",0
        DCB      0
|L19.172|
        DCD      ||.conststring||
|L19.176|
        DCD      ||.conststring||+0x54
|L19.180|
        DCD      0xffff0000
|L19.184|
        DCD      0x00fb0037

        AREA ||i.SDHC_SetTransferInterrupt||, CODE, READONLY, ALIGN=2

SDHC_SetTransferInterrupt PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        LDR      r0,[r4,#0x28]
        UBFX     r8,r0,#3,#1
        LDR      r0,|L20.152|
        LDR      r1,[r4,#0x34]
        BICS     r1,r1,r0
        STR      r1,[r4,#0x34]
        NOP      
        NOP      
        LDR      r1,[r4,#0x38]
        BICS     r1,r1,r0
        STR      r1,[r4,#0x38]
        NOP      
        MOV      r0,r4
        BL       SDHC_GetInstance
        LDR      r1,|L20.156|
        LDRSB    r6,[r1,r0]
        CMN      r6,#0x80
        BNE      |L20.52|
        B        |L20.110|
|L20.52|
        MOV      r0,r6
        CMP      r0,#0
        BLT      |L20.106|
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L20.160|
        LSRS     r3,r0,#5
        STR      r1,[r2,r3,LSL #2]
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
|L20.106|
        NOP      
        NOP      
|L20.110|
        LDR      r5,|L20.164|
        CMP      r8,#0
        BEQ      |L20.122|
        ORR      r5,r5,#0xc0
|L20.122|
        NOP      
        LDR      r0,[r4,#0x34]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x34]
        NOP      
        CBZ      r7,|L20.146|
        NOP      
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        NOP      
        NOP      
|L20.146|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L20.152|
        DCD      0x117f013f
|L20.156|
        DCD      s_sdhcIRQ
|L20.160|
        DCD      0xe000e180
|L20.164|
        DCD      0x117f003b

        AREA ||i.SDHC_StartTransfer||, CODE, READONLY, ALIGN=1

SDHC_StartTransfer PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x18
        MOV      r5,r0
        MOV      r7,r1
        MOV      r6,r2
        MOV      r8,r3
        MOVS     r4,#0
        MOVS     r1,#0x14
        ADD      r0,sp,#4
        BL       __aeabi_memclr4
        LDRB     r0,[r7,#9]
        CMP      r0,#0xa
        BCS      |L21.100|
        TBB      [pc,r0]
        DCB      0x05,0x06
        DCB      0x09,0x0c,0x0f,0x12
        DCB      0x15,0x18,0x1b,0x1e
        B        |L21.102|
        ORR      r4,r4,#0x1a0000
        B        |L21.102|
        ORR      r4,r4,#0x1b0000
        B        |L21.102|
        ORR      r4,r4,#0x90000
        B        |L21.102|
        ORR      r4,r4,#0x20000
        B        |L21.102|
        ORR      r4,r4,#0x20000
        B        |L21.102|
        ORR      r4,r4,#0x1a0000
        B        |L21.102|
        ORR      r4,r4,#0x1b0000
        B        |L21.102|
        ORR      r4,r4,#0x1a0000
        B        |L21.102|
        ORR      r4,r4,#0x1a0000
        B        |L21.102|
|L21.100|
        NOP      
|L21.102|
        NOP      
        LDRB     r0,[r7,#8]
        CMP      r0,#3
        BNE      |L21.114|
        ORR      r4,r4,#0xc00000
|L21.114|
        CBZ      r6,|L21.200|
        ORR      r4,r4,#0x200000
        CMP      r8,#0
        BEQ      |L21.148|
        ORR      r4,r4,#1
        LDR      r0,[r5,#0x38]
        BIC      r0,r0,#0x38
        STR      r0,[r5,#0x38]
        LDR      r0,[r5,#0x34]
        BIC      r0,r0,#0x38
        STR      r0,[r5,#0x34]
        B        |L21.164|
|L21.148|
        LDR      r0,[r5,#0x38]
        ORR      r0,r0,#0x30
        STR      r0,[r5,#0x38]
        LDR      r0,[r5,#0x34]
        ORR      r0,r0,#0x30
        STR      r0,[r5,#0x34]
|L21.164|
        LDR      r0,[r6,#0xc]
        CBZ      r0,|L21.172|
        ORR      r4,r4,#0x10
|L21.172|
        LDR      r0,[r6,#8]
        CMP      r0,#1
        BLS      |L21.190|
        ORR      r4,r4,#0x22
        LDRB     r0,[r6,#0]
        CBZ      r0,|L21.190|
        ORR      r4,r4,#4
|L21.190|
        LDR      r0,[r6,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r6,#8]
        STR      r0,[sp,#8]
        B        |L21.206|
|L21.200|
        MOVS     r0,#0
        STR      r0,[sp,#4]
        STR      r0,[sp,#8]
|L21.206|
        LDR      r0,[r7,#4]
        STR      r0,[sp,#0xc]
        LDR      r0,[r7,#0]
        STR      r0,[sp,#0x10]
        STR      r4,[sp,#0x14]
        ADD      r1,sp,#4
        MOV      r0,r5
        BL       SDHC_SetTransferConfig
        ADD      sp,sp,#0x18
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.SDHC_TransferBlocking||, CODE, READONLY, ALIGN=2

SDHC_TransferBlocking PROC
        PUSH     {r2-r12,lr}
        MOV      r7,r0
        MOV      r8,r1
        MOV      r10,r2
        MOV      r5,r3
        CBZ      r5,|L22.16|
        B        |L22.28|
|L22.16|
        MOV      r2,#0x548
        ADR      r1,|L22.204|
        ADR      r0,|L22.248|
        BL       __aeabi_assert
|L22.28|
        MOV      r11,#0
        LDR      r0,[r7,#0x28]
        UBFX     r6,r0,#8,#2
        LDR      r9,[r5,#4]
        LDR      r4,[r5,#0]
        CMP      r9,#0
        BEQ      |L22.60|
        CBZ      r4,|L22.66|
        LDR      r0,[r4,#8]
        CMP      r0,#0x10000
        BCC      |L22.66|
|L22.60|
        MOVS     r0,#4
|L22.62|
        POP      {r2-r12,pc}
|L22.66|
        NOP      
|L22.68|
        MOV      r0,r7
        BL       SDHC_GetPresentStatusFlags
        AND      r0,r0,#1
        CMP      r0,#0
        BNE      |L22.68|
        NOP      
|L22.84|
        CBZ      r4,|L22.100|
        MOV      r0,r7
        BL       SDHC_GetPresentStatusFlags
        AND      r0,r0,#2
        CMP      r0,#0
        BNE      |L22.84|
|L22.100|
        CBZ      r4,|L22.150|
        CMP      r8,#0
        BEQ      |L22.150|
        LDRD     r1,r0,[r4,#4]
        MULS     r1,r0,r1
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L22.122|
        LDR      r0,[r4,#0xc]
        B        |L22.124|
|L22.122|
        LDR      r0,[r4,#0x10]
|L22.124|
        MOV      r3,r10
        MOV      r2,r8
        STRD     r0,r1,[sp,#0]
        MOV      r1,r6
        MOV      r0,r7
        BL       SDHC_SetAdmaTableConfig
        MOV      r11,r0
        CMP      r11,#0
        BEQ      |L22.150|
        MOVS     r6,#0
|L22.150|
        MOV      r3,r6
        MOV      r2,r4
        MOV      r1,r9
        MOV      r0,r7
        BL       SDHC_StartTransfer
        MOV      r1,r9
        MOV      r0,r7
        BL       SDHC_SendCommandBlocking
        CBZ      r0,|L22.178|
        MOV      r0,#0x6a6
        B        |L22.62|
|L22.178|
        CBZ      r4,|L22.198|
        MOV      r2,r4
        MOV      r1,r7
        MOV      r0,r6
        BL       SDHC_TransferDataBlocking
        CBZ      r0,|L22.198|
        MOV      r0,#0x6a7
        B        |L22.62|
|L22.198|
        MOVS     r0,#0
        B        |L22.62|
        ENDP

        DCW      0x0000
|L22.204|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L22.248|
        DCB      "transfer",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SDHC_TransferByAdma2Blocking||, CODE, READONLY, ALIGN=2

SDHC_TransferByAdma2Blocking PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r6,#0
        NOP      
|L23.10|
        MOV      r0,r5
        BL       SDHC_GetInterruptStatusFlags
        LDR      r1,|L23.60|
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L23.10|
        MOV      r0,r5
        BL       SDHC_GetInterruptStatusFlags
        LDR      r1,|L23.60|
        SUBS     r1,r1,#2
        ANDS     r0,r0,r1
        CBZ      r0,|L23.44|
        LDRB     r0,[r4,#1]
        CBNZ     r0,|L23.44|
        MOVS     r6,#1
|L23.44|
        LDR      r1,|L23.60|
        ADDS     r1,r1,#8
        MOV      r0,r5
        BL       SDHC_ClearInterruptStatusFlags
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L23.60|
        DCD      0x11700002

        AREA ||i.SDHC_TransferByDataPortBlocking||, CODE, READONLY, ALIGN=1

SDHC_TransferByDataPortBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r6,#0
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L24.24|
        MOV      r1,r4
        MOV      r0,r5
        BL       SDHC_ReadByDataPortBlocking
        MOV      r6,r0
        B        |L24.34|
|L24.24|
        MOV      r1,r4
        MOV      r0,r5
        BL       SDHC_WriteByDataPortBlocking
        MOV      r6,r0
|L24.34|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDHC_TransferCreateHandle||, CODE, READONLY, ALIGN=2

SDHC_TransferCreateHandle PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOV      r5,r2
        MOV      r7,r3
        CBZ      r4,|L25.16|
        B        |L25.28|
|L25.16|
        MOV      r2,#0x587
        ADR      r1,|L25.152|
        ADR      r0,|L25.196|
        BL       __aeabi_assert
|L25.28|
        CBZ      r5,|L25.32|
        B        |L25.44|
|L25.32|
        MOV      r2,#0x588
        ADR      r1,|L25.152|
        ADR      r0,|L25.204|
        BL       __aeabi_assert
|L25.44|
        MOVS     r1,#0x24
        MOV      r0,r4
        BL       __aeabi_memclr4
        LDR      r0,[r5,#0]
        STR      r0,[r4,#0xc]
        LDR      r1,[r5,#4]
        STR      r1,[r4,#0x10]
        LDR      r1,[r5,#8]
        STR      r1,[r4,#0x14]
        LDR      r1,[r5,#0xc]
        STR      r1,[r4,#0x18]
        LDR      r1,[r5,#0x10]
        STR      r1,[r4,#0x1c]
        STR      r7,[r4,#0x20]
        MOV      r0,r8
        BL       SDHC_GetInstance
        LDR      r1,|L25.216|
        STR      r4,[r1,r0,LSL #2]
        MOVS     r1,#1
        MOV      r0,r8
        BL       SDHC_SetTransferInterrupt
        LDR      r0,|L25.220|
        LDR      r1,|L25.224|
        STR      r0,[r1,#0]  ; s_sdhcIsr
        MOV      r0,r8
        BL       SDHC_GetInstance
        LDR      r1,|L25.228|
        LDRSB    r6,[r1,r0]
        CMN      r6,#0x80
        BNE      |L25.118|
        B        |L25.148|
|L25.118|
        MOV      r0,r6
        CMP      r0,#0
        BLT      |L25.144|
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LSRS     r2,r0,#5
        LSLS     r2,r2,#2
        ADD      r2,r2,#0xe000e000
        STR      r1,[r2,#0x100]
|L25.144|
        NOP      
        NOP      
|L25.148|
        POP      {r4-r8,pc}
        ENDP

|L25.152|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L25.196|
        DCB      "handle",0
        DCB      0
|L25.204|
        DCB      "callback",0
        DCB      0
        DCB      0
        DCB      0
|L25.216|
        DCD      s_sdhcHandle
|L25.220|
        DCD      SDHC_TransferHandleIRQ
|L25.224|
        DCD      s_sdhcIsr
|L25.228|
        DCD      s_sdhcIRQ

        AREA ||i.SDHC_TransferDataBlocking||, CODE, READONLY, ALIGN=1

SDHC_TransferDataBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r7,#0
        CBZ      r4,|L26.20|
        CMP      r4,#2
        BNE      |L26.44|
        B        |L26.32|
|L26.20|
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferByDataPortBlocking
        MOV      r7,r0
        B        |L26.48|
|L26.32|
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferByAdma2Blocking
        MOV      r7,r0
        B        |L26.48|
|L26.44|
        MOVS     r7,#4
        NOP      
|L26.48|
        NOP      
        MOV      r0,r7
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.SDHC_TransferHandleCardDetect||, CODE, READONLY, ALIGN=1

SDHC_TransferHandleCardDetect PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        AND      r0,r5,#0x40
        CBZ      r0,|L27.28|
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L27.40|
        MOV      r0,r6
        LDR      r2,[r4,#0xc]
        LDR      r1,[r4,#0x20]
        BLX      r2
        B        |L27.40|
|L27.28|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L27.40|
        MOV      r0,r6
        LDR      r2,[r4,#0x10]
        LDR      r1,[r4,#0x20]
        BLX      r2
|L27.40|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDHC_TransferHandleCommand||, CODE, READONLY, ALIGN=2

SDHC_TransferHandleCommand PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        LDR      r0,[r4,#4]
        CBZ      r0,|L28.16|
        B        |L28.28|
|L28.16|
        MOV      r2,#0x2b6
        ADR      r1,|L28.92|
        ADR      r0,|L28.136|
        BL       __aeabi_assert
|L28.28|
        AND      r0,r5,#0xf0000
        CBZ      r0,|L28.58|
        LDR      r0,[r4,#0]
        CBNZ     r0,|L28.58|
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L28.58|
        MOV      r2,#0x6a6
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r7,r3,[r4,#0x1c]
        BLX      r7
        B        |L28.86|
|L28.58|
        LDR      r1,[r4,#4]
        MOV      r0,r6
        BL       SDHC_ReceiveCommandResponse
        LDR      r0,[r4,#0]
        CBNZ     r0,|L28.86|
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L28.86|
        MOVS     r2,#0
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r7,r3,[r4,#0x1c]
        BLX      r7
|L28.86|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L28.92|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L28.136|
        DCB      "handle->command",0

        AREA ||i.SDHC_TransferHandleData||, CODE, READONLY, ALIGN=2

SDHC_TransferHandleData PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        LDR      r0,[r4,#0]
        CBZ      r0,|L29.16|
        B        |L29.28|
|L29.16|
        MOV      r2,#0x2c9
        ADR      r1,|L29.124|
        ADR      r0,|L29.168|
        BL       __aeabi_assert
|L29.28|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#1]
        CBNZ     r0,|L29.60|
        LDR      r0,|L29.184|
        ANDS     r0,r0,r5
        CBZ      r0,|L29.60|
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L29.60|
        MOV      r2,#0x6a7
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r7,r3,[r4,#0x1c]
        BLX      r7
        B        |L29.120|
|L29.60|
        AND      r0,r5,#0x20
        CBZ      r0,|L29.80|
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        MOV      r0,r6
        BL       SDHC_ReadDataPort
        STR      r0,[r4,#8]
        B        |L29.98|
|L29.80|
        AND      r0,r5,#0x10
        CBZ      r0,|L29.98|
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        MOV      r0,r6
        BL       SDHC_WriteDataPort
        STR      r0,[r4,#8]
|L29.98|
        AND      r0,r5,#2
        CBZ      r0,|L29.120|
        LDR      r0,[r4,#0x1c]
        CBZ      r0,|L29.120|
        MOVS     r2,#0
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r7,r3,[r4,#0x1c]
        BLX      r7
|L29.120|
        POP      {r4-r8,pc}
        ENDP

|L29.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L29.168|
        DCB      "handle->data",0
        DCB      0
        DCB      0
        DCB      0
|L29.184|
        DCD      0x11700000

        AREA ||i.SDHC_TransferHandleIRQ||, CODE, READONLY, ALIGN=2

SDHC_TransferHandleIRQ PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        CBZ      r6,|L30.10|
        B        |L30.22|
|L30.10|
        MOV      r2,#0x5f1
        ADR      r1,|L30.132|
        ADR      r0,|L30.176|
        BL       __aeabi_assert
|L30.22|
        NOP      
        LDR      r0,[r5,#0x30]
        LDR      r1,[r5,#0x38]
        AND      r4,r0,r1
        NOP      
        AND      r0,r4,#0xc0
        CBZ      r0,|L30.52|
        AND      r2,r4,#0xc0
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferHandleCardDetect
|L30.52|
        LDR      r0,|L30.184|
        ANDS     r0,r0,r4
        CBZ      r0,|L30.72|
        LDR      r0,|L30.184|
        AND      r2,r4,r0
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferHandleCommand
|L30.72|
        LDR      r0,|L30.188|
        ANDS     r0,r0,r4
        CBZ      r0,|L30.92|
        LDR      r0,|L30.188|
        AND      r2,r4,r0
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferHandleData
|L30.92|
        AND      r0,r4,#0x100
        CBZ      r0,|L30.106|
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferHandleSdioInterrupt
|L30.106|
        AND      r0,r4,#4
        CBZ      r0,|L30.120|
        MOV      r1,r6
        MOV      r0,r5
        BL       SDHC_TransferHandleSdioBlockGap
|L30.120|
        MOV      r1,r4
        MOV      r0,r5
        BL       SDHC_ClearInterruptStatusFlags
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L30.132|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L30.176|
        DCB      "handle",0
        DCB      0
|L30.184|
        DCD      0x000f0001
|L30.188|
        DCD      0x1170003a

        AREA ||i.SDHC_TransferHandleSdioBlockGap||, CODE, READONLY, ALIGN=1

SDHC_TransferHandleSdioBlockGap PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,[r4,#0x18]
        CBZ      r0,|L31.18|
        MOV      r0,r5
        LDR      r2,[r4,#0x18]
        LDR      r1,[r4,#0x20]
        BLX      r2
|L31.18|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDHC_TransferHandleSdioInterrupt||, CODE, READONLY, ALIGN=1

SDHC_TransferHandleSdioInterrupt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,[r4,#0x14]
        CBZ      r0,|L32.18|
        MOV      r0,r5
        LDR      r2,[r4,#0x14]
        LDR      r1,[r4,#0x20]
        BLX      r2
|L32.18|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDHC_TransferNonBlocking||, CODE, READONLY, ALIGN=2

SDHC_TransferNonBlocking PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0xc
        MOV      r9,r0
        MOV      r5,r1
        MOV      r10,r2
        LDR      r7,[sp,#0x40]
        CBZ      r7,|L33.18|
        B        |L33.30|
|L33.18|
        MOV      r2,#0x5ba
        ADR      r1,|L33.176|
        ADR      r0,|L33.220|
        BL       __aeabi_assert
|L33.30|
        LDR      r0,[r9,#0x28]
        UBFX     r8,r0,#8,#2
        MOV      r11,#0
        LDR      r6,[r7,#4]
        LDR      r4,[r7,#0]
        CBZ      r6,|L33.58|
        CBZ      r4,|L33.66|
        LDR      r0,[r4,#8]
        CMP      r0,#0x10000
        BCC      |L33.66|
|L33.58|
        MOVS     r0,#4
|L33.60|
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
|L33.66|
        MOV      r0,r9
        BL       SDHC_GetPresentStatusFlags
        AND      r0,r0,#1
        CBNZ     r0,|L33.92|
        CBZ      r4,|L33.98|
        MOV      r0,r9
        BL       SDHC_GetPresentStatusFlags
        AND      r0,r0,#2
        CBZ      r0,|L33.98|
|L33.92|
        MOV      r0,#0x6a4
        B        |L33.60|
|L33.98|
        CBZ      r4,|L33.150|
        CMP      r10,#0
        BEQ      |L33.150|
        LDRD     r1,r0,[r4,#4]
        MULS     r1,r0,r1
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L33.120|
        LDR      r0,[r4,#0xc]
        B        |L33.122|
|L33.120|
        LDR      r0,[r4,#0x10]
|L33.122|
        STRD     r0,r1,[sp,#0]
        MOV      r2,r10
        MOV      r1,r8
        MOV      r0,r9
        LDR      r3,[sp,#0x18]
        BL       SDHC_SetAdmaTableConfig
        MOV      r11,r0
        CMP      r11,#0
        BEQ      |L33.150|
        MOV      r8,#0
|L33.150|
        STR      r6,[r5,#4]
        STR      r4,[r5,#0]
        MOVS     r0,#0
        STR      r0,[r5,#8]
        MOV      r3,r8
        MOV      r2,r4
        MOV      r1,r6
        MOV      r0,r9
        BL       SDHC_StartTransfer
        MOVS     r0,#0
        B        |L33.60|
        ENDP

        DCW      0x0000
|L33.176|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c",0
        DCB      0
        DCB      0
        DCB      0
|L33.220|
        DCB      "transfer",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SDHC_WriteByDataPortBlocking||, CODE, READONLY, ALIGN=2

SDHC_WriteByDataPortBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOVS     r7,#0
        MOVS     r5,#0
        LDRB     r0,[r4,#4]
        AND      r0,r0,#3
        CBZ      r0,|L34.36|
        LDRB     r1,[r4,#4]
        AND      r1,r1,#3
        RSB      r1,r1,#4
        LDR      r0,[r4,#4]
        ADD      r0,r0,r1
        STR      r0,[r4,#4]
|L34.36|
        LDRD     r1,r0,[r4,#4]
        MULS     r0,r1,r0
        LSRS     r6,r0,#2
        B        |L34.102|
|L34.46|
        NOP      
|L34.48|
        MOV      r0,r8
        BL       SDHC_GetInterruptStatusFlags
        LDR      r1,|L34.160|
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L34.48|
        MOV      r0,r8
        BL       SDHC_GetInterruptStatusFlags
        AND      r0,r0,#0x1700000
        CBZ      r0,|L34.80|
        LDRB     r0,[r4,#1]
        CBNZ     r0,|L34.80|
        MOVS     r5,#1
|L34.80|
        CBNZ     r5,|L34.94|
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r8
        BL       SDHC_WriteDataPort
        MOV      r7,r0
|L34.94|
        LDR      r1,|L34.160|
        MOV      r0,r8
        BL       SDHC_ClearInterruptStatusFlags
|L34.102|
        CBNZ     r5,|L34.108|
        CMP      r7,r6
        BCC      |L34.46|
|L34.108|
        NOP      
|L34.110|
        MOV      r0,r8
        BL       SDHC_GetInterruptStatusFlags
        LDR      r1,|L34.160|
        SUBS     r1,r1,#0xe
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L34.110|
        MOV      r0,r8
        BL       SDHC_GetInterruptStatusFlags
        AND      r0,r0,#0x1700000
        CBZ      r0,|L34.144|
        LDRB     r0,[r4,#1]
        CBNZ     r0,|L34.144|
        MOVS     r5,#1
|L34.144|
        LDR      r1,|L34.160|
        SUBS     r1,r1,#0xe
        MOV      r0,r8
        BL       SDHC_ClearInterruptStatusFlags
        MOV      r0,r5
        POP      {r4-r8,pc}
        ENDP

|L34.160|
        DCD      0x01700010

        AREA ||i.SDHC_WriteDataPort||, CODE, READONLY, ALIGN=1

SDHC_WriteDataPort PROC
        PUSH     {r4-r9,lr}
        MOV      r6,r0
        MOV      r3,r2
        LDR      r0,[r6,#0x44]
        UBFX     r5,r0,#16,#8
        LDRB     r0,[r1,#4]
        AND      r0,r0,#3
        CBZ      r0,|L35.40|
        LDRB     r12,[r1,#4]
        AND      r12,r12,#3
        RSB      r12,r12,#4
        LDR      r0,[r1,#4]
        ADD      r0,r0,r12
        STR      r0,[r1,#4]
|L35.40|
        LDRD     r12,r0,[r1,#4]
        MUL      r0,r0,r12
        LSRS     r2,r0,#2
        CMP      r5,r2
        BCC      |L35.58|
        MOV      r4,r2
        B        |L35.74|
|L35.58|
        CMP      r5,r2
        BCS      |L35.72|
        SUBS     r0,r2,r3
        CMP      r0,r5
        BCC      |L35.72|
        MOV      r4,r5
        B        |L35.74|
|L35.72|
        SUBS     r4,r2,r3
|L35.74|
        MOVS     r7,#0
        B        |L35.98|
|L35.78|
        MOV      r12,r3
        ADDS     r3,r3,#1
        LDR      r9,[r1,#0x10]
        LDR      r0,[r9,r12,LSL #2]
        STR      r0,[r6,#0x20]
        NOP      
        ADDS     r0,r7,#1
        MOV      r7,r0
|L35.98|
        CMP      r7,r4
        BCC      |L35.78|
        MOV      r0,r3
        POP      {r4-r9,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_sdhcBase
        DCD      0x400b1000
s_sdhcIRQ
        DCB      0x51,0x00,0x00,0x00
s_sdhcClock
        DCD      0x10300011

        AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

        DCB      "config->dataBlockSize <= (SDHC_BLKATTR_BLKSIZE_MASK >> "
        DCB      "SDHC_BLKATTR_BLKSIZE_SHIFT)",0
        DCB      0
        DCB      "config->dataBlockCount <= (SDHC_BLKATTR_BLKCNT_MASK >> "
        DCB      "SDHC_BLKATTR_BLKCNT_SHIFT)",0
        DCB      0
        DCB      0
        DCB      "(config->writeWatermarkLevel >= 1U) && (config->writeWa"
        DCB      "termarkLevel <= 128U)",0
        DCB      0
        DCB      0
        DCB      0
        DCB      "(config->readWatermarkLevel >= 1U) && (config->readWate"
        DCB      "rmarkLevel <= 128U)",0
        DCB      0
        DCB      "config->ackTimeoutCount <= (SDHC_MMCBOOT_DTOCVACK_MASK "
        DCB      ">> SDHC_MMCBOOT_DTOCVACK_SHIFT)",0
        DCB      0
        DCB      "config->blockCount <= (SDHC_MMCBOOT_BOOTBLKCNT_MASK >> "
        DCB      "SDHC_MMCBOOT_BOOTBLKCNT_SHIFT)",0

        AREA ||.data||, DATA, ALIGN=2

s_sdhcHandle
        DCD      0x00000000
s_sdhcIsr
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_sdhc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_sdhc_c_03682a9a____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_fsl_sdhc_c_03682a9a____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_sdhc_c_03682a9a____REVSH|
#line 483
|__asm___10_fsl_sdhc_c_03682a9a____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_sdhc_c_03682a9a____RRX|
#line 670
|__asm___10_fsl_sdhc_c_03682a9a____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SDHC_Deinit [CODE]
        EXPORT SDHC_DriverIRQHandler [CODE]
        EXPORT SDHC_EnableSdioControl [CODE]
        EXPORT SDHC_GetCapability [CODE]
        EXPORT SDHC_Init [CODE]
        EXPORT SDHC_Reset [CODE]
        EXPORT SDHC_SetAdmaTableConfig [CODE]
        EXPORT SDHC_SetCardActive [CODE]
        EXPORT SDHC_SetMmcBootConfig [CODE]
        EXPORT SDHC_SetSdClock [CODE]
        EXPORT SDHC_SetTransferConfig [CODE]
        EXPORT SDHC_TransferBlocking [CODE]
        EXPORT SDHC_TransferCreateHandle [CODE]
        EXPORT SDHC_TransferHandleIRQ [CODE]
        EXPORT SDHC_TransferNonBlocking [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT __aeabi_memclr4 [CODE]

        KEEP SDHC_ClearInterruptStatusFlags
        KEEP SDHC_GetInstance
        KEEP SDHC_GetInterruptStatusFlags
        KEEP SDHC_GetPresentStatusFlags
        KEEP SDHC_ReadByDataPortBlocking
        KEEP SDHC_ReadDataPort
        KEEP SDHC_ReceiveCommandResponse
        KEEP SDHC_SendCommandBlocking
        KEEP SDHC_SetTransferInterrupt
        KEEP SDHC_StartTransfer
        KEEP SDHC_TransferByAdma2Blocking
        KEEP SDHC_TransferByDataPortBlocking
        KEEP SDHC_TransferDataBlocking
        KEEP SDHC_TransferHandleCardDetect
        KEEP SDHC_TransferHandleCommand
        KEEP SDHC_TransferHandleData
        KEEP SDHC_TransferHandleSdioBlockGap
        KEEP SDHC_TransferHandleSdioInterrupt
        KEEP SDHC_WriteByDataPortBlocking
        KEEP SDHC_WriteDataPort
        KEEP s_sdhcBase
        KEEP s_sdhcIRQ
        KEEP s_sdhcClock
        KEEP s_sdhcHandle
        KEEP s_sdhcIsr

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
