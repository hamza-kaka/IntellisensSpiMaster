; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_sdramc.o --depend=.\objects\fsl_sdramc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_sdramc.crf ..\..\devices\MK66F18\drivers\fsl_sdramc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SDRAMC_Deinit||, CODE, READONLY, ALIGN=2

SDRAMC_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r2,#0
        MOV      r1,r2
        MOV      r0,r5
        BL       SDRAMC_EnableOperateValid
        MOVS     r2,#0
        MOVS     r1,#1
        MOV      r0,r5
        BL       SDRAMC_EnableOperateValid
        MOV      r0,r5
        BL       SDRAMC_GetInstance
        LDR      r1,|L1.56|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L1.60|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L1.56|
        DCD      s_sdramClock
|L1.60|
        DCD      0x40047000

        AREA ||i.SDRAMC_EnableOperateValid||, CODE, READONLY, ALIGN=1

SDRAMC_EnableOperateValid PROC
        PUSH     {r4,lr}
        CBZ      r2,|L2.30|
        ADD      r3,r0,#0x48
        ADD      r3,r3,r1,LSL #3
        LDR      r3,[r3,#4]
        ORR      r4,r3,#1
        ADD      r3,r0,#0x48
        ADD      r3,r3,r1,LSL #3
        STR      r4,[r3,#4]
        B        |L2.54|
|L2.30|
        ADD      r3,r0,#0x48
        ADD      r3,r3,r1,LSL #3
        LDR      r3,[r3,#4]
        BIC      r4,r3,#1
        ADD      r3,r0,#0x48
        ADD      r3,r3,r1,LSL #3
        STR      r4,[r3,#4]
|L2.54|
        POP      {r4,pc}
        ENDP


        AREA ||i.SDRAMC_GetInstance||, CODE, READONLY, ALIGN=2

SDRAMC_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L3.22|
|L3.8|
        LDR      r0,|L3.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L3.20|
        B        |L3.26|
|L3.20|
        ADDS     r4,r4,#1
|L3.22|
        CMP      r4,#0
        BEQ      |L3.8|
|L3.26|
        NOP      
        CBNZ     r4,|L3.32|
        B        |L3.42|
|L3.32|
        MOVS     r2,#0x3e
        ADR      r1,|L3.52|
        ADR      r0,|L3.96|
        BL       __aeabi_assert
|L3.42|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.48|
        DCD      s_sdramcBases
|L3.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdramc.c",0
        DCB      0
|L3.96|
        DCB      "instance < ARRAY_SIZE(s_sdramcBases)",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SDRAMC_Init||, CODE, READONLY, ALIGN=2

SDRAMC_Init PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r4,r1
        CBZ      r4,|L4.12|
        B        |L4.22|
|L4.12|
        MOVS     r2,#0x64
        ADR      r1,|L4.244|
        ADR      r0,|L4.288|
        BL       __aeabi_assert
|L4.22|
        LDR      r0,[r4,#0]
        CBZ      r0,|L4.28|
        B        |L4.38|
|L4.28|
        MOVS     r2,#0x65
        ADR      r1,|L4.244|
        ADR      r0,|L4.300|
        BL       __aeabi_assert
|L4.38|
        LDR      r0,[r4,#4]
        CBZ      r0,|L4.44|
        B        |L4.54|
|L4.44|
        MOVS     r2,#0x66
        ADR      r1,|L4.244|
        ADR      r0,|L4.328|
        BL       __aeabi_assert
|L4.54|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        CBZ      r0,|L4.62|
        B        |L4.72|
|L4.62|
        MOVS     r2,#0x67
        ADR      r1,|L4.244|
        ADR      r0,|L4.352|
        BL       __aeabi_assert
|L4.72|
        LDR      r5,[r4,#4]
        LDR      r8,[r4,#0]
        MOV      r0,r7
        BL       SDRAMC_GetInstance
        LDR      r1,|L4.392|
        LDR      r9,[r1,r0,LSL #2]
        LDR      r1,|L4.396|
        ADD      r0,r1,r9,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSL      r2,r2,r9
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        MOV      r1,#0x3e8
        LDR      r0,[r8,#8]
        UDIV     r0,r0,r1
        LDR      r1,[r8,#4]
        MUL      r10,r0,r1
        LDR      r0,|L4.400|
        UDIV     r0,r10,r0
        MOVS     r1,#1
        RSB      r10,r1,r0,LSR #4
        UBFX     r0,r10,#0,#9
        LDRB     r1,[r8,#0]
        MOV      r2,#0x600
        AND      r1,r2,r1,LSL #9
        ORRS     r0,r0,r1
        STRH     r0,[r7,#0x42]
        MOVS     r6,#0
        B        |L4.234|
|L4.168|
        LDRB     r0,[r5,#1]
        MOVS     r1,#0x30
        AND      r0,r1,r0,LSL #4
        LDRB     r1,[r5,#3]
        MOV      r2,#0x3000
        AND      r1,r2,r1,LSL #12
        ORRS     r0,r0,r1
        LDRB     r1,[r5,#2]
        MOV      r2,#0x700
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        LDR      r1,[r5,#4]
        BFC      r1,#0,#18
        ORRS     r0,r0,r1
        ADD      r1,r7,#0x48
        STR      r0,[r1,r6,LSL #3]
        LDR      r0,[r5,#8]
        BFC      r0,#0,#18
        ADDS     r0,r0,#1
        ADD      r1,r1,r6,LSL #3
        STR      r0,[r1,#4]
        ADDS     r5,r5,#0xc
        ADDS     r6,r6,#1
|L4.234|
        LDRB     r0,[r4,#8]
        CMP      r0,r6
        BHI      |L4.168|
        POP      {r4-r10,pc}
        ENDP

|L4.244|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sdramc.c",0
        DCB      0
|L4.288|
        DCB      "configure",0
        DCB      0
        DCB      0
|L4.300|
        DCB      "configure->refreshConfig",0
        DCB      0
        DCB      0
        DCB      0
|L4.328|
        DCB      "configure->blockConfig",0
        DCB      0
|L4.352|
        DCB      "configure->refreshConfig->busClock_Hz",0
        DCB      0
        DCB      0
|L4.392|
        DCD      s_sdramClock
|L4.396|
        DCD      0x40047000
|L4.400|
        DCD      0x000f4240

        AREA ||i.SDRAMC_SendCommand||, CODE, READONLY, ALIGN=1

SDRAMC_SendCommand PROC
        PUSH     {r4,lr}
        CMP      r2,#6
        BCS      |L5.132|
        TBB      [pc,r2]
        DCB      0x03,0x0e
        DCB      0x2f,0x36,0x19,0x24
        ADD      r3,r0,#0x48
        LDR      r3,[r3,r1,LSL #3]
        ORR      r4,r3,#0x40
        ADD      r3,r0,#0x48
        STR      r4,[r3,r1,LSL #3]
        B        |L5.134|
        ADD      r3,r0,#0x48
        LDR      r3,[r3,r1,LSL #3]
        ORR      r4,r3,#8
        ADD      r3,r0,#0x48
        STR      r4,[r3,r1,LSL #3]
        B        |L5.134|
        ADD      r3,r0,#0x48
        LDR      r3,[r3,r1,LSL #3]
        ORR      r4,r3,#0x8000
        ADD      r3,r0,#0x48
        STR      r4,[r3,r1,LSL #3]
        B        |L5.134|
        ADD      r3,r0,#0x48
        LDR      r3,[r3,r1,LSL #3]
        BIC      r4,r3,#0x8000
        ADD      r3,r0,#0x48
        STR      r4,[r3,r1,LSL #3]
        B        |L5.134|
        LDRH     r3,[r0,#0x42]
        ORR      r3,r3,#0x800
        STRH     r3,[r0,#0x42]
        B        |L5.134|
        LDRH     r3,[r0,#0x42]
        BIC      r3,r3,#0x800
        STRH     r3,[r0,#0x42]
        B        |L5.134|
|L5.132|
        NOP      
|L5.134|
        NOP      
        POP      {r4,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_sdramClock
        DCD      0x10400003
s_sdramcBases
        DCD      0x4000f000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_sdramc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_sdramc_c_f548a6a7____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_fsl_sdramc_c_f548a6a7____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_sdramc_c_f548a6a7____REVSH|
#line 483
|__asm___12_fsl_sdramc_c_f548a6a7____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_sdramc_c_f548a6a7____RRX|
#line 670
|__asm___12_fsl_sdramc_c_f548a6a7____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SDRAMC_Deinit [CODE]
        EXPORT SDRAMC_Init [CODE]
        EXPORT SDRAMC_SendCommand [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP SDRAMC_EnableOperateValid
        KEEP SDRAMC_GetInstance
        KEEP s_sdramClock
        KEEP s_sdramcBases

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
