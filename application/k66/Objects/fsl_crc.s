; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_crc.o --depend=.\objects\fsl_crc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_crc.crf ..\..\devices\MK66F18\drivers\fsl_crc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CRC_ConfigureAndStart||, CODE, READONLY, ALIGN=1

CRC_ConfigureAndStart PROC
        PUSH     {r4,r5,lr}
        LDRB     r3,[r1,#9]
        MOV      r4,#0xc0000000
        AND      r3,r4,r3,LSL #30
        LDRB     r4,[r1,#8]
        MOV      r5,#0x30000000
        AND      r4,r5,r4,LSL #28
        ORRS     r3,r3,r4
        LDRB     r4,[r1,#0xa]
        MOV      r5,#0x4000000
        AND      r4,r5,r4,LSL #26
        ORRS     r3,r3,r4
        LDRB     r4,[r1,#0xb]
        ASRS     r5,r5,#2
        AND      r4,r5,r4,LSL #24
        ORR      r2,r3,r4
        STR      r2,[r0,#8]
        LDR      r3,[r1,#0]
        STR      r3,[r0,#4]
        ORR      r3,r2,#0x2000000
        STR      r3,[r0,#8]
        LDR      r3,[r1,#4]
        STR      r3,[r0,#0]
        STR      r2,[r0,#8]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.CRC_Get16bitResult||, CODE, READONLY, ALIGN=1

CRC_Get16bitResult PROC
        MOV      r2,r0
        LDR      r1,[r2,#0]
        LDR      r0,[r2,#8]
        UBFX     r3,r0,#28,#2
        CMP      r3,#2
        BCC      |L2.22|
        BFC      r1,#0,#16
        LSRS     r1,r1,#16
        B        |L2.24|
|L2.22|
        UXTH     r1,r1
|L2.24|
        UXTH     r0,r1
        BX       lr
        ENDP


        AREA ||i.CRC_Get32bitResult||, CODE, READONLY, ALIGN=1

CRC_Get32bitResult PROC
        MOV      r1,r0
        LDR      r0,[r1,#0]
        BX       lr
        ENDP


        AREA ||i.CRC_GetDefaultConfig||, CODE, READONLY, ALIGN=2

CRC_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        STR      r1,[r0,#8]
        STR      r1,[r0,#0xc]
        LDR      r4,|L4.24|
        LDM      r4,{r1-r4}
        STM      r0,{r1-r4}
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L4.24|
        DCD      crc16ccit

        AREA ||i.CRC_GetTransposeTypeFromReflectIn||, CODE, READONLY, ALIGN=1

CRC_GetTransposeTypeFromReflectIn PROC
        MOV      r1,r0
        CBZ      r1,|L5.8|
        MOVS     r0,#2
|L5.6|
        BX       lr
|L5.8|
        MOVS     r0,#3
        B        |L5.6|
        ENDP


        AREA ||i.CRC_Init||, CODE, READONLY, ALIGN=2

CRC_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,|L6.52|
        LDR      r2,|L6.56|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        LDRB     r0,[r4,#0xc]
        CBNZ     r0,|L6.40|
        MOV      r1,r4
        MOV      r0,r5
        BL       CRC_SetProtocolConfig
        B        |L6.48|
|L6.40|
        MOV      r1,r4
        MOV      r0,r5
        BL       CRC_SetRawProtocolConfig
|L6.48|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L6.52|
        DCD      0x103c0012
|L6.56|
        DCD      0x40047000

        AREA ||i.CRC_SetProtocolConfig||, CODE, READONLY, ALIGN=1

CRC_SetProtocolConfig PROC
        PUSH     {r1-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDRB     r0,[r4,#9]
        CBZ      r0,|L7.22|
        MOVS     r1,#2
        B        |L7.24|
|L7.22|
        MOVS     r1,#0
|L7.24|
        STRB     r1,[sp,#8]
        LDRB     r0,[r4,#8]
        BL       CRC_GetTransposeTypeFromReflectIn
        STRB     r0,[sp,#9]
        LDRB     r0,[r4,#0xa]
        STRB     r0,[sp,#0xa]
        LDRB     r0,[r4,#0xb]
        STRB     r0,[sp,#0xb]
        MOV      r1,sp
        MOV      r0,r5
        BL       CRC_ConfigureAndStart
        POP      {r1-r5,pc}
        ENDP


        AREA ||i.CRC_SetRawProtocolConfig||, CODE, READONLY, ALIGN=1

CRC_SetRawProtocolConfig PROC
        PUSH     {r1-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        MOVS     r0,#0
        STRB     r0,[sp,#8]
        LDRB     r0,[r4,#8]
        BL       CRC_GetTransposeTypeFromReflectIn
        STRB     r0,[sp,#9]
        MOVS     r0,#0
        STRB     r0,[sp,#0xa]
        LDRB     r0,[r4,#0xb]
        STRB     r0,[sp,#0xb]
        MOV      r1,sp
        MOV      r0,r5
        BL       CRC_ConfigureAndStart
        POP      {r1-r5,pc}
        ENDP


        AREA ||i.CRC_WriteData||, CODE, READONLY, ALIGN=1

CRC_WriteData PROC
        PUSH     {r4,lr}
        B        |L9.12|
|L9.4|
        LDRB     r4,[r1,#0]
        STRB     r4,[r0,#0]
        ADDS     r1,r1,#1
        SUBS     r2,r2,#1
|L9.12|
        CBZ      r2,|L9.22|
        AND      r4,r1,#3
        CMP      r4,#0
        BNE      |L9.4|
|L9.22|
        MOV      r3,r1
        B        |L9.34|
|L9.26|
        LDR      r4,[r3,#0]
        STR      r4,[r0,#0]
        ADDS     r3,r3,#4
        SUBS     r2,r2,#4
|L9.34|
        CMP      r2,#4
        BCS      |L9.26|
        MOV      r1,r3
        B        |L9.50|
|L9.42|
        LDRB     r4,[r1,#0]
        STRB     r4,[r0,#0]
        ADDS     r1,r1,#1
        SUBS     r2,r2,#1
|L9.50|
        CMP      r2,#0
        BNE      |L9.42|
        POP      {r4,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

crc16ccit
        DCD      0x00001021
        DCD      0x0000ffff
        DCB      0x00,0x00,0x00,0x00
        DCB      0x00,0x00,0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_crc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_crc_c_CRC_Init____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_fsl_crc_c_CRC_Init____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_crc_c_CRC_Init____REVSH|
#line 483
|__asm___9_fsl_crc_c_CRC_Init____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_crc_c_CRC_Init____RRX|
#line 670
|__asm___9_fsl_crc_c_CRC_Init____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT CRC_Get16bitResult [CODE]
        EXPORT CRC_Get32bitResult [CODE]
        EXPORT CRC_GetDefaultConfig [CODE]
        EXPORT CRC_Init [CODE]
        EXPORT CRC_WriteData [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP CRC_ConfigureAndStart
        KEEP CRC_GetTransposeTypeFromReflectIn
        KEEP CRC_SetProtocolConfig
        KEEP CRC_SetRawProtocolConfig
        KEEP crc16ccit

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
