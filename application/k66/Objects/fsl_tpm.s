; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_tpm.o --depend=.\objects\fsl_tpm.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_tpm.crf ..\..\devices\MK66F18\drivers\fsl_tpm.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.TPM_Deinit||, CODE, READONLY, ALIGN=2

TPM_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        BIC      r0,r0,#0x18
        STR      r0,[r4,#0]
        MOV      r0,r4
        BL       TPM_GetInstance
        LDR      r1,|L1.44|
        LDR      r5,[r1,r0,LSL #2]
        LDR      r1,|L1.48|
        ADD      r0,r1,r5,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r5
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L1.44|
        DCD      s_tpmClocks
|L1.48|
        DCD      0x40047000

        AREA ||i.TPM_DisableInterrupts||, CODE, READONLY, ALIGN=1

TPM_DisableInterrupts PROC
        PUSH     {r4,r5,lr}
        UXTB     r2,r1
        MOVS     r3,#0
        AND      r4,r1,#0x100
        CMP      r4,#0x100
        BNE      |L2.24|
        LDR      r4,[r0,#0]
        BIC      r4,r4,#0x40
        STR      r4,[r0,#0]
|L2.24|
        B        |L2.58|
|L2.26|
        AND      r4,r2,#1
        CBZ      r4,|L2.52|
        ADD      r4,r0,#0xc
        LDR      r4,[r4,r3,LSL #3]
        BIC      r5,r4,#0x40
        ADD      r4,r0,#0xc
        STR      r5,[r4,r3,LSL #3]
|L2.52|
        ADDS     r4,r3,#1
        UXTB     r3,r4
        LSRS     r2,r2,#1
|L2.58|
        CMP      r2,#0
        BNE      |L2.26|
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.TPM_EnableInterrupts||, CODE, READONLY, ALIGN=1

TPM_EnableInterrupts PROC
        PUSH     {r4,r5,lr}
        UXTB     r2,r1
        MOVS     r3,#0
        AND      r4,r1,#0x100
        CMP      r4,#0x100
        BNE      |L3.24|
        LDR      r4,[r0,#0]
        ORR      r4,r4,#0x40
        STR      r4,[r0,#0]
|L3.24|
        B        |L3.58|
|L3.26|
        AND      r4,r2,#1
        CBZ      r4,|L3.52|
        ADD      r4,r0,#0xc
        LDR      r4,[r4,r3,LSL #3]
        ORR      r5,r4,#0x40
        ADD      r4,r0,#0xc
        STR      r5,[r4,r3,LSL #3]
|L3.52|
        ADDS     r4,r3,#1
        UXTB     r3,r4
        LSRS     r2,r2,#1
|L3.58|
        CMP      r2,#0
        BNE      |L3.26|
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.TPM_GetDefaultConfig||, CODE, READONLY, ALIGN=2

TPM_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L4.8|
        B        |L4.18|
|L4.8|
        MOVS     r2,#0x9e
        ADR      r1,|L4.48|
        ADR      r0,|L4.88|
        BL       __aeabi_assert
|L4.18|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STR      r0,[r4,#4]
        STRH     r0,[r4,#8]
        STRB     r0,[r4,#0]
        STRB     r0,[r4,#1]
        STRB     r0,[r4,#4]
        STRB     r0,[r4,#5]
        STRB     r0,[r4,#6]
        STRB     r0,[r4,#7]
        STRB     r0,[r4,#8]
        STRB     r0,[r4,#9]
        STRB     r0,[r4,#2]
        STRB     r0,[r4,#3]
        POP      {r4,pc}
        ENDP

|L4.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L4.88|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.TPM_GetEnabledInterrupts||, CODE, READONLY, ALIGN=2

TPM_GetEnabledInterrupts PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOVS     r6,#0
        MOVS     r7,#1
        MOVS     r4,#2
        ADDS     r0,r4,#1
        CBZ      r0,|L5.18|
        B        |L5.30|
|L5.18|
        MOV      r2,#0x387
        ADR      r1,|L5.80|
        ADR      r0,|L5.120|
        BL       __aeabi_assert
|L5.30|
        LDR      r0,[r5,#0]
        AND      r0,r0,#0x40
        CBZ      r0,|L5.42|
        ORR      r6,r6,#0x100
|L5.42|
        B        |L5.68|
|L5.44|
        SUBS     r0,r4,#1
        SXTB     r4,r0
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        AND      r0,r0,#0x40
        CBZ      r0,|L5.68|
        LSL      r0,r7,r4
        ORRS     r6,r6,r0
|L5.68|
        CMP      r4,#0
        BGT      |L5.44|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L5.80|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L5.120|
        DCB      "chnlCount != -1",0

        AREA ||i.TPM_GetInstance||, CODE, READONLY, ALIGN=2

TPM_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r6,#3
        MOVS     r4,#0
        B        |L6.24|
|L6.10|
        LDR      r0,|L6.52|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L6.22|
        B        |L6.28|
|L6.22|
        ADDS     r4,r4,#1
|L6.24|
        CMP      r4,r6
        BCC      |L6.10|
|L6.28|
        NOP      
        CMP      r4,r6
        BCS      |L6.36|
        B        |L6.46|
|L6.36|
        MOVS     r2,#0x3e
        ADR      r1,|L6.56|
        ADR      r0,|L6.96|
        BL       __aeabi_assert
|L6.46|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L6.52|
        DCD      s_tpmBases
|L6.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L6.96|
        DCB      "instance < tpmArrayCount",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.TPM_Init||, CODE, READONLY, ALIGN=2

TPM_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L7.10|
        B        |L7.20|
|L7.10|
        MOVS     r2,#0x4d
        ADR      r1,|L7.180|
        ADR      r0,|L7.220|
        BL       __aeabi_assert
|L7.20|
        MOV      r0,r5
        BL       TPM_GetInstance
        LDR      r1,|L7.236|
        LDR      r6,[r1,r0,LSL #2]
        LDR      r1,|L7.240|
        ADD      r0,r1,r6,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r6
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        LDRB     r0,[r4,#0]
        AND      r0,r0,#7
        STR      r0,[r5,#0]
        LDRB     r0,[r4,#4]
        MOVS     r1,#0x20
        AND      r0,r1,r0,LSL #5
        LDRB     r1,[r4,#1]
        MOV      r2,#0x200
        AND      r1,r2,r1,LSL #9
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#6]
        LSLS     r2,r2,#9
        AND      r1,r2,r1,LSL #18
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#8]
        ASRS     r2,r2,#2
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#7]
        LSLS     r2,r2,#1
        AND      r1,r2,r1,LSL #17
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#9]
        LSLS     r2,r2,#2
        AND      r1,r2,r1,LSL #19
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#3]
        LSLS     r2,r2,#4
        AND      r1,r2,r1,LSL #23
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#2]
        MOV      r2,#0xf000000
        AND      r1,r2,r1,LSL #24
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x84]
        LDRB     r0,[r4,#5]
        CMP      r0,#1
        BNE      |L7.164|
        LDR      r0,[r5,#0x84]
        ORR      r0,r0,#0xc0
        STR      r0,[r5,#0x84]
        B        |L7.176|
|L7.164|
        LDR      r0,[r5,#0x84]
        BIC      r0,r0,#0xc0
        STR      r0,[r5,#0x84]
|L7.176|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L7.180|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L7.220|
        DCB      "NULL != config",0
        DCB      0
|L7.236|
        DCD      s_tpmClocks
|L7.240|
        DCD      0x40047000

        AREA ||i.TPM_SetupDualEdgeCapture||, CODE, READONLY, ALIGN=2

TPM_SetupDualEdgeCapture PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r7,r2
        MOV      r9,r3
        CBZ      r7,|L8.16|
        B        |L8.28|
|L8.16|
        MOV      r2,#0x292
        ADR      r1,|L8.356|
        ADR      r0,|L8.396|
        BL       __aeabi_assert
|L8.28|
        SXTB     r0,r4
        CMP      r0,#1
        BGE      |L8.36|
        B        |L8.48|
|L8.36|
        MOV      r2,#0x293
        ADR      r1,|L8.356|
        LDR      r0,|L8.416|
        BL       __aeabi_assert
|L8.48|
        CBNZ     r4,|L8.62|
        LDR      r0,[r5,#0x80]
        BIC      r0,r0,#1
        STR      r0,[r5,#0x80]
|L8.62|
        LSLS     r1,r4,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        BIC      r1,r0,#0x3c
        LSLS     r2,r4,#1
        ADD      r0,r5,#0xc
        STR      r1,[r0,r2,LSL #3]
        NOP      
|L8.88|
        LSLS     r1,r4,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L8.88|
        MOVS     r0,#1
        ADD      r1,r0,r4,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        BIC      r1,r0,#0x3c
        MOVS     r0,#1
        ADD      r2,r0,r4,LSL #1
        ADD      r0,r5,#0xc
        STR      r1,[r0,r2,LSL #3]
        NOP      
|L8.140|
        MOVS     r0,#1
        ADD      r1,r0,r4,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L8.140|
        LDRB     r0,[r7,#0]
        CMP      r0,#1
        BNE      |L8.210|
        MOV      r8,#3
        LDR      r0,[r5,#0x64]
        LSLS     r1,r4,#3
        LSL      r1,r8,r1
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x64]
        LDR      r6,[r5,#0x78]
        ADDS     r0,r4,#1
        LSLS     r1,r0,#2
        MOVS     r0,#0xf
        LSLS     r0,r0,r1
        BICS     r6,r6,r0
        ADDS     r0,r4,#1
        LSLS     r1,r0,#2
        LSL      r0,r9,r1
        ORRS     r6,r6,r0
        STR      r6,[r5,#0x78]
        B        |L8.252|
|L8.210|
        LDR      r6,[r5,#0x64]
        MOVS     r0,#2
        LSLS     r0,r0,r4
        BICS     r6,r6,r0
        MOV      r8,#1
        LSLS     r0,r4,#3
        LSL      r0,r8,r0
        ORRS     r6,r6,r0
        STR      r6,[r5,#0x64]
        LDR      r6,[r5,#0x78]
        LSLS     r1,r4,#2
        MOVS     r0,#0xf
        LSLS     r0,r0,r1
        BICS     r6,r6,r0
        LSLS     r1,r4,#2
        LSL      r0,r9,r1
        ORRS     r6,r6,r0
        STR      r6,[r5,#0x78]
|L8.252|
        LSLS     r1,r4,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        LDRB     r1,[r7,#1]
        ORRS     r0,r0,r1
        LSLS     r2,r4,#1
        ADD      r1,r5,#0xc
        STR      r0,[r1,r2,LSL #3]
        NOP      
|L8.278|
        LSLS     r1,r4,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L8.278|
        MOVS     r0,#1
        ADD      r1,r0,r4,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        LDRB     r1,[r7,#2]
        ORRS     r0,r0,r1
        MOVS     r1,#1
        ADD      r2,r1,r4,LSL #1
        ADD      r1,r5,#0xc
        STR      r0,[r1,r2,LSL #3]
        NOP      
|L8.330|
        MOVS     r0,#1
        ADD      r1,r0,r4,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L8.330|
        POP      {r4-r10,pc}
        ENDP

|L8.356|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L8.396|
        DCB      "NULL != edgeParam",0
        DCB      0
        DCB      0
|L8.416|
        DCD      ||.conststring||

        AREA ||i.TPM_SetupInputCapture||, CODE, READONLY, ALIGN=2

TPM_SetupInputCapture PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        CMP      r5,#2
        BGE      |L9.14|
        B        |L9.26|
|L9.14|
        MOV      r2,#0x221
        ADR      r1,|L9.136|
        ADR      r0,|L9.176|
        BL       __aeabi_assert
|L9.26|
        CBZ      r5,|L9.32|
        CMP      r5,#1
        BNE      |L9.44|
|L9.32|
        LDR      r0,[r4,#0x80]
        BIC      r0,r0,#1
        STR      r0,[r4,#0x80]
|L9.44|
        LDR      r0,[r4,#0x64]
        LSRS     r1,r5,#1
        LSLS     r2,r1,#3
        MOVS     r1,#1
        LSLS     r1,r1,r2
        BICS     r0,r0,r1
        STR      r0,[r4,#0x64]
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #3]
        BIC      r1,r0,#0x3c
        ADD      r0,r4,#0xc
        STR      r1,[r0,r5,LSL #3]
        NOP      
|L9.80|
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L9.80|
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #3]
        ORRS     r0,r0,r6
        ADD      r1,r4,#0xc
        STR      r0,[r1,r5,LSL #3]
        NOP      
|L9.116|
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L9.116|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L9.136|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L9.176|
        DCB      "chnlNumber < FSL_FEATURE_TPM_CHANNEL_COUNTn(base)",0
        DCB      0
        DCB      0

        AREA ||i.TPM_SetupOutputCompare||, CODE, READONLY, ALIGN=2

TPM_SetupOutputCompare PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        CMP      r4,#2
        BGE      |L10.18|
        B        |L10.30|
|L10.18|
        MOV      r2,#0x25c
        ADR      r1,|L10.136|
        ADR      r0,|L10.176|
        BL       __aeabi_assert
|L10.30|
        CBZ      r4,|L10.36|
        CMP      r4,#1
        BNE      |L10.48|
|L10.36|
        LDR      r0,[r5,#0x80]
        BIC      r0,r0,#1
        STR      r0,[r5,#0x80]
|L10.48|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        BIC      r1,r0,#0x3c
        ADD      r0,r5,#0xc
        STR      r1,[r0,r4,LSL #3]
        NOP      
|L10.70|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L10.70|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        ORRS     r0,r0,r6
        ADD      r1,r5,#0xc
        STR      r0,[r1,r4,LSL #3]
        MOV      r0,r1
        ADD      r0,r0,r4,LSL #3
        STR      r7,[r0,#4]
        NOP      
|L10.114|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L10.114|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L10.136|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L10.176|
        DCB      "chnlNumber < FSL_FEATURE_TPM_CHANNEL_COUNTn(base)",0
        DCB      0
        DCB      0

        AREA ||i.TPM_SetupPwm||, CODE, READONLY, ALIGN=2

TPM_SetupPwm PROC
        PUSH     {r2-r12,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r9,r2
        MOV      r7,r3
        LDR      r10,[sp,#0x30]
        CBZ      r4,|L11.20|
        B        |L11.30|
|L11.20|
        MOVS     r2,#0xd5
        ADR      r1,|L11.756|
        ADR      r0,|L11.796|
        BL       __aeabi_assert
|L11.30|
        CMP      r10,#0
        BEQ      |L11.38|
        B        |L11.48|
|L11.38|
        MOVS     r2,#0xd6
        ADR      r1,|L11.756|
        ADR      r0,|L11.816|
        BL       __aeabi_assert
|L11.48|
        CMP      r9,#0
        BEQ      |L11.56|
        B        |L11.66|
|L11.56|
        MOVS     r2,#0xd7
        ADR      r1,|L11.756|
        ADR      r0,|L11.836|
        BL       __aeabi_assert
|L11.66|
        LDR      r0,[sp,#0x34]
        CBZ      r0,|L11.72|
        B        |L11.82|
|L11.72|
        MOVS     r2,#0xd8
        ADR      r1,|L11.756|
        ADR      r0,|L11.856|
        BL       __aeabi_assert
|L11.82|
        CMP      r7,#2
        BNE      |L11.88|
        NOP      
|L11.88|
        MOVS     r6,#0
        MOV      r11,#1
        LDR      r0,[r5,#0]
        AND      r0,r0,#7
        LSL      r0,r11,r0
        LDR      r1,[sp,#0x34]
        UDIV     r0,r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[r5,#0x80]
        BIC      r0,r0,#1
        STR      r0,[r5,#0x80]
        CBZ      r7,|L11.136|
        CMP      r7,#1
        BEQ      |L11.156|
        CMP      r7,#2
        BNE      |L11.176|
        B        |L11.138|
|L11.136|
        NOP      
|L11.138|
        LDR      r0,[r5,#0]
        BIC      r0,r0,#0x20
        STR      r0,[r5,#0]
        LDR      r0,[sp,#4]
        UDIV     r0,r0,r10
        SUBS     r6,r0,#1
        B        |L11.186|
|L11.156|
        LDR      r0,[r5,#0]
        ORR      r0,r0,#0x20
        STR      r0,[r5,#0]
        LSL      r1,r10,#1
        LDR      r0,[sp,#4]
        UDIV     r6,r0,r1
        B        |L11.186|
|L11.176|
        MOVS     r2,#0xfe
        ADR      r1,|L11.756|
        ADR      r0,|L11.876|
        BL       __aeabi_assert
|L11.186|
        NOP      
        CMP      r6,#0x10000
        BCC      |L11.200|
        MOVS     r0,#1
|L11.196|
        POP      {r2-r12,pc}
|L11.200|
        STR      r6,[r5,#8]
        MOVS     r0,#0
        STR      r0,[sp,#0]
        B        |L11.744|
|L11.208|
        LDRB     r0,[r4,#2]
        CMP      r0,#0x64
        BLS      |L11.218|
        MOVS     r0,#1
        B        |L11.196|
|L11.218|
        CMP      r7,#2
        BNE      |L11.476|
        LDRB     r0,[r4,#0]
        SXTB     r0,r0
        CMP      r0,#1
        BLT      |L11.234|
        MOVS     r0,#1
        B        |L11.196|
|L11.234|
        LDRB     r0,[r4,#3]
        CMP      r0,#0x64
        BLS      |L11.244|
        MOVS     r0,#1
        B        |L11.196|
|L11.244|
        LDRB     r0,[r4,#3]
        CBNZ     r0,|L11.252|
        MOVS     r1,#0
        B        |L11.264|
|L11.252|
        LDRB     r0,[r4,#3]
        MULS     r0,r6,r0
        MOVS     r2,#0x64
        UDIV     r0,r0,r2
        UXTH     r1,r0
|L11.264|
        LDRB     r0,[r4,#2]
        CBNZ     r0,|L11.276|
        MOV      r8,#0
        MOVS     r1,#0
        B        |L11.300|
|L11.276|
        LDRB     r0,[r4,#2]
        MULS     r0,r6,r0
        MOVS     r2,#0x64
        UDIV     r0,r0,r2
        UXTH     r8,r0
        CMP      r8,r6
        BCC      |L11.300|
        ADDS     r0,r6,#1
        UXTH     r8,r0
|L11.300|
        LDR      r0,[r5,#0x64]
        LDRB     r2,[r4,#0]
        LSLS     r2,r2,#3
        LSL      r2,r11,r2
        ORRS     r0,r0,r2
        STR      r0,[r5,#0x64]
        LDRB     r0,[r4,#0]
        LSLS     r2,r0,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        BIC      r2,r0,#0x3c
        LDRB     r0,[r4,#0]
        LSLS     r3,r0,#1
        ADD      r0,r5,#0xc
        STR      r2,[r0,r3,LSL #3]
        NOP      
|L11.344|
        LDRB     r0,[r4,#0]
        LSLS     r2,r0,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L11.344|
        LDRB     r0,[r4,#0]
        LSLS     r2,r0,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        LDRB     r2,[r4,#1]
        MOVS     r3,#0x20
        ORR      r2,r3,r2,LSL #2
        ORRS     r0,r0,r2
        LDRB     r2,[r4,#0]
        LSLS     r3,r2,#1
        ADD      r2,r5,#0xc
        STR      r0,[r2,r3,LSL #3]
        NOP      
|L11.400|
        LDRB     r0,[r4,#0]
        LSLS     r2,r0,#1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L11.400|
        LDRB     r0,[r4,#0]
        LSLS     r2,r0,#1
        ADD      r0,r5,#0xc
        ADD      r0,r0,r2,LSL #3
        STR      r1,[r0,#4]
        LDRB     r0,[r4,#0]
        MOVS     r2,#1
        ADD      r2,r2,r0,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        BIC      r2,r0,#0x3c
        LDRB     r0,[r4,#0]
        MOVS     r3,#1
        ADD      r3,r3,r0,LSL #1
        ADD      r0,r5,#0xc
        STR      r2,[r0,r3,LSL #3]
        NOP      
|L11.472|
        LDRB     r0,[r4,#0]
        B        |L11.478|
|L11.476|
        B        |L11.592|
|L11.478|
        MOVS     r2,#1
        ADD      r2,r2,r0,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L11.472|
        LDRB     r0,[r4,#0]
        MOVS     r2,#1
        ADD      r2,r2,r0,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        LDRB     r2,[r4,#1]
        MOVS     r3,#0x20
        ORR      r2,r3,r2,LSL #2
        ORRS     r0,r0,r2
        LDRB     r2,[r4,#0]
        MOVS     r3,#1
        ADD      r3,r3,r2,LSL #1
        ADD      r2,r5,#0xc
        STR      r0,[r2,r3,LSL #3]
        NOP      
|L11.544|
        LDRB     r0,[r4,#0]
        MOVS     r2,#1
        ADD      r2,r2,r0,LSL #1
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r2,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L11.544|
        ADD      r2,r1,r8
        LDRB     r0,[r4,#0]
        MOVS     r3,#1
        ADD      r3,r3,r0,LSL #1
        ADD      r0,r5,#0xc
        ADD      r0,r0,r3,LSL #3
        STR      r2,[r0,#4]
        B        |L11.734|
|L11.592|
        LDRB     r0,[r4,#2]
        CBNZ     r0,|L11.602|
        MOV      r8,#0
        B        |L11.626|
|L11.602|
        LDRB     r0,[r4,#2]
        MULS     r0,r6,r0
        MOVS     r1,#0x64
        UDIV     r0,r0,r1
        UXTH     r8,r0
        CMP      r8,r6
        BCC      |L11.626|
        ADDS     r0,r6,#1
        UXTH     r8,r0
|L11.626|
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        BIC      r1,r0,#0x3c
        LDRB     r2,[r4,#0]
        ADD      r0,r5,#0xc
        STR      r1,[r0,r2,LSL #3]
        NOP      
|L11.652|
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L11.652|
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        LDRB     r1,[r4,#1]
        MOVS     r2,#0x20
        ORR      r1,r2,r1,LSL #2
        ORRS     r0,r0,r1
        LDRB     r2,[r4,#0]
        ADD      r1,r5,#0xc
        STR      r0,[r1,r2,LSL #3]
        NOP      
|L11.702|
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BEQ      |L11.702|
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        ADD      r0,r0,r1,LSL #3
        STR      r8,[r0,#4]
|L11.734|
        ADDS     r4,r4,#4
        LDR      r0,[sp,#0]
        ADDS     r0,r0,#1
        UXTB     r0,r0
        STR      r0,[sp,#0]
|L11.744|
        LDR      r0,[sp,#0]
        CMP      r0,r9
        BLT      |L11.208|
        MOVS     r0,#0
        B        |L11.196|
        ENDP

|L11.756|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L11.796|
        DCB      "NULL != chnlParams",0
        DCB      0
|L11.816|
        DCB      "0U != pwmFreq_Hz",0
        DCB      0
        DCB      0
        DCB      0
|L11.836|
        DCB      "0U != numOfChnls",0
        DCB      0
        DCB      0
        DCB      0
|L11.856|
        DCB      "0U != srcClock_Hz",0
        DCB      0
        DCB      0
|L11.876|
        DCB      "false",0
        DCB      0
        DCB      0

        AREA ||i.TPM_SetupQuadDecode||, CODE, READONLY, ALIGN=2

TPM_SetupQuadDecode PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r8,r3
        CBZ      r6,|L12.16|
        B        |L12.28|
|L12.16|
        MOV      r2,#0x2f9
        ADR      r1,|L12.200|
        ADR      r0,|L12.240|
        BL       __aeabi_assert
|L12.28|
        CBZ      r7,|L12.32|
        B        |L12.44|
|L12.32|
        MOV      r2,#0x2fa
        ADR      r1,|L12.200|
        ADR      r0,|L12.264|
        BL       __aeabi_assert
|L12.44|
        LDR      r0,[r4,#0xc]
        BIC      r0,r0,#0x3c
        STR      r0,[r4,#0xc]
        NOP      
|L12.54|
        LDR      r0,[r4,#0xc]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L12.54|
        LDR      r5,[r4,#0x78]
        BIC      r5,r5,#0xf
        LDRB     r0,[r6,#0]
        AND      r0,r0,#0xf
        ORRS     r5,r5,r0
        STR      r5,[r4,#0x78]
        LDRB     r0,[r6,#4]
        CMP      r0,#1
        BNE      |L12.96|
        LDR      r0,[r4,#0x70]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x70]
        B        |L12.104|
|L12.96|
        LDR      r0,[r4,#0x70]
        BIC      r0,r0,#1
        STR      r0,[r4,#0x70]
|L12.104|
        LDR      r0,[r4,#0x14]
        BIC      r1,r0,#0x3c
        STR      r1,[r4,#0x14]
        NOP      
|L12.114|
        LDR      r0,[r4,#0x14]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L12.114|
        LDR      r5,[r4,#0x78]
        BIC      r5,r5,#0xf0
        MOVS     r1,#0xf0
        LDR      r0,[r7,#0]
        AND      r0,r1,r0,LSL #4
        ORRS     r5,r5,r0
        STR      r5,[r4,#0x78]
        LDRB     r0,[r7,#4]
        CMP      r0,#1
        BNE      |L12.158|
        LDR      r0,[r4,#0x70]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x70]
        B        |L12.166|
|L12.158|
        LDR      r0,[r4,#0x70]
        BIC      r0,r0,#2
        STR      r0,[r4,#0x70]
|L12.166|
        LDR      r5,[r4,#0x80]!
        BIC      r5,r5,#8
        MOVS     r0,#8
        AND      r0,r0,r8,LSL #3
        ORRS     r5,r5,r0
        STR      r5,[r4,#0]
        LDR      r0,[r4,#0]
        ORR      r0,r0,#1
        STR      r0,[r4],#-0x80
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L12.200|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L12.240|
        DCB      "NULL != phaseAParams",0
        DCB      0
        DCB      0
        DCB      0
|L12.264|
        DCB      "NULL != phaseBParams",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.TPM_UpdateChnlEdgeLevelSelect||, CODE, READONLY, ALIGN=2

TPM_UpdateChnlEdgeLevelSelect PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r7,r2
        CMP      r4,#2
        BGE      |L13.16|
        B        |L13.28|
|L13.16|
        MOV      r2,#0x1f5
        ADR      r1,|L13.124|
        ADR      r0,|L13.164|
        BL       __aeabi_assert
|L13.28|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        BIC      r6,r0,#0x80
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        BIC      r1,r0,#0x3c
        ADD      r0,r5,#0xc
        STR      r1,[r0,r4,LSL #3]
        NOP      
|L13.62|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,#0
        BNE      |L13.62|
        BIC      r6,r6,#0xc
        MOVS     r0,#0xc
        AND      r0,r0,r7,LSL #2
        ORRS     r6,r6,r0
        ADD      r0,r5,#0xc
        STR      r6,[r0,r4,LSL #3]
        AND      r6,r6,#0x3c
        NOP      
|L13.104|
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r4,LSL #3]
        AND      r0,r0,#0x3c
        CMP      r0,r6
        BNE      |L13.104|
        POP      {r4-r8,pc}
        ENDP

|L13.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L13.164|
        DCB      "chnlNumber < FSL_FEATURE_TPM_CHANNEL_COUNTn(base)",0
        DCB      0
        DCB      0

        AREA ||i.TPM_UpdatePwmDutycycle||, CODE, READONLY, ALIGN=2

TPM_UpdatePwmDutycycle PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r8,r2
        MOV      r9,r3
        CMP      r4,#2
        BGE      |L14.18|
        B        |L14.30|
|L14.18|
        MOV      r2,#0x1b3
        ADR      r1,|L14.156|
        ADR      r0,|L14.196|
        BL       __aeabi_assert
|L14.30|
        CMP      r8,#2
        BNE      |L14.38|
        NOP      
|L14.38|
        LDR      r0,[r7,#8]
        UXTH     r5,r0
        CMP      r8,#2
        BNE      |L14.120|
        SXTB     r1,r4
        CMP      r1,#1
        BLT      |L14.58|
|L14.54|
        POP      {r4-r10,pc}
|L14.58|
        MUL      r1,r5,r9
        MOVS     r2,#0x64
        UDIV     r1,r1,r2
        UXTH     r6,r1
        MOVS     r1,#3
        AND      r2,r1,r4,LSL #1
        ADD      r1,r7,#0xc
        ADD      r1,r1,r2,LSL #3
        LDR      r1,[r1,#4]
        UXTH     r0,r1
        CMP      r6,r5
        BLT      |L14.96|
        ADDS     r1,r5,#1
        UXTH     r6,r1
|L14.96|
        ADDS     r2,r0,r6
        MOVS     r1,#1
        ADD      r1,r1,r4,LSL #1
        AND      r3,r1,#3
        ADD      r1,r7,#0xc
        ADD      r1,r1,r3,LSL #3
        STR      r2,[r1,#4]
        B        |L14.150|
|L14.120|
        MUL      r0,r5,r9
        MOVS     r1,#0x64
        UDIV     r0,r0,r1
        UXTH     r6,r0
        CMP      r6,r5
        BLT      |L14.140|
        ADDS     r0,r5,#1
        UXTH     r6,r0
|L14.140|
        ADD      r0,r7,#0xc
        ADD      r0,r0,r4,LSL #3
        STR      r6,[r0,#4]
|L14.150|
        NOP      
        B        |L14.54|
        ENDP

        DCW      0x0000
|L14.156|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c",0
|L14.196|
        DCB      "chnlNumber < FSL_FEATURE_TPM_CHANNEL_COUNTn(base)",0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_tpmBases
        DCD      0x00000000
        DCD      0x400c9000
        DCD      0x400ca000
s_tpmClocks
        DCD      0x00000000
        DCD      0x102c0009
        DCD      0x102c000a

        AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

        DCB      "(int8_t)chnlPairNumber < (int8_t)FSL_FEATURE_TPM_CHANNE"
        DCB      "L_COUNTn(base) / 2",0

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_tpm.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_tpm_c_TPM_Init____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_fsl_tpm_c_TPM_Init____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_tpm_c_TPM_Init____REVSH|
#line 483
|__asm___9_fsl_tpm_c_TPM_Init____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_tpm_c_TPM_Init____RRX|
#line 670
|__asm___9_fsl_tpm_c_TPM_Init____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT TPM_Deinit [CODE]
        EXPORT TPM_DisableInterrupts [CODE]
        EXPORT TPM_EnableInterrupts [CODE]
        EXPORT TPM_GetDefaultConfig [CODE]
        EXPORT TPM_GetEnabledInterrupts [CODE]
        EXPORT TPM_Init [CODE]
        EXPORT TPM_SetupDualEdgeCapture [CODE]
        EXPORT TPM_SetupInputCapture [CODE]
        EXPORT TPM_SetupOutputCompare [CODE]
        EXPORT TPM_SetupPwm [CODE]
        EXPORT TPM_SetupQuadDecode [CODE]
        EXPORT TPM_UpdateChnlEdgeLevelSelect [CODE]
        EXPORT TPM_UpdatePwmDutycycle [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP TPM_GetInstance
        KEEP s_tpmBases
        KEEP s_tpmClocks

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
