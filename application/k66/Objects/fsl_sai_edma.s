; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_sai_edma.o --depend=.\objects\fsl_sai_edma.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_sai_edma.crf ..\..\devices\MK66F18\drivers\fsl_sai_edma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SAI_GetInstance||, CODE, READONLY, ALIGN=2

SAI_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L1.22|
|L1.8|
        LDR      r0,|L1.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L1.20|
        B        |L1.26|
|L1.20|
        ADDS     r4,r4,#1
|L1.22|
        CMP      r4,#0
        BEQ      |L1.8|
|L1.26|
        NOP      
        CBNZ     r4,|L1.32|
        B        |L1.42|
|L1.32|
        MOVS     r2,#0x56
        ADR      r1,|L1.52|
        ADR      r0,|L1.100|
        BL       __aeabi_assert
|L1.42|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L1.48|
        DCD      s_saiBases
|L1.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L1.100|
        DCB      "instance < ARRAY_SIZE(s_saiBases)",0
        DCB      0
        DCB      0

        AREA ||i.SAI_RxEDMACallback||, CODE, READONLY, ALIGN=1

SAI_RxEDMACallback PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r8,r2
        MOV      r9,r3
        MOV      r6,r5
        LDR      r4,[r6,#4]
        LDRB     r1,[r4,#0xe5]
        ADD      r0,r4,#0xb4
        ADD      r0,r0,r1,LSL #3
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0xe5]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0xe5]
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L2.76|
        LDR      r3,[r4,#0x10]
        LDR      r0,[r6,#0]
        MOV      r2,#0x772
        MOV      r1,r4
        LDR      r12,[r4,#0xc]
        BLX      r12
|L2.76|
        LDRB     r1,[r4,#0xe5]
        ADD      r0,r4,#0xb4
        LDR      r0,[r0,r1,LSL #3]
        CBNZ     r0,|L2.106|
        MOVS     r2,#0
        MOVS     r1,#1
        LDR      r0,[r6,#0]
        BL       SAI_RxEnableDMA
        MOV      r0,r7
        BL       EDMA_AbortTransfer
|L2.106|
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.SAI_RxEnableDMA||, CODE, READONLY, ALIGN=1

SAI_RxEnableDMA PROC
        CBZ      r2,|L3.18|
        LDR      r3,[r0,#0x80]
        BIC      r3,r3,#0x1c0000
        ORRS     r3,r3,r1
        STR      r3,[r0,#0x80]
        B        |L3.32|
|L3.18|
        LDR      r3,[r0,#0x80]
        BIC      r3,r3,#0x1c0000
        BICS     r3,r3,r1
        STR      r3,[r0,#0x80]
|L3.32|
        BX       lr
        ENDP


        AREA ||i.SAI_TransferAbortReceiveEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferAbortReceiveEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L4.10|
        B        |L4.22|
|L4.10|
        MOV      r2,#0x232
        ADR      r1,|L4.124|
        ADR      r0,|L4.172|
        BL       __aeabi_assert
|L4.22|
        LDR      r0,[r4,#0]
        BL       EDMA_AbortTransfer
        LDR      r0,[r5,#0x8c]
        BIC      r0,r0,#0x30000
        STR      r0,[r5,#0x8c]
        MOVS     r2,#0
        MOVS     r1,#1
        MOV      r0,r5
        BL       SAI_RxEnableDMA
        MOVS     r1,#0
        MOV      r0,r5
        BL       SAI_RxEnable
        LDR      r0,[r5,#0x80]!
        ORR      r0,r0,#0x3000000
        STR      r0,[r5,#0]
        LDR      r0,[r5,#0]
        BIC      r0,r0,#0x1000000
        STR      r0,[r5],#-0x80
        LDRB     r1,[r4,#0xe5]
        ADD      r0,r4,#0xb4
        ADD      r0,r0,r1,LSL #3
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0xe5]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0xe5]
        MOVS     r0,#1
        STR      r0,[r4,#8]
        POP      {r4-r6,pc}
        ENDP

|L4.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L4.172|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferAbortSendEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferAbortSendEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L5.10|
        B        |L5.22|
|L5.10|
        MOV      r2,#0x20d
        ADR      r1,|L5.116|
        ADR      r0,|L5.164|
        BL       __aeabi_assert
|L5.22|
        LDR      r0,[r4,#0]
        BL       EDMA_AbortTransfer
        LDR      r0,[r5,#0xc]
        BIC      r0,r0,#0x30000
        STR      r0,[r5,#0xc]
        MOVS     r2,#0
        MOVS     r1,#1
        MOV      r0,r5
        BL       SAI_TxEnableDMA
        MOVS     r1,#0
        MOV      r0,r5
        BL       SAI_TxEnable
        LDR      r0,[r5,#0]
        ORR      r0,r0,#0x3000000
        STR      r0,[r5,#0]
        LDR      r0,[r5,#0]
        BIC      r0,r0,#0x1000000
        STR      r0,[r5,#0]
        LDRB     r1,[r4,#0xe5]
        ADD      r0,r4,#0xb4
        ADD      r0,r0,r1,LSL #3
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0xe5]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0xe5]
        MOVS     r0,#1
        STR      r0,[r4,#8]
        POP      {r4-r6,pc}
        ENDP

|L5.116|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L5.164|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferGetReceiveCountEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferGetReceiveCountEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L6.14|
        B        |L6.26|
|L6.14|
        MOV      r2,#0x2a4
        ADR      r1,|L6.72|
        ADR      r0,|L6.120|
        BL       __aeabi_assert
|L6.26|
        MOVS     r6,#0
        LDR      r0,[r4,#8]
        CBZ      r0,|L6.36|
        MOVS     r6,#6
        B        |L6.66|
|L6.36|
        LDR      r2,[r4,#0]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_GetRemainingMajorLoopCount
        LDRB     r2,[r4,#0xe5]
        ADD      r1,r4,#0xd4
        LDR      r1,[r1,r2,LSL #2]
        LDRB     r2,[r4,#4]
        MLS      r0,r2,r0,r1
        STR      r0,[r5,#0]
|L6.66|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP

|L6.72|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L6.120|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferGetSendCountEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferGetSendCountEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L7.14|
        B        |L7.26|
|L7.14|
        MOV      r2,#0x287
        ADR      r1,|L7.72|
        ADR      r0,|L7.120|
        BL       __aeabi_assert
|L7.26|
        MOVS     r6,#0
        LDR      r0,[r4,#8]
        CBZ      r0,|L7.36|
        MOVS     r6,#6
        B        |L7.66|
|L7.36|
        LDR      r2,[r4,#0]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_GetRemainingMajorLoopCount
        LDRB     r2,[r4,#0xe5]
        ADD      r1,r4,#0xd4
        LDR      r1,[r1,r2,LSL #2]
        LDRB     r2,[r4,#4]
        MLS      r0,r2,r0,r1
        STR      r0,[r5,#0]
|L7.66|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP

|L7.72|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L7.120|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferReceiveEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferReceiveEDMA PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x2c
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L8.16|
        CBZ      r5,|L8.16|
        B        |L8.28|
|L8.16|
        MOV      r2,#0x1d1
        ADR      r1,|L8.248|
        ADR      r0,|L8.296|
        BL       __aeabi_assert
|L8.28|
        MOVS     r1,#0x18
        ADD      r0,sp,#0x14
        BL       __aeabi_memclr4
        LDRB     r0,[r4,#6]
        ADD      r1,r6,#0xa0
        ADD      r7,r1,r0,LSL #2
        NOP      
        LDR      r0,[r5,#0]
        CBZ      r0,|L8.56|
        LDR      r0,[r5,#4]
        CBNZ     r0,|L8.62|
|L8.56|
        MOVS     r0,#4
|L8.58|
        ADD      sp,sp,#0x2c
        POP      {r4-r7,pc}
|L8.62|
        LDRB     r1,[r4,#0xe4]
        ADD      r0,r4,#0xb4
        LDR      r0,[r0,r1,LSL #3]
        CBZ      r0,|L8.82|
        MOV      r0,#0x770
        B        |L8.58|
|L8.82|
        MOVS     r0,#0
        STR      r0,[r4,#8]
        LDRB     r2,[r4,#0xe4]
        LDR      r1,[r5,#4]
        ADD      r0,r4,#0xd4
        STR      r1,[r0,r2,LSL #2]
        LDRB     r2,[r4,#0xe4]
        LDR      r1,[r5,#0]
        SUBS     r0,r0,#0x20
        STR      r1,[r0,r2,LSL #3]
        LDRB     r2,[r4,#0xe4]
        LDR      r1,[r5,#4]
        ADD      r0,r0,r2,LSL #3
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0xe4]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0xe4]
        MOVS     r3,#1
        LDRB     r1,[r4,#7]
        LDRB     r2,[r4,#5]
        SMULBB   r1,r1,r2
        LDR      r0,[r5,#4]
        STRD     r0,r3,[sp,#8]
        STRD     r2,r1,[sp,#0]
        LDRB     r2,[r4,#5]
        MOV      r1,r7
        ADD      r0,sp,#0x14
        LDR      r3,[r5,#0]
        BL       EDMA_PrepareTransfer
        LDRB     r0,[r4,#7]
        LDRB     r1,[r4,#5]
        SMULBB   r0,r0,r1
        STRB     r0,[r4,#4]
        ADD      r1,sp,#0x14
        LDR      r0,[r4,#0]
        BL       EDMA_SubmitTransfer
        LDR      r0,[r4,#0]
        BL       EDMA_StartTransfer
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       SAI_RxEnableDMA
        LDR      r0,[r6,#0x8c]
        LDRB     r2,[r4,#6]
        MOVS     r1,#1
        LSLS     r1,r1,r2
        MOV      r2,#0x30000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r6,#0x8c]
        MOVS     r1,#1
        MOV      r0,r6
        BL       SAI_RxEnable
        MOVS     r0,#0
        B        |L8.58|
        ENDP

|L8.248|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L8.296|
        DCB      "handle && xfer",0
        DCB      0

        AREA ||i.SAI_TransferRxCreateHandleEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferRxCreateHandleEDMA PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r8,r2
        MOV      r9,r3
        LDR      r6,[sp,#0x20]
        CBZ      r4,|L9.20|
        CBZ      r6,|L9.20|
        B        |L9.30|
|L9.20|
        MOVS     r2,#0xc0
        ADR      r1,|L9.116|
        ADR      r0,|L9.164|
        BL       __aeabi_assert
|L9.30|
        MOV      r0,r7
        BL       SAI_GetInstance
        MOV      r5,r0
        MOVS     r1,#0xe8
        MOV      r0,r4
        BL       __aeabi_memclr4
        STR      r6,[r4,#0]
        STR      r8,[r4,#0xc]
        STR      r9,[r4,#0x10]
        MOVS     r0,#1
        STR      r0,[r4,#8]
        LDR      r0,|L9.184|
        ADD      r0,r0,r5,LSL #4
        STR      r7,[r0,#8]
        LDR      r0,|L9.184|
        ADD      r0,r0,r5,LSL #4
        STR      r4,[r0,#0xc]
        ADD      r0,r4,#0x34
        BIC      r1,r0,#0x1f
        MOVS     r2,#4
        MOV      r0,r6
        BL       EDMA_InstallTCDMemory
        LDR      r0,|L9.184|
        ADD      r0,r0,r5,LSL #4
        ADD      r2,r0,#8
        LDR      r1,|L9.188|
        MOV      r0,r6
        BL       EDMA_SetCallback
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L9.116|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L9.164|
        DCB      "handle && dmaHandle",0
|L9.184|
        DCD      s_edmaPrivateHandle
|L9.188|
        DCD      SAI_RxEDMACallback

        AREA ||i.SAI_TransferRxSetConfigEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferRxSetConfigEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        CBZ      r5,|L10.14|
        CBZ      r4,|L10.14|
        B        |L10.26|
|L10.14|
        MOV      r2,#0x167
        ADR      r1,|L10.76|
        ADR      r0,|L10.124|
        BL       __aeabi_assert
|L10.26|
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_RxSetConfig
        LDRB     r0,[r4,#3]
        CMP      r0,#0x18
        BNE      |L10.46|
        MOVS     r0,#4
        STRB     r0,[r5,#5]
        B        |L10.52|
|L10.46|
        LDRB     r0,[r4,#3]
        LSRS     r0,r0,#3
        STRB     r0,[r5,#5]
|L10.52|
        LDRB     r0,[r4,#0x18]
        STRB     r0,[r5,#6]
        LDR      r0,[r6,#0x8c]
        BIC      r0,r0,#0x30000
        STR      r0,[r6,#0x8c]
        LDRB     r0,[r4,#0x15]
        STRB     r0,[r5,#7]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L10.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L10.124|
        DCB      "handle && saiConfig",0

        AREA ||i.SAI_TransferRxSetFormatEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferRxSetFormatEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r7,r3
        LDR      r8,[sp,#0x18]
        CBZ      r5,|L11.22|
        CBZ      r4,|L11.22|
        B        |L11.34|
|L11.22|
        MOV      r2,#0x142
        ADR      r1,|L11.92|
        ADR      r0,|L11.140|
        BL       __aeabi_assert
|L11.34|
        MOV      r3,r8
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_RxSetFormat
        LDR      r0,[r4,#4]
        CMP      r0,#0x18
        BNE      |L11.58|
        MOVS     r0,#4
        STRB     r0,[r5,#5]
        B        |L11.66|
|L11.58|
        LDRH     r0,[r4,#4]
        UBFX     r0,r0,#3,#8
        STRB     r0,[r5,#5]
|L11.66|
        LDRB     r0,[r4,#0x11]
        STRB     r0,[r5,#6]
        LDR      r0,[r6,#0x8c]
        BIC      r0,r0,#0x30000
        STR      r0,[r6,#0x8c]
        LDRB     r0,[r4,#0x10]
        STRB     r0,[r5,#7]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L11.92|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L11.140|
        DCB      "handle && format",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SAI_TransferSendEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferSendEDMA PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x2c
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L12.16|
        CBZ      r5,|L12.16|
        B        |L12.28|
|L12.16|
        MOV      r2,#0x191
        ADR      r1,|L12.244|
        ADR      r0,|L12.292|
        BL       __aeabi_assert
|L12.28|
        MOVS     r1,#0x18
        ADD      r0,sp,#0x14
        BL       __aeabi_memclr4
        LDRB     r0,[r4,#6]
        ADD      r1,r6,#0x20
        ADD      r7,r1,r0,LSL #2
        NOP      
        LDR      r0,[r5,#0]
        CBZ      r0,|L12.56|
        LDR      r0,[r5,#4]
        CBNZ     r0,|L12.62|
|L12.56|
        MOVS     r0,#4
|L12.58|
        ADD      sp,sp,#0x2c
        POP      {r4-r7,pc}
|L12.62|
        LDRB     r1,[r4,#0xe4]
        ADD      r0,r4,#0xb4
        LDR      r0,[r0,r1,LSL #3]
        CBZ      r0,|L12.82|
        MOV      r0,#0x770
        B        |L12.58|
|L12.82|
        MOVS     r0,#0
        STR      r0,[r4,#8]
        LDRB     r2,[r4,#0xe4]
        LDR      r1,[r5,#4]
        ADD      r0,r4,#0xd4
        STR      r1,[r0,r2,LSL #2]
        LDRB     r2,[r4,#0xe4]
        LDR      r1,[r5,#0]
        SUBS     r0,r0,#0x20
        STR      r1,[r0,r2,LSL #3]
        LDRB     r2,[r4,#0xe4]
        LDR      r1,[r5,#4]
        ADD      r0,r0,r2,LSL #3
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0xe4]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0xe4]
        MOVS     r3,#2
        LDRB     r1,[r4,#7]
        LDRB     r2,[r4,#5]
        SMULBB   r1,r1,r2
        LDR      r0,[r5,#4]
        STRD     r0,r3,[sp,#8]
        STRD     r2,r1,[sp,#0]
        LDRB     r2,[r4,#5]
        MOV      r3,r7
        ADD      r0,sp,#0x14
        LDR      r1,[r5,#0]
        BL       EDMA_PrepareTransfer
        LDRB     r0,[r4,#7]
        LDRB     r1,[r4,#5]
        SMULBB   r0,r0,r1
        STRB     r0,[r4,#4]
        ADD      r1,sp,#0x14
        LDR      r0,[r4,#0]
        BL       EDMA_SubmitTransfer
        LDR      r0,[r4,#0]
        BL       EDMA_StartTransfer
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       SAI_TxEnableDMA
        MOVS     r1,#1
        MOV      r0,r6
        BL       SAI_TxEnable
        LDR      r0,[r6,#0xc]
        LDRB     r2,[r4,#6]
        MOVS     r1,#1
        LSLS     r1,r1,r2
        MOV      r2,#0x30000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r6,#0xc]
        MOVS     r0,#0
        B        |L12.58|
        ENDP

|L12.244|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L12.292|
        DCB      "handle && xfer",0
        DCB      0

        AREA ||i.SAI_TransferTerminateReceiveEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferTerminateReceiveEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L13.10|
        B        |L13.22|
|L13.10|
        MOV      r2,#0x26f
        ADR      r1,|L13.76|
        ADR      r0,|L13.124|
        BL       __aeabi_assert
|L13.22|
        MOV      r1,r4
        MOV      r0,r5
        BL       SAI_TransferAbortReceiveEDMA
        MOVS     r1,#0xa0
        ADD      r0,r4,#0x14
        BL       __aeabi_memclr4
        MOVS     r1,#0x20
        ADD      r0,r4,#0xb4
        BL       __aeabi_memclr4
        ADD      r0,r4,#0x80
        MOVS     r1,#0
        STR      r1,[r0,#0x54]
        STR      r1,[r0,#0x58]
        STR      r1,[r0,#0x5c]
        STR      r1,[r0,#0x60]
        MOVS     r0,#0
        STRB     r0,[r4,#0xe4]
        STRB     r0,[r4,#0xe5]
        POP      {r4-r6,pc}
        ENDP

|L13.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L13.124|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferTerminateSendEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferTerminateSendEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L14.10|
        B        |L14.22|
|L14.10|
        MOV      r2,#0x257
        ADR      r1,|L14.76|
        ADR      r0,|L14.124|
        BL       __aeabi_assert
|L14.22|
        MOV      r1,r4
        MOV      r0,r5
        BL       SAI_TransferAbortSendEDMA
        MOVS     r1,#0xa0
        ADD      r0,r4,#0x14
        BL       __aeabi_memclr4
        MOVS     r1,#0x20
        ADD      r0,r4,#0xb4
        BL       __aeabi_memclr4
        ADD      r0,r4,#0x80
        MOVS     r1,#0
        STR      r1,[r0,#0x54]
        STR      r1,[r0,#0x58]
        STR      r1,[r0,#0x5c]
        STR      r1,[r0,#0x60]
        MOVS     r0,#0
        STRB     r0,[r4,#0xe4]
        STRB     r0,[r4,#0xe5]
        POP      {r4-r6,pc}
        ENDP

|L14.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L14.124|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferTxCreateHandleEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferTxCreateHandleEDMA PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r8,r2
        MOV      r9,r3
        LDR      r6,[sp,#0x20]
        CBZ      r4,|L15.20|
        CBZ      r6,|L15.20|
        B        |L15.30|
|L15.20|
        MOVS     r2,#0x97
        ADR      r1,|L15.112|
        ADR      r0,|L15.160|
        BL       __aeabi_assert
|L15.30|
        MOV      r0,r7
        BL       SAI_GetInstance
        MOV      r5,r0
        MOVS     r1,#0xe8
        MOV      r0,r4
        BL       __aeabi_memclr4
        STR      r6,[r4,#0]
        STR      r8,[r4,#0xc]
        STR      r9,[r4,#0x10]
        MOVS     r0,#1
        STR      r0,[r4,#8]
        LDR      r0,|L15.180|
        ADD      r0,r0,r5,LSL #4
        STR      r7,[r0,#0]
        LDR      r0,|L15.180|
        ADD      r0,r0,r5,LSL #4
        STR      r4,[r0,#4]
        ADD      r0,r4,#0x34
        BIC      r1,r0,#0x1f
        MOVS     r2,#4
        MOV      r0,r6
        BL       EDMA_InstallTCDMemory
        LDR      r0,|L15.180|
        ADD      r2,r0,r5,LSL #4
        LDR      r1,|L15.184|
        MOV      r0,r6
        BL       EDMA_SetCallback
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L15.112|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L15.160|
        DCB      "handle && dmaHandle",0
|L15.180|
        DCD      s_edmaPrivateHandle
|L15.184|
        DCD      SAI_TxEDMACallback

        AREA ||i.SAI_TransferTxSetConfigEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferTxSetConfigEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        CBZ      r5,|L16.14|
        CBZ      r4,|L16.14|
        B        |L16.26|
|L16.14|
        MOV      r2,#0x113
        ADR      r1,|L16.76|
        ADR      r0,|L16.124|
        BL       __aeabi_assert
|L16.26|
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_TxSetConfig
        LDRB     r0,[r4,#3]
        CMP      r0,#0x18
        BNE      |L16.46|
        MOVS     r0,#4
        STRB     r0,[r5,#5]
        B        |L16.52|
|L16.46|
        LDRB     r0,[r4,#3]
        LSRS     r0,r0,#3
        STRB     r0,[r5,#5]
|L16.52|
        LDRB     r0,[r4,#0x18]
        STRB     r0,[r5,#6]
        LDR      r0,[r6,#0xc]
        BIC      r0,r0,#0x30000
        STR      r0,[r6,#0xc]
        LDRB     r0,[r4,#0x15]
        RSB      r0,r0,#8
        STRB     r0,[r5,#7]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L16.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L16.124|
        DCB      "handle && saiConfig",0

        AREA ||i.SAI_TransferTxSetFormatEDMA||, CODE, READONLY, ALIGN=2

SAI_TransferTxSetFormatEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r7,r3
        LDR      r8,[sp,#0x18]
        CBZ      r5,|L17.22|
        CBZ      r4,|L17.22|
        B        |L17.32|
|L17.22|
        MOVS     r2,#0xee
        ADR      r1,|L17.88|
        ADR      r0,|L17.136|
        BL       __aeabi_assert
|L17.32|
        MOV      r3,r8
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_TxSetFormat
        LDR      r0,[r4,#4]
        CMP      r0,#0x18
        BNE      |L17.56|
        MOVS     r0,#4
        STRB     r0,[r5,#5]
        B        |L17.64|
|L17.56|
        LDRH     r0,[r4,#4]
        UBFX     r0,r0,#3,#8
        STRB     r0,[r5,#5]
|L17.64|
        LDRB     r0,[r4,#0x11]
        STRB     r0,[r5,#6]
        LDR      r0,[r6,#0xc]
        BIC      r0,r0,#0x30000
        STR      r0,[r6,#0xc]
        LDRB     r0,[r4,#0x10]
        RSB      r0,r0,#8
        STRB     r0,[r5,#7]
        POP      {r4-r8,pc}
        ENDP

|L17.88|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L17.136|
        DCB      "handle && format",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SAI_TxEDMACallback||, CODE, READONLY, ALIGN=1

SAI_TxEDMACallback PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r8,r2
        MOV      r9,r3
        MOV      r6,r5
        LDR      r4,[r6,#4]
        LDRB     r1,[r4,#0xe5]
        ADD      r0,r4,#0xb4
        ADD      r0,r0,r1,LSL #3
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0xe5]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0xe5]
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L18.76|
        LDR      r3,[r4,#0x10]
        LDR      r0,[r6,#0]
        MOV      r2,#0x771
        MOV      r1,r4
        LDR      r12,[r4,#0xc]
        BLX      r12
|L18.76|
        LDRB     r1,[r4,#0xe5]
        ADD      r0,r4,#0xb4
        LDR      r0,[r0,r1,LSL #3]
        CBNZ     r0,|L18.106|
        MOVS     r2,#0
        MOVS     r1,#1
        LDR      r0,[r6,#0]
        BL       SAI_TxEnableDMA
        MOV      r0,r7
        BL       EDMA_AbortTransfer
|L18.106|
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.SAI_TxEnableDMA||, CODE, READONLY, ALIGN=1

SAI_TxEnableDMA PROC
        CBZ      r2,|L19.14|
        LDR      r3,[r0,#0]
        BIC      r3,r3,#0x1c0000
        ORRS     r3,r3,r1
        STR      r3,[r0,#0]
        B        |L19.24|
|L19.14|
        LDR      r3,[r0,#0]
        BIC      r3,r3,#0x1c0000
        BICS     r3,r3,r1
        STR      r3,[r0,#0]
|L19.24|
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

s_edmaPrivateHandle
        %        16

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_saiBases
        DCD      0x4002f000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_sai_edma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_fsl_sai_edma_c_6bbeb009____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_fsl_sai_edma_c_6bbeb009____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_fsl_sai_edma_c_6bbeb009____REVSH|
#line 483
|__asm___14_fsl_sai_edma_c_6bbeb009____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_fsl_sai_edma_c_6bbeb009____RRX|
#line 670
|__asm___14_fsl_sai_edma_c_6bbeb009____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SAI_TransferAbortReceiveEDMA [CODE]
        EXPORT SAI_TransferAbortSendEDMA [CODE]
        EXPORT SAI_TransferGetReceiveCountEDMA [CODE]
        EXPORT SAI_TransferGetSendCountEDMA [CODE]
        EXPORT SAI_TransferReceiveEDMA [CODE]
        EXPORT SAI_TransferRxCreateHandleEDMA [CODE]
        EXPORT SAI_TransferRxSetConfigEDMA [CODE]
        EXPORT SAI_TransferRxSetFormatEDMA [CODE]
        EXPORT SAI_TransferSendEDMA [CODE]
        EXPORT SAI_TransferTerminateReceiveEDMA [CODE]
        EXPORT SAI_TransferTerminateSendEDMA [CODE]
        EXPORT SAI_TransferTxCreateHandleEDMA [CODE]
        EXPORT SAI_TransferTxSetConfigEDMA [CODE]
        EXPORT SAI_TransferTxSetFormatEDMA [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT EDMA_AbortTransfer [CODE]
        IMPORT __aeabi_memclr4 [CODE]
        IMPORT EDMA_InstallTCDMemory [CODE]
        IMPORT EDMA_SetCallback [CODE]
        IMPORT SAI_TxSetFormat [CODE]
        IMPORT SAI_TxSetConfig [CODE]
        IMPORT SAI_RxSetFormat [CODE]
        IMPORT SAI_RxSetConfig [CODE]
        IMPORT EDMA_PrepareTransfer [CODE]
        IMPORT EDMA_SubmitTransfer [CODE]
        IMPORT EDMA_StartTransfer [CODE]
        IMPORT SAI_TxEnable [CODE]
        IMPORT SAI_RxEnable [CODE]
        IMPORT EDMA_GetRemainingMajorLoopCount [CODE]

        KEEP SAI_GetInstance
        KEEP SAI_RxEDMACallback
        KEEP SAI_RxEnableDMA
        KEEP SAI_TxEDMACallback
        KEEP SAI_TxEnableDMA
        KEEP s_edmaPrivateHandle
        KEEP s_saiBases

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
