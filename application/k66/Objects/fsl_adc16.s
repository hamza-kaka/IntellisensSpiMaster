; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_adc16.o --depend=.\objects\fsl_adc16.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_adc16.crf ..\..\devices\MK66F18\drivers\fsl_adc16.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.ADC16_ClearStatusFlags||, CODE, READONLY, ALIGN=1

ADC16_ClearStatusFlags PROC
        AND      r2,r1,#0x40
        CBZ      r2,|L1.14|
        LDR      r2,[r0,#0x24]
        ORR      r2,r2,#0x40
        STR      r2,[r0,#0x24]
|L1.14|
        BX       lr
        ENDP


        AREA ||i.ADC16_Deinit||, CODE, READONLY, ALIGN=2

ADC16_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,r5
        BL       ADC16_GetInstance
        LDR      r1,|L2.36|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L2.40|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L2.36|
        DCD      s_adc16Clocks
|L2.40|
        DCD      0x40047000

        AREA ||i.ADC16_DoAutoCalibration||, CODE, READONLY, ALIGN=1

ADC16_DoAutoCalibration PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r6,#0
        MOVS     r5,#0
        LDR      r0,[r4,#0x20]
        AND      r0,r0,#0x40
        CBZ      r0,|L3.26|
        MOVS     r6,#1
        LDR      r0,[r4,#0x20]
        BIC      r0,r0,#0x40
        STR      r0,[r4,#0x20]
|L3.26|
        LDR      r0,[r4,#0x24]
        ORR      r0,r0,#0xc0
        STR      r0,[r4,#0x24]
        B        |L3.52|
|L3.36|
        MOV      r0,r4
        BL       ADC16_GetStatusFlags
        AND      r0,r0,#0x40
        CBZ      r0,|L3.52|
        MOVS     r5,#1
        B        |L3.68|
|L3.52|
        MOVS     r1,#0
        MOV      r0,r4
        BL       ADC16_GetChannelStatusFlags
        AND      r0,r0,#0x80
        CMP      r0,#0
        BEQ      |L3.36|
|L3.68|
        NOP      
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0]
        CBZ      r6,|L3.84|
        LDR      r0,[r4,#0x20]
        ORR      r0,r0,#0x40
        STR      r0,[r4,#0x20]
|L3.84|
        MOV      r0,r4
        BL       ADC16_GetStatusFlags
        AND      r0,r0,#0x40
        CBZ      r0,|L3.98|
        MOVS     r5,#1
|L3.98|
        CBZ      r5,|L3.104|
        MOV      r0,r5
|L3.102|
        POP      {r3-r7,pc}
|L3.104|
        LDR      r0,[r4,#0x4c]
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x48]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x44]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x40]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x3c]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x38]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        MOV      r1,#0x8000
        LDR      r0,[sp,#0]
        ORR      r0,r1,r0,LSR #1
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        STR      r0,[r4,#0x2c]
        LDR      r0,[r4,#0x6c]
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x68]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x64]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x60]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x5c]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        LDR      r0,[r4,#0x58]
        LDR      r1,[sp,#0]
        ADD      r0,r0,r1
        STR      r0,[sp,#0]
        MOV      r1,#0x8000
        LDR      r0,[sp,#0]
        ORR      r0,r1,r0,LSR #1
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        STR      r0,[r4,#0x30]
        MOVS     r0,#0
        B        |L3.102|
        ENDP


        AREA ||i.ADC16_GetChannelStatusFlags||, CODE, READONLY, ALIGN=2

ADC16_GetChannelStatusFlags PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CMP      r4,#2
        BCS      |L4.12|
        B        |L4.24|
|L4.12|
        MOV      r2,#0x1e5
        ADR      r1,|L4.44|
        ADR      r0,|L4.88|
        BL       __aeabi_assert
|L4.24|
        MOVS     r5,#0
        LDR      r0,[r6,r4,LSL #2]
        AND      r0,r0,#0x80
        CBZ      r0,|L4.40|
        ORR      r5,r5,#0x80
|L4.40|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP

|L4.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c",0
        DCB      0
        DCB      0
|L4.88|
        DCB      "channelGroup < ADC_SC1_COUNT",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.ADC16_GetDefaultConfig||, CODE, READONLY, ALIGN=2

ADC16_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L5.8|
        B        |L5.18|
|L5.8|
        MOVS     r2,#0x99
        ADR      r1,|L5.60|
        ADR      r0,|L5.104|
        BL       __aeabi_assert
|L5.18|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STR      r0,[r4,#4]
        STRB     r0,[r4,#8]
        STRB     r0,[r4,#0]
        MOVS     r0,#3
        STRB     r0,[r4,#1]
        MOVS     r0,#1
        STRB     r0,[r4,#2]
        MOVS     r0,#3
        STRB     r0,[r4,#3]
        MOVS     r0,#1
        STRB     r0,[r4,#4]
        MOVS     r0,#4
        STRB     r0,[r4,#5]
        MOVS     r0,#0
        STRB     r0,[r4,#6]
        STRB     r0,[r4,#7]
        STRB     r0,[r4,#8]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L5.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c",0
        DCB      0
        DCB      0
|L5.104|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.ADC16_GetInstance||, CODE, READONLY, ALIGN=2

ADC16_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L6.22|
|L6.8|
        LDR      r0,|L6.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L6.20|
        B        |L6.26|
|L6.20|
        ADDS     r4,r4,#1
|L6.22|
        CMP      r4,#2
        BCC      |L6.8|
|L6.26|
        NOP      
        CMP      r4,#2
        BCS      |L6.34|
        B        |L6.44|
|L6.34|
        MOVS     r2,#0x35
        ADR      r1,|L6.52|
        ADR      r0,|L6.96|
        BL       __aeabi_assert
|L6.44|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

|L6.48|
        DCD      s_adc16Bases
|L6.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c",0
        DCB      0
        DCB      0
|L6.96|
        DCB      "instance < ARRAY_SIZE(s_adc16Bases)",0

        AREA ||i.ADC16_GetStatusFlags||, CODE, READONLY, ALIGN=1

ADC16_GetStatusFlags PROC
        MOV      r1,r0
        MOVS     r0,#0
        LDR      r2,[r1,#0x20]
        AND      r2,r2,#0x80
        CBZ      r2,|L7.16|
        ORR      r0,r0,#0x80
|L7.16|
        LDR      r2,[r1,#0x24]
        AND      r2,r2,#0x40
        CBZ      r2,|L7.28|
        ORR      r0,r0,#0x40
|L7.28|
        BX       lr
        ENDP


        AREA ||i.ADC16_Init||, CODE, READONLY, ALIGN=2

ADC16_Init PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L8.12|
        B        |L8.22|
|L8.12|
        MOVS     r2,#0x42
        ADR      r1,|L8.188|
        ADR      r0,|L8.232|
        BL       __aeabi_assert
|L8.22|
        MOV      r0,r6
        BL       ADC16_GetInstance
        LDR      r1,|L8.248|
        LDR      r7,[r1,r0,LSL #2]
        LDR      r1,|L8.252|
        ADD      r0,r1,r7,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r7
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        LDRB     r0,[r4,#1]
        AND      r0,r0,#3
        LDRB     r1,[r4,#4]
        MOVS     r2,#0xc
        AND      r1,r2,r1,LSL #2
        ORR      r5,r0,r1
        LDRB     r0,[r4,#5]
        CMP      r0,#4
        BEQ      |L8.80|
        ORR      r5,r5,#0x10
|L8.80|
        LDRB     r0,[r4,#3]
        MOVS     r1,#0x60
        AND      r0,r1,r0,LSL #5
        ORRS     r5,r5,r0
        LDRB     r0,[r4,#7]
        CMP      r0,#1
        BNE      |L8.100|
        ORR      r5,r5,#0x80
|L8.100|
        STR      r5,[r6,#8]
        LDR      r0,[r6,#0xc]
        BIC      r5,r0,#0xf
        LDRB     r0,[r4,#5]
        CMP      r0,#4
        BEQ      |L8.122|
        LDRB     r0,[r4,#5]
        AND      r0,r0,#3
        ORRS     r5,r5,r0
|L8.122|
        LDRB     r0,[r4,#6]
        CMP      r0,#1
        BNE      |L8.132|
        ORR      r5,r5,#4
|L8.132|
        LDRB     r0,[r4,#2]
        CMP      r0,#1
        BNE      |L8.142|
        ORR      r5,r5,#8
|L8.142|
        STR      r5,[r6,#0xc]
        LDR      r0,[r6,#0x20]
        BIC      r5,r0,#3
        LDRB     r0,[r4,#0]
        AND      r0,r0,#3
        ORRS     r5,r5,r0
        STR      r5,[r6,#0x20]
        LDRB     r0,[r4,#8]
        CMP      r0,#1
        BNE      |L8.176|
        LDR      r0,[r6,#0x24]
        ORR      r0,r0,#8
        STR      r0,[r6,#0x24]
        B        |L8.184|
|L8.176|
        LDR      r0,[r6,#0x24]
        BIC      r0,r0,#8
        STR      r0,[r6,#0x24]
|L8.184|
        POP      {r4-r8,pc}
        ENDP

|L8.188|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c",0
        DCB      0
        DCB      0
|L8.232|
        DCB      "NULL != config",0
        DCB      0
|L8.248|
        DCD      s_adc16Clocks
|L8.252|
        DCD      0x40047000

        AREA ||i.ADC16_SetChannelConfig||, CODE, READONLY, ALIGN=2

ADC16_SetChannelConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r6,r1
        MOV      r4,r2
        CMP      r6,#2
        BCS      |L9.16|
        B        |L9.28|
|L9.16|
        MOV      r2,#0x1c7
        ADR      r1,|L9.80|
        ADR      r0,|L9.124|
        BL       __aeabi_assert
|L9.28|
        CBZ      r4,|L9.32|
        B        |L9.44|
|L9.32|
        MOV      r2,#0x1c8
        ADR      r1,|L9.80|
        ADR      r0,|L9.156|
        BL       __aeabi_assert
|L9.44|
        LDRB     r0,[r4,#0]
        AND      r5,r0,#0x1f
        LDRB     r0,[r4,#5]
        CMP      r0,#1
        BNE      |L9.60|
        ORR      r5,r5,#0x20
|L9.60|
        LDRB     r0,[r4,#4]
        CMP      r0,#1
        BNE      |L9.70|
        ORR      r5,r5,#0x40
|L9.70|
        STR      r5,[r7,r6,LSL #2]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L9.80|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c",0
        DCB      0
        DCB      0
|L9.124|
        DCB      "channelGroup < ADC_SC1_COUNT",0
        DCB      0
        DCB      0
        DCB      0
|L9.156|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.ADC16_SetChannelMuxMode||, CODE, READONLY, ALIGN=1

ADC16_SetChannelMuxMode PROC
        CBNZ     r1,|L10.12|
        LDR      r2,[r0,#0xc]
        BIC      r2,r2,#0x10
        STR      r2,[r0,#0xc]
        B        |L10.20|
|L10.12|
        LDR      r2,[r0,#0xc]
        ORR      r2,r2,#0x10
        STR      r2,[r0,#0xc]
|L10.20|
        BX       lr
        ENDP


        AREA ||i.ADC16_SetHardwareAverage||, CODE, READONLY, ALIGN=1

ADC16_SetHardwareAverage PROC
        LDR      r3,[r0,#0x24]
        BIC      r2,r3,#7
        CMP      r1,#4
        BEQ      |L11.20|
        AND      r3,r1,#3
        ORR      r3,r3,#4
        ORRS     r2,r2,r3
|L11.20|
        STR      r2,[r0,#0x24]
        BX       lr
        ENDP


        AREA ||i.ADC16_SetHardwareCompareConfig||, CODE, READONLY, ALIGN=2

ADC16_SetHardwareCompareConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        LDR      r0,[r4,#0x20]
        BIC      r5,r0,#0x38
        CBNZ     r6,|L12.18|
        STR      r5,[r4,#0x20]
|L12.16|
        POP      {r4-r6,pc}
|L12.18|
        ORR      r5,r5,#0x20
        LDRB     r0,[r6,#0]
        CBZ      r0,|L12.40|
        CMP      r0,#1
        BEQ      |L12.42|
        CMP      r0,#2
        BEQ      |L12.48|
        CMP      r0,#3
        BNE      |L12.60|
        B        |L12.54|
|L12.40|
        B        |L12.72|
|L12.42|
        ORR      r5,r5,#0x10
        B        |L12.72|
|L12.48|
        ORR      r5,r5,#8
        B        |L12.72|
|L12.54|
        ORR      r5,r5,#0x18
        B        |L12.72|
|L12.60|
        MOV      r2,#0x138
        ADR      r1,|L12.92|
        ADR      r0,|L12.136|
        BL       __aeabi_assert
|L12.72|
        NOP      
        STR      r5,[r4,#0x20]
        LDRH     r0,[r6,#2]
        UXTH     r0,r0
        STR      r0,[r4,#0x18]
        LDRH     r0,[r6,#4]
        UXTH     r0,r0
        STR      r0,[r4,#0x1c]
        NOP      
        B        |L12.16|
        ENDP

|L12.92|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c",0
        DCB      0
        DCB      0
|L12.136|
        DCB      "false",0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_adc16Bases
        DCD      0x4003b000
        DCD      0x400bb000
s_adc16Clocks
        DCD      0x103c001b
        DCD      0x1030001b

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_adc16.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_adc16_c_97e815f7____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_fsl_adc16_c_97e815f7____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_adc16_c_97e815f7____REVSH|
#line 483
|__asm___11_fsl_adc16_c_97e815f7____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_adc16_c_97e815f7____RRX|
#line 670
|__asm___11_fsl_adc16_c_97e815f7____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT ADC16_ClearStatusFlags [CODE]
        EXPORT ADC16_Deinit [CODE]
        EXPORT ADC16_DoAutoCalibration [CODE]
        EXPORT ADC16_GetChannelStatusFlags [CODE]
        EXPORT ADC16_GetDefaultConfig [CODE]
        EXPORT ADC16_GetStatusFlags [CODE]
        EXPORT ADC16_Init [CODE]
        EXPORT ADC16_SetChannelConfig [CODE]
        EXPORT ADC16_SetChannelMuxMode [CODE]
        EXPORT ADC16_SetHardwareAverage [CODE]
        EXPORT ADC16_SetHardwareCompareConfig [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP ADC16_GetInstance
        KEEP s_adc16Bases
        KEEP s_adc16Clocks

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
