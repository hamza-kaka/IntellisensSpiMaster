; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_smc.o --depend=.\objects\fsl_smc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_smc.crf ..\..\devices\MK66F18\drivers\fsl_smc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DisableGlobalIRQ||, CODE, READONLY, ALIGN=1

DisableGlobalIRQ PROC
        NOP      
        MRS      r1,PRIMASK
        MOV      r0,r1
        CPSID    i
        BX       lr
        ENDP


        AREA ||i.EnableGlobalIRQ||, CODE, READONLY, ALIGN=1

EnableGlobalIRQ PROC
        NOP      
        MSR      PRIMASK,r0
        NOP      
        BX       lr
        ENDP


        AREA ||i.SMC_EnterStopRamFunc||, CODE, READONLY, ALIGN=2

SMC_EnterStopRamFunc PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L3.12|
        MOV      r5,r4
        BLX      r5
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.12|
        DCD      s_stopRamFuncArray+0x1

        AREA ||i.SMC_PostExitStopModes||, CODE, READONLY, ALIGN=2

SMC_PostExitStopModes PROC
        PUSH     {r4,lr}
        LDR      r0,|L4.28|
        LDR      r0,[r0,#0]  ; g_savedPrimask
        BL       EnableGlobalIRQ
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L4.28|
        DCD      g_savedPrimask

        AREA ||i.SMC_PostExitWaitModes||, CODE, READONLY, ALIGN=2

SMC_PostExitWaitModes PROC
        PUSH     {r4,lr}
        LDR      r0,|L5.28|
        LDR      r0,[r0,#0]  ; g_savedPrimask
        BL       EnableGlobalIRQ
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L5.28|
        DCD      g_savedPrimask

        AREA ||i.SMC_PreEnterStopModes||, CODE, READONLY, ALIGN=2

SMC_PreEnterStopModes PROC
        PUSH     {r4,lr}
        BL       DisableGlobalIRQ
        LDR      r1,|L6.28|
        STR      r0,[r1,#0]  ; g_savedPrimask
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L6.28|
        DCD      g_savedPrimask

        AREA ||i.SMC_PreEnterWaitModes||, CODE, READONLY, ALIGN=2

SMC_PreEnterWaitModes PROC
        PUSH     {r4,lr}
        BL       DisableGlobalIRQ
        LDR      r1,|L7.28|
        STR      r0,[r1,#0]  ; g_savedPrimask
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L7.28|
        DCD      g_savedPrimask

        AREA ||i.SMC_SetPowerModeHsrun||, CODE, READONLY, ALIGN=1

SMC_SetPowerModeHsrun PROC
        MOV      r1,r0
        LDRB     r2,[r1,#1]
        BIC      r2,r2,#0x60
        ORR      r2,r2,#0x60
        STRB     r2,[r1,#1]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.SMC_SetPowerModeLls||, CODE, READONLY, ALIGN=2

SMC_SetPowerModeLls PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        LDRB     r5,[r4,#1]
        BIC      r5,r5,#7
        ORR      r5,r5,#3
        STRB     r5,[r4,#1]
        LDRB     r5,[r4,#2]
        BIC      r5,r5,#7
        LDRB     r0,[r6,#0]
        ORRS     r5,r5,r0
        STRB     r5,[r4,#2]
        LDR      r0,|L9.68|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        LDR      r1,|L9.68|
        STR      r0,[r1,#0]
        LDRB     r0,[r4,#1]
        BL       SMC_EnterStopRamFunc
        LDRB     r0,[r4,#1]
        AND      r0,r0,#8
        CBZ      r0,|L9.62|
        MOV      r0,#0xf3c
|L9.60|
        POP      {r4-r6,pc}
|L9.62|
        MOVS     r0,#0
        B        |L9.60|
        ENDP

        DCW      0x0000
|L9.68|
        DCD      0xe000ed10

        AREA ||i.SMC_SetPowerModeRun||, CODE, READONLY, ALIGN=1

SMC_SetPowerModeRun PROC
        MOV      r1,r0
        LDRB     r2,[r1,#1]
        BIC      r2,r2,#0x60
        NOP      
        STRB     r2,[r1,#1]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.SMC_SetPowerModeStop||, CODE, READONLY, ALIGN=2

SMC_SetPowerModeStop PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        LDRB     r5,[r4,#2]
        BIC      r5,r5,#0xc0
        ORR      r0,r5,r6,LSL #6
        UXTB     r5,r0
        STRB     r5,[r4,#2]
        LDRB     r5,[r4,#1]
        BIC      r5,r5,#7
        NOP      
        STRB     r5,[r4,#1]
        LDR      r0,|L11.68|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        LDR      r1,|L11.68|
        STR      r0,[r1,#0]
        LDRB     r0,[r4,#1]
        BL       SMC_EnterStopRamFunc
        LDRB     r0,[r4,#1]
        AND      r0,r0,#8
        CBZ      r0,|L11.62|
        MOV      r0,#0xf3c
|L11.60|
        POP      {r4-r6,pc}
|L11.62|
        MOVS     r0,#0
        B        |L11.60|
        ENDP

        DCW      0x0000
|L11.68|
        DCD      0xe000ed10

        AREA ||i.SMC_SetPowerModeVlls||, CODE, READONLY, ALIGN=2

SMC_SetPowerModeVlls PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDRB     r0,[r5,#0]
        CBNZ     r0,|L12.36|
        LDRB     r0,[r5,#1]
        CMP      r0,#1
        BNE      |L12.26|
        LDRB     r0,[r4,#2]
        BIC      r0,r0,#0x20
        STRB     r0,[r4,#2]
        B        |L12.66|
|L12.26|
        LDRB     r0,[r4,#2]
        ORR      r0,r0,#0x20
        STRB     r0,[r4,#2]
        B        |L12.66|
|L12.36|
        LDRB     r0,[r5,#0]
        CMP      r0,#2
        BNE      |L12.66|
        LDRB     r0,[r5,#2]
        CMP      r0,#1
        BNE      |L12.58|
        LDRB     r0,[r4,#2]
        ORR      r0,r0,#0x10
        STRB     r0,[r4,#2]
        B        |L12.66|
|L12.58|
        LDRB     r0,[r4,#2]
        BIC      r0,r0,#0x10
        STRB     r0,[r4,#2]
|L12.66|
        LDRB     r6,[r4,#1]
        BIC      r6,r6,#7
        ORR      r6,r6,#4
        STRB     r6,[r4,#1]
        LDRB     r6,[r4,#2]
        BIC      r6,r6,#7
        LDRB     r0,[r5,#0]
        ORRS     r6,r6,r0
        STRB     r6,[r4,#2]
        LDR      r0,|L12.128|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        LDR      r1,|L12.128|
        STR      r0,[r1,#0]
        LDRB     r0,[r4,#1]
        BL       SMC_EnterStopRamFunc
        LDRB     r0,[r4,#1]
        AND      r0,r0,#8
        CBZ      r0,|L12.122|
        MOV      r0,#0xf3c
|L12.120|
        POP      {r4-r6,pc}
|L12.122|
        MOVS     r0,#0
        B        |L12.120|
        ENDP

        DCW      0x0000
|L12.128|
        DCD      0xe000ed10

        AREA ||i.SMC_SetPowerModeVlpr||, CODE, READONLY, ALIGN=1

SMC_SetPowerModeVlpr PROC
        MOV      r1,r0
        LDRB     r2,[r1,#1]
        BIC      r2,r2,#0x60
        ORR      r2,r2,#0x40
        STRB     r2,[r1,#1]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.SMC_SetPowerModeVlps||, CODE, READONLY, ALIGN=2

SMC_SetPowerModeVlps PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDRB     r5,[r4,#1]
        BIC      r5,r5,#7
        ORR      r5,r5,#2
        STRB     r5,[r4,#1]
        LDR      r0,|L14.52|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        LDR      r1,|L14.52|
        STR      r0,[r1,#0]
        LDRB     r0,[r4,#1]
        BL       SMC_EnterStopRamFunc
        LDRB     r0,[r4,#1]
        AND      r0,r0,#8
        CBZ      r0,|L14.48|
        MOV      r0,#0xf3c
|L14.46|
        POP      {r4-r6,pc}
|L14.48|
        MOVS     r0,#0
        B        |L14.46|
        ENDP

|L14.52|
        DCD      0xe000ed10

        AREA ||i.SMC_SetPowerModeVlpw||, CODE, READONLY, ALIGN=2

SMC_SetPowerModeVlpw PROC
        MOV      r1,r0
        LDR      r0,|L15.52|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#4
        LDR      r2,|L15.52|
        STR      r0,[r2,#0]
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        WFI      
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        MOVS     r0,#0
        BX       lr
        ENDP

|L15.52|
        DCD      0xe000ed10

        AREA ||i.SMC_SetPowerModeWait||, CODE, READONLY, ALIGN=2

SMC_SetPowerModeWait PROC
        MOV      r1,r0
        LDR      r0,|L16.52|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#4
        LDR      r2,|L16.52|
        STR      r0,[r2,#0]
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        WFI      
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        MOVS     r0,#0
        BX       lr
        ENDP

|L16.52|
        DCD      0xe000ed10

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

g_savedPrimask
        DCD      0x00000000
s_stopRamFuncArray
        DCW      0x2000,0x2808
        DCW      0xd202,0xbf00
        DCW      0x1c40,0xe7fa
        DCW      0xf3bf,0x8f4f
        DCW      0xbf30,0xf3bf
        DCW      0x8f6f,0x4770

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_smc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_smc_c_64ca23c3____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_fsl_smc_c_64ca23c3____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_smc_c_64ca23c3____REVSH|
#line 483
|__asm___9_fsl_smc_c_64ca23c3____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_smc_c_64ca23c3____RRX|
#line 670
|__asm___9_fsl_smc_c_64ca23c3____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SMC_PostExitStopModes [CODE]
        EXPORT SMC_PostExitWaitModes [CODE]
        EXPORT SMC_PreEnterStopModes [CODE]
        EXPORT SMC_PreEnterWaitModes [CODE]
        EXPORT SMC_SetPowerModeHsrun [CODE]
        EXPORT SMC_SetPowerModeLls [CODE]
        EXPORT SMC_SetPowerModeRun [CODE]
        EXPORT SMC_SetPowerModeStop [CODE]
        EXPORT SMC_SetPowerModeVlls [CODE]
        EXPORT SMC_SetPowerModeVlpr [CODE]
        EXPORT SMC_SetPowerModeVlps [CODE]
        EXPORT SMC_SetPowerModeVlpw [CODE]
        EXPORT SMC_SetPowerModeWait [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP DisableGlobalIRQ
        KEEP EnableGlobalIRQ
        KEEP SMC_EnterStopRamFunc
        KEEP g_savedPrimask
        KEEP s_stopRamFuncArray

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
