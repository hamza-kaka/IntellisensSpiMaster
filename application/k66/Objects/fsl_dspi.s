; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_dspi.o --depend=.\objects\fsl_dspi.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_dspi.crf ..\..\devices\MK66F18\drivers\fsl_dspi.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CLOCK_EnableClock||, CODE, READONLY, ALIGN=2

CLOCK_EnableClock PROC
        LDR      r2,|L1.20|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L1.20|
        DCD      0x40047000

        AREA ||i.DSPI_ClearStatusFlags||, CODE, READONLY, ALIGN=1

DSPI_ClearStatusFlags PROC
        STR      r1,[r0,#0x2c]
        BX       lr
        ENDP


        AREA ||i.DSPI_CommonIRQHandler||, CODE, READONLY, ALIGN=2

DSPI_CommonIRQHandler PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r4
        BL       DSPI_IsMaster
        CBZ      r0,|L3.26|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,|L3.56|
        LDR      r2,[r2,#0]  ; s_dspiMasterIsr
        BLX      r2
        B        |L3.36|
|L3.26|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,|L3.60|
        LDR      r2,[r2,#0]  ; s_dspiSlaveIsr
        BLX      r2
|L3.36|
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.56|
        DCD      s_dspiMasterIsr
|L3.60|
        DCD      s_dspiSlaveIsr

        AREA ||i.DSPI_Deinit||, CODE, READONLY, ALIGN=2

DSPI_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,r5
        BL       DSPI_StopTransfer
        MOVS     r1,#0
        MOV      r0,r5
        BL       DSPI_Enable
        MOV      r0,r5
        BL       DSPI_GetInstance
        LDR      r1,|L4.52|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L4.56|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L4.52|
        DCD      s_dspiClock
|L4.56|
        DCD      0x40047000

        AREA ||i.DSPI_DisableInterrupts||, CODE, READONLY, ALIGN=1

DSPI_DisableInterrupts PROC
        LDR      r2,[r0,#0x30]
        BICS     r2,r2,r1
        STR      r2,[r0,#0x30]
        BX       lr
        ENDP


        AREA ||i.DSPI_Enable||, CODE, READONLY, ALIGN=1

DSPI_Enable PROC
        CBZ      r1,|L6.12|
        LDR      r2,[r0,#0]
        BIC      r2,r2,#0x4000
        STR      r2,[r0,#0]
        B        |L6.20|
|L6.12|
        LDR      r2,[r0,#0]
        ORR      r2,r2,#0x4000
        STR      r2,[r0,#0]
|L6.20|
        BX       lr
        ENDP


        AREA ||i.DSPI_EnableInterrupts||, CODE, READONLY, ALIGN=1

DSPI_EnableInterrupts PROC
        AND      r2,r1,#0x2000000
        CBZ      r2,|L7.14|
        LDR      r2,[r0,#0x30]
        BIC      r2,r2,#0x1000000
        STR      r2,[r0,#0x30]
|L7.14|
        AND      r2,r1,#0x20000
        CBZ      r2,|L7.28|
        LDR      r2,[r0,#0x30]
        BIC      r2,r2,#0x10000
        STR      r2,[r0,#0x30]
|L7.28|
        LDR      r2,[r0,#0x30]
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x30]
        BX       lr
        ENDP


        AREA ||i.DSPI_FlushFifo||, CODE, READONLY, ALIGN=1

DSPI_FlushFifo PROC
        PUSH     {r4,r5,lr}
        LDR      r3,[r0,#0]
        BIC      r3,r3,#0xc00
        MOV      r5,#0x800
        AND      r4,r5,r1,LSL #11
        ORRS     r3,r3,r4
        ASRS     r5,r5,#1
        AND      r4,r5,r2,LSL #10
        ORRS     r3,r3,r4
        STR      r3,[r0,#0]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.DSPI_GetDefaultDataCommandConfig||, CODE, READONLY, ALIGN=2

DSPI_GetDefaultDataCommandConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L9.8|
        B        |L9.20|
|L9.8|
        MOV      r2,#0x286
        ADR      r1,|L9.44|
        ADR      r0,|L9.88|
        BL       __aeabi_assert
|L9.20|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STRB     r0,[r4,#4]
        STRB     r0,[r4,#0]
        STRB     r0,[r4,#1]
        MOVS     r0,#1
        STRB     r0,[r4,#2]
        MOVS     r0,#0
        STRB     r0,[r4,#3]
        STRB     r0,[r4,#4]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L9.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L9.88|
        DCB      "NULL != command",0

        AREA ||i.DSPI_GetDummyDataInstance||, CODE, READONLY, ALIGN=2

DSPI_GetDummyDataInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       DSPI_GetInstance
        LDR      r1,|L10.20|
        LDRB     r5,[r1,r0]
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L10.20|
        DCD      g_dspiDummyData

        AREA ||i.DSPI_GetInstance||, CODE, READONLY, ALIGN=2

DSPI_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L11.22|
|L11.8|
        LDR      r0,|L11.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L11.20|
        B        |L11.26|
|L11.20|
        ADDS     r4,r4,#1
|L11.22|
        CMP      r4,#3
        BCC      |L11.8|
|L11.26|
        NOP      
        CMP      r4,#3
        BCS      |L11.34|
        B        |L11.44|
|L11.34|
        MOVS     r2,#0x8c
        ADR      r1,|L11.52|
        ADR      r0,|L11.96|
        BL       __aeabi_assert
|L11.44|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

|L11.48|
        DCD      s_dspiBases
|L11.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L11.96|
        DCB      "instance < ARRAY_SIZE(s_dspiBases)",0
        DCB      0

        AREA ||i.DSPI_GetStatusFlags||, CODE, READONLY, ALIGN=1

DSPI_GetStatusFlags PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x2c]
        BX       lr
        ENDP


        AREA ||i.DSPI_IsMaster||, CODE, READONLY, ALIGN=1

DSPI_IsMaster PROC
        MOV      r1,r0
        LDR      r0,[r1,#0]
        AND      r0,r0,#0x80000000
        CBZ      r0,|L13.14|
        MOVS     r0,#1
|L13.12|
        BX       lr
|L13.14|
        MOVS     r0,#0
        B        |L13.12|
        ENDP


        AREA ||i.DSPI_MasterGetDefaultConfig||, CODE, READONLY, ALIGN=2

DSPI_MasterGetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L14.8|
        B        |L14.20|
|L14.8|
        MOV      r2,#0x108
        ADR      r1,|L14.80|
        ADR      r0,|L14.124|
        BL       __aeabi_assert
|L14.20|
        MOVS     r1,#0x24
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOVS     r0,#0
        STRB     r0,[r4,#0]
        LDR      r0,|L14.148|
        STR      r0,[r4,#4]
        MOVS     r1,#8
        STR      r1,[r4,#8]
        MOVS     r1,#0
        STRB     r1,[r4,#0xc]
        STRB     r1,[r4,#0xd]
        STRB     r1,[r4,#0xe]
        MOV      r1,#0x3e8
        STR      r1,[r4,#0x10]
        STR      r1,[r4,#0x14]
        STR      r1,[r4,#0x18]
        MOVS     r0,#1
        STRB     r0,[r4,#0x1c]
        STRB     r0,[r4,#0x1d]
        MOVS     r0,#0
        STRB     r0,[r4,#0x1e]
        STRB     r0,[r4,#0x1f]
        STRB     r0,[r4,#0x20]
        STRB     r0,[r4,#0x21]
        POP      {r4,pc}
        ENDP

|L14.80|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L14.124|
        DCB      "NULL != masterConfig",0
        DCB      0
        DCB      0
        DCB      0
|L14.148|
        DCD      0x0007a120

        AREA ||i.DSPI_MasterGetFormattedCommand||, CODE, READONLY, ALIGN=1

DSPI_MasterGetFormattedCommand PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0]
        MOV      r2,#0x80000000
        AND      r0,r2,r0,LSL #31
        LDRB     r2,[r1,#1]
        MOV      r3,#0x70000000
        AND      r2,r3,r2,LSL #28
        ORRS     r0,r0,r2
        LDRB     r2,[r1,#2]
        MOV      r3,#0x3f0000
        AND      r2,r3,r2,LSL #16
        ORRS     r0,r0,r2
        LDRB     r2,[r1,#3]
        MOV      r3,#0x8000000
        AND      r2,r3,r2,LSL #27
        ORRS     r0,r0,r2
        LDRB     r2,[r1,#4]
        ASRS     r3,r3,#1
        AND      r2,r3,r2,LSL #26
        ORRS     r0,r0,r2
        BX       lr
        ENDP


        AREA ||i.DSPI_MasterHalfDuplexTransferBlocking||, CODE, READONLY, ALIGN=2

DSPI_MasterHalfDuplexTransferBlocking PROC
        PUSH     {r0-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L16.10|
        B        |L16.22|
|L16.10|
        MOV      r2,#0x4db
        ADR      r1,|L16.156|
        ADR      r0,|L16.200|
        BL       __aeabi_assert
|L16.22|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        STR      r0,[sp,#8]
        STR      r0,[sp,#0xc]
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L16.52|
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#8]
        B        |L16.64|
|L16.52|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#8]
|L16.64|
        LDRB     r0,[r4,#0x14]
        CMP      r0,#1
        BNE      |L16.80|
        LDR      r0,[r4,#0x10]
        ORR      r0,r0,#0x200000
        STR      r0,[sp,#0xc]
        B        |L16.88|
|L16.80|
        LDR      r0,[r4,#0x10]
        BIC      r0,r0,#0x200000
        STR      r0,[sp,#0xc]
|L16.88|
        MOV      r1,sp
        MOV      r0,r6
        BL       DSPI_MasterTransferBlocking
        MOV      r5,r0
        CBZ      r5,|L16.106|
        MOV      r0,r5
|L16.102|
        ADD      sp,sp,#0x10
        POP      {r4-r6,pc}
|L16.106|
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L16.126|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#8]
        B        |L16.138|
|L16.126|
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#8]
|L16.138|
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0xc]
        MOV      r1,sp
        MOV      r0,r6
        BL       DSPI_MasterTransferBlocking
        MOV      r5,r0
        MOV      r0,r5
        B        |L16.102|
        ENDP

|L16.156|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L16.200|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.DSPI_MasterHalfDuplexTransferNonBlocking||, CODE, READONLY, ALIGN=2

DSPI_MasterHalfDuplexTransferNonBlocking PROC
        PUSH     {r0-r8,lr}
        MOV      r7,r0
        MOV      r6,r1
        MOV      r4,r2
        CBZ      r4,|L17.14|
        B        |L17.26|
|L17.14|
        MOV      r2,#0x520
        ADR      r1,|L17.180|
        ADR      r0,|L17.224|
        BL       __aeabi_assert
|L17.26|
        CBZ      r6,|L17.30|
        B        |L17.42|
|L17.30|
        MOV      r2,#0x521
        ADR      r1,|L17.180|
        ADR      r0,|L17.240|
        BL       __aeabi_assert
|L17.42|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        STR      r0,[sp,#8]
        STR      r0,[sp,#0xc]
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L17.72|
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#8]
        B        |L17.84|
|L17.72|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#8]
|L17.84|
        LDRB     r0,[r4,#0x14]
        CMP      r0,#1
        BNE      |L17.100|
        LDR      r0,[r4,#0x10]
        ORR      r0,r0,#0x200000
        STR      r0,[sp,#0xc]
        B        |L17.108|
|L17.100|
        LDR      r0,[r4,#0x10]
        BIC      r0,r0,#0x200000
        STR      r0,[sp,#0xc]
|L17.108|
        MOV      r1,sp
        MOV      r0,r7
        BL       DSPI_MasterTransferBlocking
        MOV      r5,r0
        CBZ      r5,|L17.128|
        MOV      r0,r5
|L17.122|
        ADD      sp,sp,#0x10
        POP      {r4-r8,pc}
|L17.128|
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L17.148|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#8]
        B        |L17.160|
|L17.148|
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#8]
|L17.160|
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0xc]
        MOV      r2,sp
        MOV      r1,r6
        MOV      r0,r7
        BL       DSPI_MasterTransferNonBlocking
        MOV      r5,r0
        MOV      r0,r5
        B        |L17.122|
        ENDP

|L17.180|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L17.224|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0
|L17.240|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_MasterInit||, CODE, READONLY, ALIGN=2

DSPI_MasterInit PROC
        PUSH     {r3-r9,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r7,r2
        CBZ      r4,|L18.14|
        B        |L18.24|
|L18.14|
        MOVS     r2,#0xca
        ADR      r1,|L18.296|
        ADR      r0,|L18.340|
        BL       __aeabi_assert
|L18.24|
        MOV      r0,r5
        BL       DSPI_GetInstance
        LDR      r1,|L18.364|
        LDR      r8,[r1,r0,LSL #2]
        MOV      r0,r8
        BL       CLOCK_EnableClock
        MOVS     r1,#1
        MOV      r0,r5
        BL       DSPI_Enable
        MOV      r0,r5
        BL       DSPI_StopTransfer
        MOVS     r1,#1
        MOV      r0,r5
        BL       DSPI_SetMasterSlaveMode
        LDR      r0,[r5,#0]
        LDR      r1,|L18.368|
        AND      r6,r0,r1
        LDRB     r0,[r4,#0x1e]
        MOV      r1,#0x40000000
        AND      r0,r1,r0,LSL #30
        ORRS     r0,r0,r6
        LDRB     r1,[r4,#0x20]
        MOV      r2,#0x4000000
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0x1f]
        ASRS     r2,r2,#2
        AND      r1,r2,r1,LSL #24
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0x21]
        MOV      r2,#0x300
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0]
        LDRB     r2,[r4,#0x1d]
        LDRB     r1,[r4,#0x1c]
        MOV      r0,r5
        BL       DSPI_SetOnePcsPolarity
        LDRB     r1,[r4,#0]
        MOV      r3,r7
        MOV      r0,r5
        LDR      r2,[r4,#4]
        BL       DSPI_MasterSetBaudRate
        CBNZ     r0,|L18.158|
        MOVS     r2,#0xe3
        ADR      r1,|L18.296|
        ADR      r0,|L18.372|
        BL       __aeabi_assert
|L18.158|
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #2]
        BIC      r6,r0,#0x7f000000
        LDRB     r0,[r4,#8]
        SUBS     r0,r0,#1
        MOV      r1,#0x78000000
        AND      r0,r1,r0,LSL #27
        ORRS     r0,r0,r6
        LDRB     r1,[r4,#0xc]
        MOV      r2,#0x4000000
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0xd]
        ASRS     r2,r2,#1
        AND      r1,r2,r1,LSL #25
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0xe]
        ASRS     r2,r2,#1
        AND      r1,r2,r1,LSL #24
        ORRS     r0,r0,r1
        LDRB     r2,[r4,#0]
        ADD      r1,r5,#0xc
        STR      r0,[r1,r2,LSL #2]
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0]
        LDRB     r1,[r4,#0]
        MOV      r3,r7
        MOVS     r2,#1
        MOV      r0,r5
        BL       DSPI_MasterSetDelayTimes
        LDR      r0,[r4,#0x14]
        STR      r0,[sp,#0]
        LDRB     r1,[r4,#0]
        MOV      r3,r7
        MOVS     r2,#2
        MOV      r0,r5
        BL       DSPI_MasterSetDelayTimes
        LDR      r0,[r4,#0x18]
        STR      r0,[sp,#0]
        LDRB     r1,[r4,#0]
        MOV      r3,r7
        MOVS     r2,#3
        MOV      r0,r5
        BL       DSPI_MasterSetDelayTimes
        MOVS     r1,#0
        MOV      r0,r5
        BL       DSPI_SetDummyData
        MOV      r0,r5
        BL       DSPI_StartTransfer
        POP      {r3-r9,pc}
        ENDP

        DCW      0x0000
|L18.296|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L18.340|
        DCB      "NULL != masterConfig",0
        DCB      0
        DCB      0
        DCB      0
|L18.364|
        DCD      s_dspiClock
|L18.368|
        DCD      0xbaffccff
|L18.372|
        DCB      "false",0
        DCB      0
        DCB      0

        AREA ||i.DSPI_MasterSetBaudRate||, CODE, READONLY, ALIGN=2

DSPI_MasterSetBaudRate PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0x1c
        MOV      r9,r0
        MOV      r10,r1
        MOV      r0,r9
        BL       DSPI_IsMaster
        CBNZ     r0,|L19.26|
        MOVS     r0,#0
|L19.20|
        ADD      sp,sp,#0x2c
        POP      {r4-r11,pc}
|L19.26|
        LDR      r11,[sp,#0x24]
        MOV      r5,#0xffffffff
        MOVS     r0,#0
        STR      r0,[sp,#0x14]
        STR      r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#8]
        MOVS     r4,#0
        B        |L19.132|
|L19.52|
        MOVS     r6,#0
        B        |L19.122|
|L19.56|
        MOVS     r7,#1
        B        |L19.112|
|L19.60|
        LDR      r0,|L19.188|
        LDR      r1,[r0,r4,LSL #2]
        LDR      r0,|L19.192|
        LDR      r0,[r0,r6,LSL #2]
        MULS     r1,r0,r1
        LDR      r0,[sp,#0x28]
        MULS     r0,r7,r0
        UDIV     r8,r0,r1
        CMP      r11,r8
        BCC      |L19.110|
        SUB      r0,r11,r8
        STR      r0,[sp,#4]
        LDR      r0,[sp,#4]
        CMP      r5,r0
        BLS      |L19.110|
        LDR      r5,[sp,#4]
        STR      r4,[sp,#0x14]
        STR      r6,[sp,#0x10]
        STR      r8,[sp,#8]
        STR      r7,[sp,#0xc]
|L19.110|
        ADDS     r7,r7,#1
|L19.112|
        CMP      r7,#3
        BCS      |L19.120|
        CMP      r5,#0
        BNE      |L19.60|
|L19.120|
        ADDS     r6,r6,#1
|L19.122|
        CMP      r6,#0x10
        BCS      |L19.130|
        CMP      r5,#0
        BNE      |L19.56|
|L19.130|
        ADDS     r4,r4,#1
|L19.132|
        CMP      r4,#4
        BCS      |L19.140|
        CMP      r5,#0
        BNE      |L19.52|
|L19.140|
        ADD      r0,r9,#0xc
        LDR      r0,[r0,r10,LSL #2]
        LDR      r1,|L19.196|
        ANDS     r0,r0,r1
        STR      r0,[sp,#0x18]
        LDR      r0,[sp,#0xc]
        SUBS     r1,r0,#1
        LDR      r0,[sp,#0x18]
        ORR      r1,r0,r1,LSL #31
        LDR      r0,[sp,#0x14]
        ORR      r0,r1,r0,LSL #16
        LDR      r1,[sp,#0x10]
        ORRS     r0,r0,r1
        ADD      r1,r9,#0xc
        STR      r0,[r1,r10,LSL #2]
        LDR      r0,[sp,#8]
        B        |L19.20|
        ENDP

        DCW      0x0000
|L19.188|
        DCD      s_baudratePrescaler
|L19.192|
        DCD      s_baudrateScaler
|L19.196|
        DCD      0x7ffcfff0

        AREA ||i.DSPI_MasterSetDelayScaler||, CODE, READONLY, ALIGN=2

DSPI_MasterSetDelayScaler PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        LDR      r8,[sp,#0x18]
        MOV      r0,r4
        BL       DSPI_IsMaster
        CMP      r0,#0
        BEQ      |L20.196|
        CMP      r8,#1
        BEQ      |L20.46|
        CMP      r8,#2
        BEQ      |L20.92|
        CMP      r8,#3
        BNE      |L20.182|
        B        |L20.138|
|L20.46|
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #2]
        BIC      r0,r0,#0xc00000
        BIC      r0,r0,#0xf000
        MOV      r1,#0xc00000
        AND      r1,r1,r6,LSL #22
        ORRS     r0,r0,r1
        MOV      r1,#0xf000
        AND      r1,r1,r7,LSL #12
        ORRS     r0,r0,r1
        ADD      r1,r4,#0xc
        STR      r0,[r1,r5,LSL #2]
        B        |L20.194|
|L20.92|
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #2]
        BIC      r0,r0,#0x300000
        BIC      r0,r0,#0xf00
        MOV      r1,#0x300000
        AND      r1,r1,r6,LSL #20
        ORRS     r0,r0,r1
        MOV      r1,#0xf00
        AND      r1,r1,r7,LSL #8
        ORRS     r0,r0,r1
        ADD      r1,r4,#0xc
        STR      r0,[r1,r5,LSL #2]
        B        |L20.194|
|L20.138|
        ADD      r0,r4,#0xc
        LDR      r0,[r0,r5,LSL #2]
        BIC      r0,r0,#0xc0000
        BIC      r0,r0,#0xf0
        MOV      r1,#0xc0000
        AND      r1,r1,r6,LSL #18
        ORRS     r0,r0,r1
        MOVS     r1,#0xf0
        AND      r1,r1,r7,LSL #4
        ORRS     r0,r0,r1
        ADD      r1,r4,#0xc
        STR      r0,[r1,r5,LSL #2]
        B        |L20.194|
|L20.182|
        MOV      r2,#0x210
        ADR      r1,|L20.200|
        ADR      r0,|L20.244|
        BL       __aeabi_assert
|L20.194|
        NOP      
|L20.196|
        POP      {r4-r8,pc}
        ENDP

|L20.200|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L20.244|
        DCB      "false",0
        DCB      0
        DCB      0

        AREA ||i.DSPI_MasterSetDelayTimes||, CODE, READONLY, ALIGN=2

DSPI_MasterSetDelayTimes PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0x14
        MOV      r9,r2
        MOV      r5,r3
        LDR      r10,[sp,#0x48]
        LDR      r0,[sp,#0x14]
        BL       DSPI_IsMaster
        CBNZ     r0,|L21.30|
        MOVS     r0,#0
|L21.24|
        ADD      sp,sp,#0x24
        POP      {r4-r11,pc}
|L21.30|
        MOV      r8,#0xffffffff
        MOVS     r0,#3
        STR      r0,[sp,#0x10]
        MOV      r11,#0xf
        LDR      r0,|L21.208|
        UDIV     r1,r0,r5
        LDR      r2,|L21.212|
        LDR      r0,[sp,#0x10]
        LDR      r0,[r2,r0,LSL #2]
        MULS     r0,r1,r0
        LDR      r1,|L21.216|
        LDR      r1,[r1,r11,LSL #2]
        MULS     r0,r1,r0
        LSRS     r0,r0,#2
        STR      r0,[sp,#0xc]
        LDR      r0,|L21.220|
        UDIV     r0,r0,r5
        LSLS     r0,r0,#1
        STR      r0,[sp,#4]
        LDR      r0,[sp,#4]
        CMP      r0,r10
        BCC      |L21.106|
        MOVS     r3,#0
        MOV      r2,r3
        STR      r9,[sp,#0]
        LDRD     r0,r1,[sp,#0x14]
        BL       DSPI_MasterSetDelayScaler
        LDR      r0,[sp,#4]
        B        |L21.24|
|L21.106|
        MOVS     r4,#0
        B        |L21.178|
|L21.110|
        MOVS     r6,#0
        B        |L21.166|
|L21.114|
        LDR      r0,|L21.208|
        UDIV     r0,r0,r5
        LDR      r1,|L21.212|
        LDR      r1,[r1,r4,LSL #2]
        MULS     r0,r1,r0
        LDR      r1,|L21.216|
        LDR      r1,[r1,r6,LSL #2]
        MULS     r0,r1,r0
        LSRS     r7,r0,#2
        CMP      r7,r10
        BCC      |L21.164|
        SUB      r0,r7,r10
        STR      r0,[sp,#8]
        LDR      r0,[sp,#8]
        CMP      r8,r0
        BLS      |L21.164|
        LDR      r8,[sp,#8]
        STR      r4,[sp,#0x10]
        MOV      r11,r6
        STR      r7,[sp,#0xc]
|L21.164|
        ADDS     r6,r6,#1
|L21.166|
        CMP      r6,#0x10
        BCS      |L21.176|
        CMP      r8,#0
        BNE      |L21.114|
|L21.176|
        ADDS     r4,r4,#1
|L21.178|
        CMP      r4,#4
        BCS      |L21.188|
        CMP      r8,#0
        BNE      |L21.110|
|L21.188|
        MOV      r3,r11
        STR      r9,[sp,#0]
        LDRD     r2,r0,[sp,#0x10]
        LDR      r1,[sp,#0x18]
        BL       DSPI_MasterSetDelayScaler
        LDR      r0,[sp,#0xc]
        B        |L21.24|
        ENDP

|L21.208|
        DCD      0xee6b2800
|L21.212|
        DCD      s_delayPrescaler
|L21.216|
        DCD      s_delayScaler
|L21.220|
        DCD      0x3b9aca00

        AREA ||i.DSPI_MasterTransferAbort||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferAbort PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L22.10|
        B        |L22.22|
|L22.10|
        MOV      r2,#0x618
        ADR      r1,|L22.44|
        ADR      r0,|L22.88|
        BL       __aeabi_assert
|L22.22|
        MOV      r0,r5
        BL       DSPI_StopTransfer
        LDR      r1,|L22.104|
        MOV      r0,r5
        BL       DSPI_DisableInterrupts
        MOVS     r0,#0
        STRB     r0,[r4,#0x24]
        POP      {r4-r6,pc}
        ENDP

|L22.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L22.88|
        DCB      "NULL != handle",0
        DCB      0
|L22.104|
        DCD      0x02020000

        AREA ||i.DSPI_MasterTransferBlocking||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferBlocking PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x24
        MOV      r6,r0
        MOV      r7,r1
        CBZ      r7,|L23.14|
        B        |L23.26|
|L23.14|
        MOV      r2,#0x362
        ADR      r1,|L23.884|
        ADR      r0,|L23.928|
        BL       __aeabi_assert
|L23.26|
        MOVS     r0,#0
        STR      r0,[sp,#0x20]
        MOV      r10,r0
        MOV      r0,r6
        BL       DSPI_GetDummyDataInstance
        MOV      r11,r0
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        LDR      r0,[r7,#8]
        CBNZ     r0,|L23.56|
        MOVS     r0,#4
|L23.50|
        ADD      sp,sp,#0x24
        POP      {r4-r11,pc}
|L23.56|
        MOV      r0,r6
        BL       DSPI_StopTransfer
        LDR      r1,|L23.948|
        MOV      r0,r6
        BL       DSPI_DisableInterrupts
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       DSPI_FlushFifo
        LDR      r1,|L23.952|
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDRB     r0,[r7,#0xc]
        UBFX     r1,r0,#4,#4
        MOVS     r0,#1
        LSLS     r0,r0,r1
        UXTB     r0,r0
        STRB     r0,[sp,#6]
        MOVS     r0,#0
        STRB     r0,[sp,#7]
        STRB     r0,[sp,#8]
        LDRB     r0,[r7,#0xc]
        AND      r0,r0,#0xf
        STRB     r0,[sp,#5]
        LDR      r0,[r7,#0xc]
        AND      r0,r0,#0x100000
        CBZ      r0,|L23.136|
        MOVS     r0,#1
        B        |L23.138|
|L23.136|
        MOVS     r0,#0
|L23.138|
        STRB     r0,[sp,#4]
        ADD      r0,sp,#4
        BL       DSPI_MasterGetFormattedCommand
        STR      r0,[sp,#0x18]
        MOVS     r0,#1
        STRB     r0,[sp,#7]
        LDR      r0,[r7,#0xc]
        AND      r0,r0,#0x200000
        CBZ      r0,|L23.168|
        MOVS     r0,#1
        B        |L23.170|
|L23.168|
        MOVS     r0,#0
|L23.170|
        STRB     r0,[sp,#4]
        ADD      r0,sp,#4
        BL       DSPI_MasterGetFormattedCommand
        STR      r0,[sp,#0x14]
        LDRB     r1,[sp,#5]
        ADD      r0,r6,#0xc
        LDR      r0,[r0,r1,LSL #2]
        UBFX     r0,r0,#27,#4
        ADDS     r0,r0,#1
        STR      r0,[sp,#0x1c]
        LDR      r5,[r7,#0]
        LDR      r4,[r7,#4]
        LDR      r8,[r7,#8]
        LDR      r9,[r7,#8]
        LDR      r0,[r6,#0]
        STR      r0,[sp,#0xc]
        LDR      r0,[sp,#0xc]
        AND      r0,r0,#0x1000
        CBNZ     r0,|L23.234|
        LDR      r0,[sp,#0xc]
        AND      r0,r0,#0x2000
        CBZ      r0,|L23.240|
|L23.234|
        MOVS     r0,#1
        STR      r0,[sp,#0x10]
        B        |L23.276|
|L23.240|
        LDR      r0,|L23.956|
        CMP      r6,r0
        BNE      |L23.250|
        MOVS     r0,#4
        B        |L23.274|
|L23.250|
        LDR      r0,|L23.960|
        CMP      r6,r0
        BNE      |L23.260|
        MOVS     r0,#1
        B        |L23.274|
|L23.260|
        LDR      r0,|L23.964|
        CMP      r6,r0
        BNE      |L23.270|
        MOVS     r0,#1
        B        |L23.274|
|L23.270|
        MOV      r0,#0xffffffff
|L23.274|
        STR      r0,[sp,#0x10]
|L23.276|
        MOV      r0,r6
        BL       DSPI_StartTransfer
        LDR      r0,[sp,#0x1c]
        CMP      r0,#8
        BHI      |L23.512|
        B        |L23.544|
|L23.290|
        CMP      r8,#1
        BNE      |L23.418|
        B        |L23.308|
|L23.298|
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.308|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L23.298|
        CBZ      r5,|L23.336|
        LDRB     r0,[r5,#0]
        LDR      r1,[sp,#0x14]
        ORRS     r0,r0,r1
        STR      r0,[r6,#0x34]
        ADDS     r5,r5,#1
        B        |L23.344|
|L23.336|
        LDR      r0,[sp,#0x14]
        ORR      r0,r0,r11
        STR      r0,[r6,#0x34]
|L23.344|
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        SUB      r8,r8,#1
        B        |L23.410|
|L23.360|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BNE      |L23.410|
        CBZ      r4,|L23.390|
        MOV      r0,r6
        BL       DSPI_ReadData
        STRB     r0,[r4,#0]
        ADDS     r4,r4,#1
        B        |L23.396|
|L23.390|
        NOP      
        LDR      r0,[r6,#0x38]
        NOP      
|L23.396|
        SUB      r9,r9,#1
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.410|
        CMP      r9,#0
        BEQ      |L23.544|
        B        |L23.360|
|L23.418|
        B        |L23.430|
|L23.420|
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.430|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L23.420|
        CBZ      r5,|L23.458|
        LDRB     r0,[r5,#0]
        LDR      r1,[sp,#0x18]
        ORRS     r0,r0,r1
        STR      r0,[r6,#0x34]
        ADDS     r5,r5,#1
        B        |L23.466|
|L23.458|
        LDR      r0,[sp,#0x18]
        ORR      r0,r0,r11
        STR      r0,[r6,#0x34]
|L23.466|
        SUB      r8,r8,#1
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        B        |L23.534|
|L23.482|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BNE      |L23.534|
        CBZ      r4,|L23.514|
        MOV      r0,r6
        BL       DSPI_ReadData
        STRB     r0,[r4,#0]
        ADDS     r4,r4,#1
        B        |L23.520|
|L23.512|
        B        |L23.554|
|L23.514|
        NOP      
        LDR      r0,[r6,#0x38]
        NOP      
|L23.520|
        SUB      r9,r9,#1
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.534|
        SUB      r1,r9,r8
        LDR      r0,[sp,#0x10]
        CMP      r1,r0
        BCS      |L23.482|
|L23.544|
        CMP      r8,#0
        BNE      |L23.290|
        B        |L23.880|
|L23.554|
        B        |L23.872|
|L23.556|
        CMP      r8,#2
        BHI      |L23.728|
        B        |L23.574|
|L23.564|
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.574|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L23.564|
        CBZ      r5,|L23.616|
        LDRB     r0,[r5,#0]
        STR      r0,[sp,#0x20]
        ADDS     r5,r5,#1
        CMP      r8,#1
        BLS      |L23.620|
        LDRB     r1,[r5,#0]
        LDR      r0,[sp,#0x20]
        ORR      r0,r0,r1,LSL #8
        STR      r0,[sp,#0x20]
        ADDS     r5,r5,#1
        B        |L23.620|
|L23.616|
        STR      r11,[sp,#0x20]
|L23.620|
        LDR      r1,[sp,#0x20]
        LDR      r0,[sp,#0x14]
        ORRS     r0,r0,r1
        STR      r0,[r6,#0x34]
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        MOV      r8,#0
        B        |L23.720|
|L23.644|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BNE      |L23.720|
        MOV      r0,r6
        BL       DSPI_ReadData
        UXTH     r10,r0
        CMP      r9,#1
        BEQ      |L23.698|
        CBZ      r4,|L23.692|
        STRB     r10,[r4,#0]
        ADDS     r4,r4,#1
        ASR      r0,r10,#8
        STRB     r0,[r4,#0]
        ADDS     r4,r4,#1
|L23.692|
        SUB      r9,r9,#2
        B        |L23.710|
|L23.698|
        CBZ      r4,|L23.706|
        STRB     r10,[r4,#0]
        ADDS     r4,r4,#1
|L23.706|
        SUB      r9,r9,#1
|L23.710|
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.720|
        CMP      r9,#0
        BEQ      |L23.872|
        B        |L23.644|
|L23.728|
        B        |L23.740|
|L23.730|
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.740|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L23.730|
        CBZ      r5,|L23.776|
        LDRB     r0,[r5,#0]
        STR      r0,[sp,#0x20]
        ADDS     r5,r5,#1
        LDRB     r1,[r5,#0]
        LDR      r0,[sp,#0x20]
        ORR      r0,r0,r1,LSL #8
        STR      r0,[sp,#0x20]
        ADDS     r5,r5,#1
        B        |L23.780|
|L23.776|
        STR      r11,[sp,#0x20]
|L23.780|
        LDR      r1,[sp,#0x20]
        LDR      r0,[sp,#0x18]
        ORRS     r0,r0,r1
        STR      r0,[r6,#0x34]
        SUB      r8,r8,#2
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        B        |L23.860|
|L23.804|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BNE      |L23.860|
        MOV      r0,r6
        BL       DSPI_ReadData
        UXTH     r10,r0
        CBZ      r4,|L23.846|
        STRB     r10,[r4,#0]
        ADDS     r4,r4,#1
        ASR      r0,r10,#8
        STRB     r0,[r4,#0]
        ADDS     r4,r4,#1
|L23.846|
        SUB      r9,r9,#2
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
|L23.860|
        SUB      r1,r9,r8
        LDR      r0,[sp,#0x10]
        CMP      r0,r1,LSR #1
        BLS      |L23.804|
|L23.872|
        CMP      r8,#0
        BNE      |L23.556|
|L23.880|
        MOVS     r0,#0
        B        |L23.50|
        ENDP

|L23.884|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L23.928|
        DCB      "NULL != transfer",0
        DCB      0
        DCB      0
        DCB      0
|L23.948|
        DCD      0x9a0a0000
|L23.952|
        DCD      0xda0a0000
|L23.956|
        DCD      0x4002c000
|L23.960|
        DCD      0x4002d000
|L23.964|
        DCD      0x400ac000

        AREA ||i.DSPI_MasterTransferComplete||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferComplete PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L24.12|
        B        |L24.24|
|L24.12|
        MOV      r2,#0x574
        ADR      r1,|L24.84|
        ADR      r0,|L24.128|
        BL       __aeabi_assert
|L24.24|
        LDR      r1,|L24.144|
        MOV      r0,r6
        BL       DSPI_DisableInterrupts
        MOVS     r5,#0
        LDRB     r0,[r4,#0x24]
        CMP      r0,#2
        BNE      |L24.48|
        MOV      r5,#0x259
        B        |L24.50|
|L24.48|
        MOVS     r5,#0
|L24.50|
        LDR      r0,[r4,#0x28]
        CBZ      r0,|L24.78|
        LDRB     r0,[r4,#0x24]
        CBZ      r0,|L24.78|
        MOVS     r0,#0
        STRB     r0,[r4,#0x24]
        MOV      r2,r5
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r7,r3,[r4,#0x28]
        BLX      r7
|L24.78|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L24.84|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L24.128|
        DCB      "NULL != handle",0
        DCB      0
|L24.144|
        DCD      0x02020000

        AREA ||i.DSPI_MasterTransferCreateHandle||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferCreateHandle PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        MOV      r6,r3
        CBZ      r4,|L25.16|
        B        |L25.28|
|L25.16|
        MOV      r2,#0x34b
        ADR      r1,|L25.56|
        ADR      r0,|L25.100|
        BL       __aeabi_assert
|L25.28|
        MOVS     r1,#0x30
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOV      r0,r7
        BL       DSPI_GetInstance
        LDR      r1,|L25.116|
        STR      r4,[r1,r0,LSL #2]
        STR      r5,[r4,#0x28]
        STR      r6,[r4,#0x2c]
        POP      {r4-r8,pc}
        ENDP

|L25.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L25.100|
        DCB      "NULL != handle",0
        DCB      0
|L25.116|
        DCD      g_dspiHandle

        AREA ||i.DSPI_MasterTransferFillUpTxFifo||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferFillUpTxFifo PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r4,r1
        CBZ      r4,|L26.12|
        B        |L26.24|
|L26.12|
        MOV      r2,#0x58d
        ADR      r1,|L26.316|
        ADR      r0,|L26.360|
        BL       __aeabi_assert
|L26.24|
        MOVS     r5,#0
        MOV      r0,r7
        BL       DSPI_GetDummyDataInstance
        MOV      r8,r0
        LDR      r6,[r4,#0x18]
        LDR      r9,[r4,#0x1c]
        LDRB     r10,[r4,#0xc]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L26.210|
        B        |L26.186|
|L26.52|
        LDR      r0,[r4,#0x18]
        CMP      r0,#2
        BHI      |L26.108|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L26.94|
        LDR      r0,[r4,#0x18]
        CMP      r0,#1
        BNE      |L26.74|
        LDR      r0,[r4,#0x10]
        LDRB     r5,[r0,#0]
        B        |L26.96|
|L26.74|
        LDR      r0,[r4,#0x10]
        LDRB     r5,[r0,#0]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0x10]
        LDRB     r0,[r0,#0]
        ORR      r5,r5,r0,LSL #8
        B        |L26.96|
|L26.94|
        MOV      r5,r8
|L26.96|
        MOVS     r0,#0
        STR      r0,[r4,#0x18]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r7,#0x34]
        B        |L26.152|
|L26.108|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L26.138|
        LDR      r0,[r4,#0x10]
        LDRB     r5,[r0,#0]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0x10]
        LDRB     r0,[r0,#0]
        ORR      r5,r5,r0,LSL #8
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L26.140|
|L26.138|
        MOV      r5,r8
|L26.140|
        LDR      r0,[r4,#0x18]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x18]
        LDR      r0,[r4,#4]
        ORRS     r0,r0,r5
        STR      r0,[r7,#0x34]
|L26.152|
        MOV      r1,#0x2000000
        MOV      r0,r7
        BL       DSPI_ClearStatusFlags
        LDR      r6,[r4,#0x18]
        CBZ      r6,|L26.174|
        LDR      r0,[r4,#0x20]
        SUBS     r0,r0,#2
        CMP      r0,r6
        BNE      |L26.176|
|L26.174|
        B        |L26.208|
|L26.176|
        LDR      r9,[r4,#0x1c]
        LDR      r6,[r4,#0x18]
        LDRB     r10,[r4,#0xc]
|L26.186|
        MOV      r0,r7
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CBZ      r0,|L26.208|
        SUB      r0,r9,r6
        CMP      r10,r0,LSR #1
        BHI      |L26.52|
|L26.208|
        B        |L26.312|
|L26.210|
        B        |L26.290|
|L26.212|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L26.228|
        LDR      r0,[r4,#0x10]
        LDRB     r5,[r0,#0]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L26.230|
|L26.228|
        MOV      r5,r8
|L26.230|
        LDR      r0,[r4,#0x18]
        CMP      r0,#1
        BNE      |L26.244|
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r5
        STR      r0,[r7,#0x34]
        B        |L26.250|
|L26.244|
        LDR      r0,[r4,#4]
        ORRS     r0,r0,r5
        STR      r0,[r7,#0x34]
|L26.250|
        MOV      r1,#0x2000000
        MOV      r0,r7
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#0x18]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x18]
        LDR      r6,[r4,#0x18]
        CBZ      r6,|L26.278|
        LDR      r0,[r4,#0x20]
        SUBS     r0,r0,#1
        CMP      r0,r6
        BNE      |L26.280|
|L26.278|
        B        |L26.310|
|L26.280|
        LDR      r9,[r4,#0x1c]
        LDR      r6,[r4,#0x18]
        LDRB     r10,[r4,#0xc]
|L26.290|
        MOV      r0,r7
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CBZ      r0,|L26.310|
        SUB      r0,r9,r6
        CMP      r0,r10
        BCC      |L26.212|
|L26.310|
        NOP      
|L26.312|
        POP      {r4-r10,pc}
        ENDP

|L26.316|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L26.360|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_MasterTransferGetCount||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferGetCount PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L27.12|
        B        |L27.24|
|L27.12|
        MOV      r2,#0x560
        ADR      r1,|L27.60|
        ADR      r0,|L27.104|
        BL       __aeabi_assert
|L27.24|
        CBNZ     r5,|L27.30|
        MOVS     r0,#4
|L27.28|
        POP      {r4-r6,pc}
|L27.30|
        LDRB     r0,[r4,#0x24]
        CMP      r0,#1
        BEQ      |L27.46|
        MOVS     r0,#0
        STR      r0,[r5,#0]
        MOVS     r0,#6
        B        |L27.28|
|L27.46|
        LDRD     r1,r0,[r4,#0x1c]
        SUBS     r0,r0,r1
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L27.28|
        ENDP

        DCW      0x0000
|L27.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L27.104|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_MasterTransferHandleIRQ||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferHandleIRQ PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L28.10|
        B        |L28.22|
|L28.10|
        MOV      r2,#0x62d
        ADR      r1,|L28.248|
        ADR      r0,|L28.292|
        BL       __aeabi_assert
|L28.22|
        LDR      r0,[r4,#0x1c]
        CMP      r0,#0
        BEQ      |L28.216|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L28.150|
        B        |L28.132|
|L28.36|
        MOV      r0,r6
        BL       DSPI_ReadData
        UXTH     r5,r0
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#0x14]
        CBZ      r0,|L28.106|
        LDR      r0,[r4,#0x1c]
        CMP      r0,#1
        BNE      |L28.76|
        LDR      r1,[r4,#0x14]
        STRB     r5,[r1,#0]
        LDR      r0,[r4,#0x1c]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x1c]
        B        |L28.126|
|L28.76|
        LDR      r1,[r4,#0x14]
        STRB     r5,[r1,#0]
        LDR      r0,[r4,#0x14]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x14]
        ASRS     r0,r5,#8
        LDR      r1,[r4,#0x14]
        STRB     r0,[r1,#0]
        LDR      r0,[r4,#0x14]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x14]
        LDR      r0,[r4,#0x1c]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x1c]
        B        |L28.126|
|L28.106|
        LDR      r0,[r4,#0x1c]
        CMP      r0,#1
        BNE      |L28.120|
        LDR      r0,[r4,#0x1c]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x1c]
        B        |L28.126|
|L28.120|
        LDR      r0,[r4,#0x1c]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x1c]
|L28.126|
        LDR      r0,[r4,#0x1c]
        CBNZ     r0,|L28.132|
        B        |L28.148|
|L28.132|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BEQ      |L28.36|
|L28.148|
        B        |L28.214|
|L28.150|
        B        |L28.196|
|L28.152|
        MOV      r0,r6
        BL       DSPI_ReadData
        UXTH     r5,r0
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#0x14]
        CBZ      r0,|L28.184|
        LDR      r1,[r4,#0x14]
        STRB     r5,[r1,#0]
        LDR      r0,[r4,#0x14]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x14]
|L28.184|
        LDR      r0,[r4,#0x1c]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x1c]
        LDR      r0,[r4,#0x1c]
        CBNZ     r0,|L28.196|
        B        |L28.212|
|L28.196|
        MOV      r0,r6
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BEQ      |L28.152|
|L28.212|
        NOP      
|L28.214|
        NOP      
|L28.216|
        LDR      r0,[r4,#0x18]
        CBZ      r0,|L28.228|
        MOV      r1,r4
        MOV      r0,r6
        BL       DSPI_MasterTransferFillUpTxFifo
|L28.228|
        LDR      r0,[r4,#0x18]
        CBNZ     r0,|L28.244|
        LDR      r0,[r4,#0x1c]
        CBNZ     r0,|L28.244|
        MOV      r1,r4
        MOV      r0,r6
        BL       DSPI_MasterTransferComplete
|L28.244|
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L28.248|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L28.292|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_MasterTransferNonBlocking||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferNonBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r6,r2
        CBZ      r4,|L29.14|
        B        |L29.26|
|L29.14|
        MOV      r2,#0x4a6
        ADR      r1,|L29.208|
        ADR      r0,|L29.252|
        BL       __aeabi_assert
|L29.26|
        CBZ      r6,|L29.30|
        B        |L29.42|
|L29.30|
        MOV      r2,#0x4a7
        ADR      r1,|L29.208|
        ADR      r0,|L29.268|
        BL       __aeabi_assert
|L29.42|
        LDR      r0,[r6,#8]
        CBNZ     r0,|L29.52|
        MOVS     r0,#4
|L29.48|
        POP      {r4-r8,pc}
|L29.52|
        LDRB     r0,[r4,#0x24]
        CMP      r0,#1
        BNE      |L29.66|
        MOV      r0,#0x258
        B        |L29.48|
|L29.66|
        MOVS     r0,#1
        STRB     r0,[r4,#0x24]
        MOV      r0,r7
        BL       DSPI_GetInstance
        LDR      r1,|L29.288|
        LDRSB    r5,[r1,r0]
        CMN      r5,#0x80
        BNE      |L29.90|
        B        |L29.148|
|L29.90|
        MOV      r0,r5
        CMP      r0,#0
        BLT      |L29.144|
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L29.292|
        LSRS     r3,r0,#5
        STR      r1,[r2,r3,LSL #2]
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
|L29.144|
        NOP      
        NOP      
|L29.148|
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r7
        BL       DSPI_MasterTransferPrepare
        LDR      r0,|L29.296|
        LDR      r1,|L29.300|
        STR      r0,[r1,#0]  ; s_dspiMasterIsr
        MOV      r1,#0x20000
        MOV      r0,r7
        BL       DSPI_EnableInterrupts
        MOV      r0,r7
        BL       DSPI_StartTransfer
        MOV      r1,r4
        MOV      r0,r7
        BL       DSPI_MasterTransferFillUpTxFifo
        MOV      r0,r7
        BL       DSPI_GetInstance
        LDR      r1,|L29.288|
        LDRSB    r5,[r1,r0]
        MOV      r0,r5
        BL       EnableIRQ
        MOVS     r0,#0
        B        |L29.48|
        ENDP

|L29.208|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L29.252|
        DCB      "NULL != handle",0
        DCB      0
|L29.268|
        DCB      "NULL != transfer",0
        DCB      0
        DCB      0
        DCB      0
|L29.288|
        DCD      s_dspiIRQ
|L29.292|
        DCD      0xe000e180
|L29.296|
        DCD      DSPI_MasterTransferHandleIRQ
|L29.300|
        DCD      s_dspiMasterIsr

        AREA ||i.DSPI_MasterTransferPrepare||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferPrepare PROC
        PUSH     {r2-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L30.14|
        B        |L30.26|
|L30.14|
        MOV      r2,#0x46e
        ADR      r1,|L30.272|
        ADR      r0,|L30.316|
        BL       __aeabi_assert
|L30.26|
        CBZ      r5,|L30.30|
        B        |L30.42|
|L30.30|
        MOV      r2,#0x46f
        ADR      r1,|L30.272|
        ADR      r0,|L30.332|
        BL       __aeabi_assert
|L30.42|
        MOVS     r7,#0
        LDR      r1,|L30.352|
        LDM      r1,{r0,r1}
        STRD     r0,r1,[sp,#0]
        MOV      r0,r6
        BL       DSPI_StopTransfer
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       DSPI_FlushFifo
        LDR      r1,|L30.356|
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDRB     r0,[r5,#0xc]
        UBFX     r1,r0,#4,#4
        MOVS     r0,#1
        LSLS     r0,r0,r1
        UXTB     r0,r0
        STRB     r0,[sp,#2]
        MOVS     r0,#0
        STRB     r0,[sp,#3]
        STRB     r0,[sp,#4]
        LDRB     r0,[r5,#0xc]
        AND      r0,r0,#0xf
        STRB     r0,[sp,#1]
        LDR      r0,[r5,#0xc]
        AND      r0,r0,#0x100000
        CBZ      r0,|L30.124|
        MOVS     r0,#1
        B        |L30.126|
|L30.124|
        MOVS     r0,#0
|L30.126|
        STRB     r0,[sp,#0]
        MOV      r0,sp
        BL       DSPI_MasterGetFormattedCommand
        STR      r0,[r4,#4]
        MOVS     r0,#1
        STRB     r0,[sp,#3]
        LDR      r0,[r5,#0xc]
        AND      r0,r0,#0x200000
        CBZ      r0,|L30.156|
        MOVS     r0,#1
        B        |L30.158|
|L30.156|
        MOVS     r0,#0
|L30.158|
        STRB     r0,[sp,#0]
        MOV      r0,sp
        BL       DSPI_MasterGetFormattedCommand
        STR      r0,[r4,#8]
        LDRB     r1,[sp,#1]
        ADD      r0,r6,#0xc
        LDR      r0,[r0,r1,LSL #2]
        UBFX     r0,r0,#27,#4
        ADDS     r0,r0,#1
        STR      r0,[r4,#0]
        LDR      r7,[r6,#0]
        AND      r0,r7,#0x1000
        CBNZ     r0,|L30.204|
        AND      r0,r7,#0x2000
        CBZ      r0,|L30.210|
|L30.204|
        MOVS     r0,#1
        STRB     r0,[r4,#0xc]
        B        |L30.246|
|L30.210|
        LDR      r0,|L30.360|
        CMP      r6,r0
        BNE      |L30.220|
        MOVS     r0,#4
        B        |L30.244|
|L30.220|
        LDR      r0,|L30.364|
        CMP      r6,r0
        BNE      |L30.230|
        MOVS     r0,#1
        B        |L30.244|
|L30.230|
        LDR      r0,|L30.368|
        CMP      r6,r0
        BNE      |L30.240|
        MOVS     r0,#1
        B        |L30.244|
|L30.240|
        MOV      r0,#0xffffffff
|L30.244|
        STRB     r0,[r4,#0xc]
|L30.246|
        LDR      r0,[r5,#0]
        STR      r0,[r4,#0x10]
        LDR      r0,[r5,#4]
        STR      r0,[r4,#0x14]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x18]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x1c]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x20]
        POP      {r2-r8,pc}
        ENDP

        DCW      0x0000
|L30.272|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L30.316|
        DCB      "NULL != handle",0
        DCB      0
|L30.332|
        DCB      "NULL != transfer",0
        DCB      0
        DCB      0
        DCB      0
|L30.352|
        DCD      ||.constdata||+0xbc
|L30.356|
        DCD      0xda0a0000
|L30.360|
        DCD      0x4002c000
|L30.364|
        DCD      0x4002d000
|L30.368|
        DCD      0x400ac000

        AREA ||i.DSPI_MasterWriteCommandDataBlocking||, CODE, READONLY, ALIGN=1

DSPI_MasterWriteCommandDataBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,#0x80000000
        MOV      r0,r4
        BL       DSPI_ClearStatusFlags
        B        |L31.28|
|L31.18|
        MOV      r1,#0x2000000
        MOV      r0,r4
        BL       DSPI_ClearStatusFlags
|L31.28|
        MOV      r0,r4
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L31.18|
        STR      r5,[r4,#0x34]
        MOV      r1,#0x2000000
        MOV      r0,r4
        BL       DSPI_ClearStatusFlags
        NOP      
|L31.56|
        MOV      r0,r4
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x80000000
        CMP      r0,#0
        BEQ      |L31.56|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DSPI_MasterWriteDataBlocking||, CODE, READONLY, ALIGN=2

DSPI_MasterWriteDataBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        CBZ      r4,|L32.12|
        B        |L32.24|
|L32.12|
        MOV      r2,#0x2af
        ADR      r1,|L32.148|
        ADR      r0,|L32.192|
        BL       __aeabi_assert
|L32.24|
        MOV      r1,#0x80000000
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
        B        |L32.46|
|L32.36|
        MOV      r1,#0x2000000
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
|L32.46|
        MOV      r0,r5
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L32.36|
        LDRB     r0,[r4,#0]
        MOV      r1,#0x80000000
        AND      r0,r1,r0,LSL #31
        LDRB     r1,[r4,#1]
        MOV      r2,#0x70000000
        AND      r1,r2,r1,LSL #28
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#2]
        MOV      r2,#0x3f0000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#3]
        MOV      r2,#0x8000000
        AND      r1,r2,r1,LSL #27
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#4]
        ASRS     r2,r2,#1
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        UXTH     r1,r6
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x34]
        ASRS     r1,r2,#1
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
        NOP      
|L32.132|
        MOV      r0,r5
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x80000000
        CMP      r0,#0
        BEQ      |L32.132|
        POP      {r4-r6,pc}
        ENDP

|L32.148|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L32.192|
        DCB      "NULL != command",0

        AREA ||i.DSPI_ReadData||, CODE, READONLY, ALIGN=1

DSPI_ReadData PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x38]
        BX       lr
        ENDP


        AREA ||i.DSPI_SetDummyData||, CODE, READONLY, ALIGN=2

DSPI_SetDummyData PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r0,r5
        BL       DSPI_GetInstance
        MOV      r6,r0
        LDR      r0,|L34.20|
        STRB     r4,[r0,r6]
        POP      {r4-r6,pc}
        ENDP

|L34.20|
        DCD      g_dspiDummyData

        AREA ||i.DSPI_SetMasterSlaveMode||, CODE, READONLY, ALIGN=1

DSPI_SetMasterSlaveMode PROC
        LDR      r2,[r0,#0]
        BFI      r2,r1,#31,#1
        STR      r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.DSPI_SetOnePcsPolarity||, CODE, READONLY, ALIGN=1

DSPI_SetOnePcsPolarity PROC
        PUSH     {r4,lr}
        MOV      r3,r2
        LDR      r2,[r0,#0]
        CMP      r3,#1
        BNE      |L36.22|
        MOV      r4,#0x3f0000
        AND      r4,r4,r1,LSL #16
        ORRS     r2,r2,r4
        B        |L36.32|
|L36.22|
        MOV      r4,#0x3f0000
        AND      r4,r4,r1,LSL #16
        BICS     r2,r2,r4
|L36.32|
        STR      r2,[r0,#0]
        POP      {r4,pc}
        ENDP


        AREA ||i.DSPI_SlaveGetDefaultConfig||, CODE, READONLY, ALIGN=2

DSPI_SlaveGetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L37.8|
        B        |L37.20|
|L37.8|
        MOV      r2,#0x16a
        ADR      r1,|L37.56|
        ADR      r0,|L37.100|
        BL       __aeabi_assert
|L37.20|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STR      r0,[r4,#4]
        STR      r0,[r4,#8]
        STR      r0,[r4,#0xc]
        STRB     r0,[r4,#0]
        MOVS     r0,#8
        STR      r0,[r4,#4]
        MOVS     r1,#0
        STRB     r1,[r4,#8]
        STRB     r1,[r4,#9]
        MOVS     r0,#0
        STRB     r0,[r4,#0xc]
        STRB     r0,[r4,#0xd]
        STRB     r0,[r4,#0xe]
        STRB     r0,[r4,#0xf]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L37.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L37.100|
        DCB      "NULL != slaveConfig",0

        AREA ||i.DSPI_SlaveInit||, CODE, READONLY, ALIGN=2

DSPI_SlaveInit PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L38.12|
        B        |L38.24|
|L38.12|
        MOV      r2,#0x137
        ADR      r1,|L38.212|
        ADR      r0,|L38.256|
        BL       __aeabi_assert
|L38.24|
        MOVS     r6,#0
        MOV      r0,r5
        BL       DSPI_GetInstance
        LDR      r1,|L38.276|
        LDR      r7,[r1,r0,LSL #2]
        MOV      r0,r7
        BL       CLOCK_EnableClock
        MOVS     r1,#1
        MOV      r0,r5
        BL       DSPI_Enable
        MOV      r0,r5
        BL       DSPI_StopTransfer
        MOVS     r1,#0
        MOV      r0,r5
        BL       DSPI_SetMasterSlaveMode
        LDR      r0,[r5,#0]
        LDR      r1,|L38.280|
        AND      r6,r0,r1
        LDRB     r0,[r4,#0xc]
        MOV      r1,#0x40000000
        AND      r0,r1,r0,LSL #30
        ORRS     r0,r0,r6
        LDRB     r1,[r4,#0xe]
        MOV      r2,#0x4000000
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0xd]
        ASRS     r2,r2,#2
        AND      r1,r2,r1,LSL #24
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0xf]
        MOV      r2,#0x300
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0]
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r5
        BL       DSPI_SetOnePcsPolarity
        LDRB     r1,[r4,#0]
        ADD      r0,r5,#0xc
        LDR      r0,[r0,r1,LSL #2]
        BIC      r6,r0,#0x7f000000
        LDRB     r0,[r4,#4]
        SUBS     r0,r0,#1
        MOV      r1,#0x78000000
        AND      r0,r1,r0,LSL #27
        ORRS     r0,r0,r6
        LDRB     r1,[r4,#8]
        MOV      r2,#0x4000000
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#9]
        ASRS     r2,r2,#1
        AND      r1,r2,r1,LSL #25
        ORRS     r0,r0,r1
        LDRB     r2,[r4,#0]
        ADD      r1,r5,#0xc
        STR      r0,[r1,r2,LSL #2]
        MOVS     r1,#0
        MOV      r0,r5
        BL       DSPI_SetDummyData
        MOV      r0,r5
        BL       DSPI_StartTransfer
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L38.212|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L38.256|
        DCB      "NULL != slaveConfig",0
|L38.276|
        DCD      s_dspiClock
|L38.280|
        DCD      0xbaffccff

        AREA ||i.DSPI_SlaveTransferAbort||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferAbort PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L39.10|
        B        |L39.22|
|L39.10|
        MOV      r2,#0x7a7
        ADR      r1,|L39.48|
        ADR      r0,|L39.92|
        BL       __aeabi_assert
|L39.22|
        MOV      r0,r5
        BL       DSPI_StopTransfer
        LDR      r1,|L39.108|
        MOV      r0,r5
        BL       DSPI_DisableInterrupts
        MOVS     r0,#0
        STRB     r0,[r4,#0x1c]
        STR      r0,[r4,#0x10]
        STR      r0,[r4,#0x14]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L39.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L39.92|
        DCB      "NULL != handle",0
        DCB      0
|L39.108|
        DCD      0x0a0a0000

        AREA ||i.DSPI_SlaveTransferComplete||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferComplete PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L40.12|
        B        |L40.24|
|L40.12|
        MOV      r2,#0x77e
        ADR      r1,|L40.84|
        ADR      r0,|L40.128|
        BL       __aeabi_assert
|L40.24|
        LDR      r1,|L40.144|
        MOV      r0,r6
        BL       DSPI_DisableInterrupts
        MOVS     r0,#0
        STR      r0,[r4,#8]
        STR      r0,[r4,#0xc]
        STR      r0,[r4,#0x14]
        STR      r0,[r4,#0x10]
        MOVS     r5,#0
        LDRB     r0,[r4,#0x1c]
        CMP      r0,#2
        BNE      |L40.56|
        MOV      r5,#0x259
        B        |L40.58|
|L40.56|
        MOVS     r5,#0
|L40.58|
        MOVS     r0,#0
        STRB     r0,[r4,#0x1c]
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L40.78|
        MOV      r2,r5
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r7,r3,[r4,#0x24]
        BLX      r7
|L40.78|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L40.84|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L40.128|
        DCB      "NULL != handle",0
        DCB      0
|L40.144|
        DCD      0x0a0a0000

        AREA ||i.DSPI_SlaveTransferCreateHandle||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferCreateHandle PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        MOV      r6,r3
        CBZ      r4,|L41.16|
        B        |L41.28|
|L41.16|
        MOV      r2,#0x6ab
        ADR      r1,|L41.56|
        ADR      r0,|L41.100|
        BL       __aeabi_assert
|L41.28|
        MOVS     r1,#0x2c
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOV      r0,r7
        BL       DSPI_GetInstance
        LDR      r1,|L41.116|
        STR      r4,[r1,r0,LSL #2]
        STR      r5,[r4,#0x24]
        STR      r6,[r4,#0x28]
        POP      {r4-r8,pc}
        ENDP

|L41.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L41.100|
        DCB      "NULL != handle",0
        DCB      0
|L41.116|
        DCD      g_dspiHandle

        AREA ||i.DSPI_SlaveTransferFillUpTxFifo||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferFillUpTxFifo PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        CBZ      r4,|L42.12|
        B        |L42.24|
|L42.12|
        MOV      r2,#0x726
        ADR      r1,|L42.192|
        ADR      r0,|L42.236|
        BL       __aeabi_assert
|L42.24|
        MOVS     r6,#0
        MOV      r0,r7
        BL       DSPI_GetDummyDataInstance
        MOV      r5,r0
        B        |L42.168|
|L42.36|
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BEQ      |L42.154|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L42.74|
        LDR      r0,[r4,#8]
        CBZ      r0,|L42.64|
        LDR      r0,[r4,#8]
        LDRB     r6,[r0,#0]
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
        B        |L42.66|
|L42.64|
        MOV      r6,r5
|L42.66|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L42.156|
|L42.74|
        LDR      r0,[r4,#8]
        CBZ      r0,|L42.128|
        LDR      r0,[r4,#8]
        LDRB     r6,[r0,#0]
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x10]
        CMP      r0,#1
        BNE      |L42.106|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        ORR      r6,r6,r5,LSL #8
        B        |L42.156|
|L42.106|
        LDR      r0,[r4,#8]
        LDRB     r0,[r0,#0]
        ORR      r6,r6,r0,LSL #8
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x10]
        B        |L42.156|
|L42.128|
        LDR      r0,[r4,#0x10]
        CMP      r0,#1
        BNE      |L42.142|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L42.148|
|L42.142|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x10]
|L42.148|
        ORR      r6,r5,r5,LSL #8
        B        |L42.156|
|L42.154|
        B        |L42.184|
|L42.156|
        STR      r6,[r7,#0x34]
        MOV      r1,#0x2000000
        MOV      r0,r7
        BL       DSPI_ClearStatusFlags
|L42.168|
        MOV      r0,r7
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0x2000000
        BEQ      |L42.36|
|L42.184|
        NOP      
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L42.192|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L42.236|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_SlaveTransferGetCount||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferGetCount PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L43.12|
        B        |L43.24|
|L43.12|
        MOV      r2,#0x712
        ADR      r1,|L43.56|
        ADR      r0,|L43.100|
        BL       __aeabi_assert
|L43.24|
        CBNZ     r5,|L43.30|
        MOVS     r0,#4
|L43.28|
        POP      {r4-r6,pc}
|L43.30|
        LDRB     r0,[r4,#0x1c]
        CMP      r0,#1
        BEQ      |L43.44|
        MOVS     r0,#0
        STR      r0,[r5,#0]
        MOVS     r0,#6
        B        |L43.28|
|L43.44|
        LDRD     r1,r0,[r4,#0x14]
        SUBS     r0,r0,r1
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L43.28|
        ENDP

|L43.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L43.100|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_SlaveTransferHandleIRQ||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferHandleIRQ PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L44.12|
        B        |L44.24|
|L44.12|
        MOV      r2,#0x7bf
        ADR      r1,|L44.436|
        ADR      r0,|L44.480|
        BL       __aeabi_assert
|L44.24|
        MOV      r0,r5
        BL       DSPI_GetDummyDataInstance
        MOV      r6,r0
        MOVS     r7,#0
        MOV      r9,r7
        LDR      r0,[r4,#0x14]
        CMP      r0,#0
        BEQ      |L44.292|
        B        |L44.294|
|L44.44|
        LDR      r8,[r5,#0x38]
        MOV      r1,#0x20000
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L44.120|
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L44.80|
        LDR      r1,[r4,#0xc]
        STRB     r8,[r1,#0]
        LDR      r0,[r4,#0xc]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0xc]
|L44.80|
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x14]
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BEQ      |L44.276|
        LDR      r0,[r4,#8]
        CBZ      r0,|L44.108|
        LDR      r0,[r4,#8]
        LDRB     r7,[r0,#0]
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
        B        |L44.110|
|L44.108|
        MOV      r7,r6
|L44.110|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        STR      r7,[r5,#0x34]
        B        |L44.276|
|L44.120|
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L44.172|
        LDR      r1,[r4,#0xc]
        STRB     r8,[r1,#0]
        LDR      r0,[r4,#0xc]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0xc]
        LDR      r0,[r4,#0x14]
        CMP      r0,#1
        BNE      |L44.150|
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x14]
        B        |L44.192|
|L44.150|
        LSR      r0,r8,#8
        LDR      r1,[r4,#0xc]
        STRB     r0,[r1,#0]
        LDR      r0,[r4,#0xc]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0xc]
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x14]
        B        |L44.192|
|L44.172|
        LDR      r0,[r4,#0x14]
        CMP      r0,#1
        BNE      |L44.186|
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x14]
        B        |L44.192|
|L44.186|
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x14]
|L44.192|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L44.276|
        LDR      r0,[r4,#8]
        CBZ      r0,|L44.250|
        LDR      r0,[r4,#8]
        LDRB     r7,[r0,#0]
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x10]
        CMP      r0,#1
        BNE      |L44.228|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        ORR      r7,r7,r6,LSL #8
        B        |L44.274|
|L44.228|
        LDR      r0,[r4,#8]
        LDRB     r0,[r0,#0]
        ORR      r7,r7,r0,LSL #8
        LDR      r0,[r4,#8]
        ADDS     r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x10]
        B        |L44.274|
|L44.250|
        LDR      r0,[r4,#0x10]
        CMP      r0,#1
        BNE      |L44.264|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L44.270|
|L44.264|
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,#2
        STR      r0,[r4,#0x10]
|L44.270|
        ORR      r7,r6,r6,LSL #8
|L44.274|
        STR      r7,[r5,#0x34]
|L44.276|
        MOV      r1,#0x2000000
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#0x14]
        CBNZ     r0,|L44.294|
        B        |L44.312|
|L44.292|
        B        |L44.314|
|L44.294|
        MOV      r0,r5
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BEQ      |L44.44|
|L44.312|
        NOP      
|L44.314|
        LDR      r9,[r4,#0x14]
        LDRB     r0,[r4,#0x1c]
        CMP      r0,#2
        BEQ      |L44.330|
        CMP      r9,#0
        BNE      |L44.342|
|L44.330|
        MOV      r1,r4
        MOV      r0,r5
        BL       DSPI_SlaveTransferComplete
|L44.338|
        POP      {r4-r10,pc}
|L44.342|
        MOV      r0,r5
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x8000000
        CBZ      r0,|L44.386|
        LDR      r0,[r5,#0x30]
        AND      r0,r0,#0x8000000
        CBZ      r0,|L44.386|
        MOV      r1,#0x8000000
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#8]
        CBZ      r0,|L44.380|
        MOVS     r0,#2
        STRB     r0,[r4,#0x1c]
|L44.380|
        LDR      r0,[r4,#0x20]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x20]
|L44.386|
        MOV      r0,r5
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x80000
        CBZ      r0,|L44.430|
        LDR      r0,[r5,#0x30]
        AND      r0,r0,#0x80000
        CBZ      r0,|L44.430|
        MOV      r1,#0x80000
        MOV      r0,r5
        BL       DSPI_ClearStatusFlags
        LDR      r0,[r4,#8]
        CBZ      r0,|L44.424|
        MOVS     r0,#2
        STRB     r0,[r4,#0x1c]
|L44.424|
        LDR      r0,[r4,#0x20]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x20]
|L44.430|
        NOP      
        B        |L44.338|
        ENDP

        DCW      0x0000
|L44.436|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L44.480|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_SlaveTransferNonBlocking||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferNonBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L45.14|
        B        |L45.26|
|L45.14|
        MOV      r2,#0x6c3
        ADR      r1,|L45.232|
        ADR      r0,|L45.276|
        BL       __aeabi_assert
|L45.26|
        CBZ      r5,|L45.30|
        B        |L45.42|
|L45.30|
        MOV      r2,#0x6c4
        ADR      r1,|L45.232|
        ADR      r0,|L45.292|
        BL       __aeabi_assert
|L45.42|
        LDR      r0,[r5,#8]
        CBNZ     r0,|L45.52|
        MOVS     r0,#4
|L45.48|
        POP      {r4-r8,pc}
|L45.52|
        LDR      r0,[r5,#0]
        CBNZ     r0,|L45.64|
        LDR      r0,[r5,#4]
        CBNZ     r0,|L45.64|
        MOVS     r0,#4
        B        |L45.48|
|L45.64|
        LDRB     r0,[r4,#0x1c]
        CMP      r0,#1
        BNE      |L45.76|
        MOV      r0,#0x258
        B        |L45.48|
|L45.76|
        MOVS     r0,#1
        STRB     r0,[r4,#0x1c]
        MOV      r0,r6
        BL       DSPI_GetInstance
        LDR      r1,|L45.312|
        LDRSB    r8,[r1,r0]
        MOV      r0,r8
        BL       EnableIRQ
        LDR      r0,[r5,#0]
        STR      r0,[r4,#8]
        LDR      r0,[r5,#4]
        STR      r0,[r4,#0xc]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x10]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x14]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x18]
        MOVS     r0,#0
        STR      r0,[r4,#0x20]
        LDRB     r0,[r5,#0xc]
        AND      r7,r0,#7
        ADD      r0,r6,#0xc
        LDR      r0,[r0,r7,LSL #2]
        UBFX     r0,r0,#27,#4
        ADDS     r0,r0,#1
        STR      r0,[r4,#0]
        MOV      r0,r6
        BL       DSPI_StopTransfer
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       DSPI_FlushFifo
        LDR      r1,|L45.316|
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDR      r0,|L45.320|
        LDR      r1,|L45.324|
        STR      r0,[r1,#0]  ; s_dspiSlaveIsr
        MOV      r1,#0x20000
        MOV      r0,r6
        BL       DSPI_EnableInterrupts
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L45.198|
        MOV      r1,#0x80000
        MOV      r0,r6
        BL       DSPI_EnableInterrupts
|L45.198|
        LDR      r0,[r4,#8]
        CBZ      r0,|L45.212|
        MOV      r1,#0x8000000
        MOV      r0,r6
        BL       DSPI_EnableInterrupts
|L45.212|
        MOV      r0,r6
        BL       DSPI_StartTransfer
        MOV      r1,r4
        MOV      r0,r6
        BL       DSPI_SlaveTransferFillUpTxFifo
        MOVS     r0,#0
        B        |L45.48|
        ENDP

        DCW      0x0000
|L45.232|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L45.276|
        DCB      "NULL != handle",0
        DCB      0
|L45.292|
        DCB      "NULL != transfer",0
        DCB      0
        DCB      0
        DCB      0
|L45.312|
        DCD      s_dspiIRQ
|L45.316|
        DCD      0xda0a0000
|L45.320|
        DCD      DSPI_SlaveTransferHandleIRQ
|L45.324|
        DCD      s_dspiSlaveIsr

        AREA ||i.DSPI_SlaveWriteDataBlocking||, CODE, READONLY, ALIGN=1

DSPI_SlaveWriteDataBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,#0x80000000
        MOV      r0,r4
        BL       DSPI_ClearStatusFlags
        B        |L46.28|
|L46.18|
        MOV      r1,#0x2000000
        MOV      r0,r4
        BL       DSPI_ClearStatusFlags
|L46.28|
        MOV      r0,r4
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x2000000
        CMP      r0,#0
        BEQ      |L46.18|
        STR      r5,[r4,#0x34]
        MOV      r1,#0x2000000
        MOV      r0,r4
        BL       DSPI_ClearStatusFlags
        NOP      
|L46.56|
        MOV      r0,r4
        BL       DSPI_GetStatusFlags
        AND      r0,r0,#0x80000000
        CMP      r0,#0
        BEQ      |L46.56|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.DSPI_StartTransfer||, CODE, READONLY, ALIGN=1

DSPI_StartTransfer PROC
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.DSPI_StopTransfer||, CODE, READONLY, ALIGN=1

DSPI_StopTransfer PROC
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.EnableIRQ||, CODE, READONLY, ALIGN=1

EnableIRQ PROC
        MOV      r1,r0
        CMN      r1,#0x80
        BNE      |L49.12|
        MOVS     r0,#1
|L49.10|
        BX       lr
|L49.12|
        MOV      r0,r1
        CMP      r0,#0
        BLT      |L49.38|
        AND      r3,r0,#0x1f
        MOVS     r2,#1
        LSLS     r2,r2,r3
        LSRS     r3,r0,#5
        LSLS     r3,r3,#2
        ADD      r3,r3,#0xe000e000
        STR      r2,[r3,#0x100]
|L49.38|
        NOP      
        MOVS     r0,#0
        B        |L49.10|
        ENDP


        AREA ||i.SPI0_DriverIRQHandler||, CODE, READONLY, ALIGN=2

SPI0_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L50.36|
        LDR      r0,[r0,#0]  ; g_dspiHandle
        CBZ      r0,|L50.10|
        B        |L50.22|
|L50.10|
        MOV      r2,#0x884
        ADR      r1,|L50.40|
        ADR      r0,|L50.84|
        BL       __aeabi_assert
|L50.22|
        LDR      r0,|L50.36|
        LDR      r1,[r0,#0]  ; g_dspiHandle
        LDR      r0,|L50.108|
        BL       DSPI_CommonIRQHandler
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L50.36|
        DCD      g_dspiHandle
|L50.40|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L50.84|
        DCB      "NULL != g_dspiHandle[0]",0
|L50.108|
        DCD      0x4002c000

        AREA ||i.SPI1_DriverIRQHandler||, CODE, READONLY, ALIGN=2

SPI1_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L51.36|
        LDR      r0,[r0,#4]  ; g_dspiHandle
        CBZ      r0,|L51.10|
        B        |L51.22|
|L51.10|
        MOV      r2,#0x88c
        ADR      r1,|L51.40|
        ADR      r0,|L51.84|
        BL       __aeabi_assert
|L51.22|
        LDR      r0,|L51.36|
        LDR      r1,[r0,#4]  ; g_dspiHandle
        LDR      r0,|L51.108|
        BL       DSPI_CommonIRQHandler
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L51.36|
        DCD      g_dspiHandle
|L51.40|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L51.84|
        DCB      "NULL != g_dspiHandle[1]",0
|L51.108|
        DCD      0x4002d000

        AREA ||i.SPI2_DriverIRQHandler||, CODE, READONLY, ALIGN=2

SPI2_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L52.36|
        LDR      r0,[r0,#8]  ; g_dspiHandle
        CBZ      r0,|L52.10|
        B        |L52.22|
|L52.10|
        MOV      r2,#0x894
        ADR      r1,|L52.40|
        ADR      r0,|L52.84|
        BL       __aeabi_assert
|L52.22|
        LDR      r0,|L52.36|
        LDR      r1,[r0,#8]  ; g_dspiHandle
        LDR      r0,|L52.108|
        BL       DSPI_CommonIRQHandler
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L52.36|
        DCD      g_dspiHandle
|L52.40|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c",0
        DCB      0
        DCB      0
        DCB      0
|L52.84|
        DCB      "NULL != g_dspiHandle[2]",0
|L52.108|
        DCD      0x400ac000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

g_dspiHandle
        %        12

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_baudratePrescaler
        DCD      0x00000002
        DCD      0x00000003
        DCD      0x00000005
        DCD      0x00000007
s_baudrateScaler
        DCD      0x00000002
        DCD      0x00000004
        DCD      0x00000006
        DCD      0x00000008
        DCD      0x00000010
        DCD      0x00000020
        DCD      0x00000040
        DCD      0x00000080
        DCD      0x00000100
        DCD      0x00000200
        DCD      0x00000400
        DCD      0x00000800
        DCD      0x00001000
        DCD      0x00002000
        DCD      0x00004000
        DCD      0x00008000
s_delayPrescaler
        DCD      0x00000001
        DCD      0x00000003
        DCD      0x00000005
        DCD      0x00000007
s_delayScaler
        DCD      0x00000002
        DCD      0x00000004
        DCD      0x00000008
        DCD      0x00000010
        DCD      0x00000020
        DCD      0x00000040
        DCD      0x00000080
        DCD      0x00000100
        DCD      0x00000200
        DCD      0x00000400
        DCD      0x00000800
        DCD      0x00001000
        DCD      0x00002000
        DCD      0x00004000
        DCD      0x00008000
        DCD      0x00010000
s_dspiBases
        DCD      0x4002c000
        DCD      0x4002d000
        DCD      0x400ac000
s_dspiIRQ
        DCB      0x1a,0x1b,0x41,0x00
s_dspiClock
        DCD      0x103c000c
        DCD      0x103c000d
        DCD      0x1030000c
        DCB      0x00,0x00,0x01,0x00
        DCB      0x00

        AREA ||.data||, DATA, ALIGN=2

s_dspiMasterIsr
        DCD      0x00000000
s_dspiSlaveIsr
        DCD      0x00000000
g_dspiDummyData
        DCB      0x00,0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_dspi_c_d0bf5551____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_fsl_dspi_c_d0bf5551____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_dspi_c_d0bf5551____REVSH|
#line 483
|__asm___10_fsl_dspi_c_d0bf5551____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_dspi_c_d0bf5551____RRX|
#line 670
|__asm___10_fsl_dspi_c_d0bf5551____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT DSPI_Deinit [CODE]
        EXPORT DSPI_EnableInterrupts [CODE]
        EXPORT DSPI_GetDefaultDataCommandConfig [CODE]
        EXPORT DSPI_GetDummyDataInstance [CODE]
        EXPORT DSPI_GetInstance [CODE]
        EXPORT DSPI_MasterGetDefaultConfig [CODE]
        EXPORT DSPI_MasterHalfDuplexTransferBlocking [CODE]
        EXPORT DSPI_MasterHalfDuplexTransferNonBlocking [CODE]
        EXPORT DSPI_MasterInit [CODE]
        EXPORT DSPI_MasterSetBaudRate [CODE]
        EXPORT DSPI_MasterSetDelayScaler [CODE]
        EXPORT DSPI_MasterSetDelayTimes [CODE]
        EXPORT DSPI_MasterTransferAbort [CODE]
        EXPORT DSPI_MasterTransferBlocking [CODE]
        EXPORT DSPI_MasterTransferCreateHandle [CODE]
        EXPORT DSPI_MasterTransferGetCount [CODE]
        EXPORT DSPI_MasterTransferHandleIRQ [CODE]
        EXPORT DSPI_MasterTransferNonBlocking [CODE]
        EXPORT DSPI_MasterWriteCommandDataBlocking [CODE]
        EXPORT DSPI_MasterWriteDataBlocking [CODE]
        EXPORT DSPI_SetDummyData [CODE]
        EXPORT DSPI_SlaveGetDefaultConfig [CODE]
        EXPORT DSPI_SlaveInit [CODE]
        EXPORT DSPI_SlaveTransferAbort [CODE]
        EXPORT DSPI_SlaveTransferCreateHandle [CODE]
        EXPORT DSPI_SlaveTransferGetCount [CODE]
        EXPORT DSPI_SlaveTransferHandleIRQ [CODE]
        EXPORT DSPI_SlaveTransferNonBlocking [CODE]
        EXPORT DSPI_SlaveWriteDataBlocking [CODE]
        EXPORT SPI0_DriverIRQHandler [CODE]
        EXPORT SPI1_DriverIRQHandler [CODE]
        EXPORT SPI2_DriverIRQHandler [CODE]
        EXPORT g_dspiDummyData [DATA,SIZE=3]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT __aeabi_memclr4 [CODE]

        KEEP CLOCK_EnableClock
        KEEP DSPI_ClearStatusFlags
        KEEP DSPI_CommonIRQHandler
        KEEP DSPI_DisableInterrupts
        KEEP DSPI_Enable
        KEEP DSPI_FlushFifo
        KEEP DSPI_GetStatusFlags
        KEEP DSPI_IsMaster
        KEEP DSPI_MasterGetFormattedCommand
        KEEP DSPI_MasterTransferComplete
        KEEP DSPI_MasterTransferFillUpTxFifo
        KEEP DSPI_MasterTransferPrepare
        KEEP DSPI_ReadData
        KEEP DSPI_SetMasterSlaveMode
        KEEP DSPI_SetOnePcsPolarity
        KEEP DSPI_SlaveTransferComplete
        KEEP DSPI_SlaveTransferFillUpTxFifo
        KEEP DSPI_StartTransfer
        KEEP DSPI_StopTransfer
        KEEP EnableIRQ
        KEEP g_dspiHandle
        KEEP s_baudratePrescaler
        KEEP s_baudrateScaler
        KEEP s_delayPrescaler
        KEEP s_delayScaler
        KEEP s_dspiBases
        KEEP s_dspiIRQ
        KEEP s_dspiClock
        KEEP s_dspiMasterIsr
        KEEP s_dspiSlaveIsr

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
