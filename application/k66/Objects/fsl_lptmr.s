; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_lptmr.o --depend=.\objects\fsl_lptmr.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_lptmr.crf ..\..\devices\MK66F18\drivers\fsl_lptmr.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.LPTMR_Deinit||, CODE, READONLY, ALIGN=2

LPTMR_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        BIC      r0,r0,#1
        STR      r0,[r4,#0]
        MOV      r0,r4
        BL       LPTMR_GetInstance
        MOV      r5,r0
        LDR      r1,|L1.48|
        LDR      r0,[r1,r5,LSL #2]
        LDR      r2,|L1.52|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        BICS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L1.48|
        DCD      s_lptmrClocks
|L1.52|
        DCD      0x40047000

        AREA ||i.LPTMR_GetDefaultConfig||, CODE, READONLY, ALIGN=2

LPTMR_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L2.8|
        B        |L2.18|
|L2.8|
        MOVS     r2,#0x95
        ADR      r1,|L2.48|
        ADR      r0,|L2.92|
        BL       __aeabi_assert
|L2.18|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STRH     r0,[r4,#4]
        STRB     r0,[r4,#6]
        STRB     r0,[r4,#0]
        STRB     r0,[r4,#1]
        STRB     r0,[r4,#2]
        STRB     r0,[r4,#3]
        MOVS     r0,#1
        STRB     r0,[r4,#4]
        STRB     r0,[r4,#5]
        MOVS     r0,#0
        STRB     r0,[r4,#6]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L2.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lptmr.c",0
        DCB      0
        DCB      0
|L2.92|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.LPTMR_GetInstance||, CODE, READONLY, ALIGN=2

LPTMR_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L3.22|
|L3.8|
        LDR      r0,|L3.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L3.20|
        B        |L3.26|
|L3.20|
        ADDS     r4,r4,#1
|L3.22|
        CMP      r4,#0
        BEQ      |L3.8|
|L3.26|
        NOP      
        CBNZ     r4,|L3.32|
        B        |L3.42|
|L3.32|
        MOVS     r2,#0x42
        ADR      r1,|L3.52|
        ADR      r0,|L3.96|
        BL       __aeabi_assert
|L3.42|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.48|
        DCD      s_lptmrBases
|L3.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lptmr.c",0
        DCB      0
        DCB      0
|L3.96|
        DCB      "instance < ARRAY_SIZE(s_lptmrBases)",0

        AREA ||i.LPTMR_Init||, CODE, READONLY, ALIGN=2

LPTMR_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L4.10|
        B        |L4.20|
|L4.10|
        MOVS     r2,#0x52
        ADR      r1,|L4.124|
        ADR      r0,|L4.168|
        BL       __aeabi_assert
|L4.20|
        MOV      r0,r5
        BL       LPTMR_GetInstance
        MOV      r6,r0
        LDR      r1,|L4.184|
        LDR      r0,[r1,r6,LSL #2]
        LDR      r2,|L4.188|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        LDRB     r0,[r4,#0]
        MOVS     r1,#2
        AND      r0,r1,r0,LSL #1
        LDRB     r1,[r4,#3]
        MOVS     r2,#4
        AND      r1,r2,r1,LSL #2
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#2]
        MOVS     r2,#8
        AND      r1,r2,r1,LSL #3
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#1]
        MOVS     r2,#0x30
        AND      r1,r2,r1,LSL #4
        ORRS     r0,r0,r1
        STR      r0,[r5,#0]
        LDRB     r0,[r4,#6]
        MOVS     r1,#0x78
        AND      r0,r1,r0,LSL #3
        LDRB     r1,[r4,#4]
        MOVS     r2,#4
        AND      r1,r2,r1,LSL #2
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#5]
        AND      r1,r1,#3
        ORRS     r0,r0,r1
        STR      r0,[r5,#4]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L4.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lptmr.c",0
        DCB      0
        DCB      0
|L4.168|
        DCB      "NULL != config",0
        DCB      0
|L4.184|
        DCD      s_lptmrClocks
|L4.188|
        DCD      0x40047000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_lptmrBases
        DCD      0x40040000
s_lptmrClocks
        DCD      0x10380000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_lptmr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_lptmr_c_5de9421b____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_fsl_lptmr_c_5de9421b____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_lptmr_c_5de9421b____REVSH|
#line 483
|__asm___11_fsl_lptmr_c_5de9421b____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_lptmr_c_5de9421b____RRX|
#line 670
|__asm___11_fsl_lptmr_c_5de9421b____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT LPTMR_Deinit [CODE]
        EXPORT LPTMR_GetDefaultConfig [CODE]
        EXPORT LPTMR_Init [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP LPTMR_GetInstance
        KEEP s_lptmrBases
        KEEP s_lptmrClocks

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
