; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_i2c_edma.o --depend=.\objects\fsl_i2c_edma.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_i2c_edma.crf ..\..\devices\MK66F18\drivers\fsl_i2c_edma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.I2C_CheckAndClearError||, CODE, READONLY, ALIGN=1

I2C_CheckAndClearError PROC
        MOV      r2,r0
        MOVS     r0,#0
        AND      r3,r1,#0x10
        CBZ      r3,|L1.20|
        MOVS     r3,#0x10
        STRB     r3,[r2,#3]
        MOV      r0,#0x44f
        B        |L1.30|
|L1.20|
        AND      r3,r1,#1
        CBZ      r3,|L1.30|
        MOV      r0,#0x44e
|L1.30|
        BX       lr
        ENDP


        AREA ||i.I2C_EnableDMA||, CODE, READONLY, ALIGN=1

I2C_EnableDMA PROC
        CBZ      r1,|L2.12|
        LDRB     r2,[r0,#2]
        ORR      r2,r2,#1
        STRB     r2,[r0,#2]
        B        |L2.20|
|L2.12|
        LDRB     r2,[r0,#2]
        BIC      r2,r2,#1
        STRB     r2,[r0,#2]
|L2.20|
        BX       lr
        ENDP


        AREA ||i.I2C_InitTransferStateMachineEDMA||, CODE, READONLY, ALIGN=2

I2C_InitTransferStateMachineEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        CBZ      r4,|L3.14|
        B        |L3.24|
|L3.14|
        MOVS     r2,#0xc6
        ADR      r1,|L3.384|
        ADR      r0,|L3.432|
        BL       __aeabi_assert
|L3.24|
        CBZ      r6,|L3.28|
        B        |L3.38|
|L3.28|
        MOVS     r2,#0xc7
        ADR      r1,|L3.384|
        ADR      r0,|L3.448|
        BL       __aeabi_assert
|L3.38|
        MOVS     r7,#0
        LDRB     r0,[r4,#0x1d]
        CBZ      r0,|L3.52|
        MOV      r0,#0x44c
|L3.48|
        POP      {r4-r8,pc}
|L3.52|
        LDRB     r8,[r6,#5]
        LDM      r6,{r0-r3}
        STM      r4,{r0-r3}
        LDR      r0,[r6,#0x10]
        STR      r0,[r4,#0x10]
        LDR      r0,[r6,#0x14]
        STR      r0,[r4,#0x14]
        LDR      r0,[r6,#0x14]
        STR      r0,[r4,#0x18]
        MOVS     r0,#1
        STRB     r0,[r4,#0x1d]
        MOV      r0,r5
        MOV      r1,#0x5012
        AND      r2,r1,#0x1000
        CMP      r2,#0x1000
        BNE      |L3.106|
        LDRB     r2,[r0,#6]
        UBFX     r3,r1,#8,#8
        ORRS     r2,r2,r3
        STRB     r2,[r0,#6]
|L3.106|
        AND      r2,r1,#0x4000
        CMP      r2,#0x4000
        BNE      |L3.126|
        LDRB     r2,[r0,#6]
        UBFX     r3,r1,#8,#8
        ORRS     r2,r2,r3
        STRB     r2,[r0,#6]
|L3.126|
        STRB     r1,[r0,#3]
        NOP      
        LDRB     r0,[r6,#0xc]
        CBZ      r0,|L3.150|
        LDRB     r0,[r6,#5]
        CMP      r0,#1
        BNE      |L3.142|
        B        |L3.144|
|L3.142|
        MOVS     r0,#0
|L3.144|
        CBZ      r0,|L3.150|
        MOV      r8,#0
|L3.150|
        LDRB     r0,[r4,#0]
        AND      r0,r0,#2
        CBZ      r0,|L3.172|
        LDRB     r1,[r4,#4]
        MOV      r2,r8
        MOV      r0,r5
        BL       I2C_MasterRepeatedStart
        MOV      r7,r0
        B        |L3.184|
|L3.172|
        LDRB     r1,[r4,#4]
        MOV      r2,r8
        MOV      r0,r5
        BL       I2C_MasterStart
        MOV      r7,r0
|L3.184|
        CBZ      r7,|L3.190|
        MOV      r0,r7
        B        |L3.48|
|L3.190|
        NOP      
|L3.192|
        LDRB     r0,[r5,#3]
        AND      r0,r0,#2
        CMP      r0,#0
        BEQ      |L3.192|
        LDRB     r1,[r5,#3]
        MOV      r0,r5
        BL       I2C_CheckAndClearError
        MOV      r7,r0
        CBZ      r7,|L3.254|
        MOV      r0,#0x44e
        CMP      r7,r0
        BNE      |L3.250|
        ADDS     r7,r0,#3
        MOV      r0,r5
        BL       I2C_MasterStop
        CBZ      r0,|L3.234|
        SUBS     r7,r7,#1
|L3.234|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L3.250|
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r12,r3,[r4,#0x24]
        BLX      r12
|L3.250|
        MOV      r0,r7
        B        |L3.48|
|L3.254|
        LDRB     r0,[r4,#0xc]
        CBZ      r0,|L3.370|
        NOP      
|L3.260|
        MOVS     r0,#2
        STRB     r0,[r5,#3]
        LDRB     r0,[r4,#0xc]
        SUBS     r0,r0,#1
        STRB     r0,[r4,#0xc]
        LDRB     r1,[r4,#0xc]
        LSLS     r1,r1,#3
        LDR      r0,[r4,#8]
        LSRS     r0,r0,r1
        STRB     r0,[r5,#4]
        NOP      
|L3.282|
        LDRB     r0,[r5,#3]
        AND      r0,r0,#2
        CMP      r0,#0
        BEQ      |L3.282|
        LDRB     r1,[r5,#3]
        MOV      r0,r5
        BL       I2C_CheckAndClearError
        MOV      r7,r0
        CBZ      r7,|L3.308|
        MOV      r0,r7
        B        |L3.48|
|L3.308|
        LDRB     r0,[r4,#0xc]
        CMP      r0,#0
        BNE      |L3.260|
        LDRB     r0,[r4,#5]
        CMP      r0,#1
        BNE      |L3.372|
        MOVS     r0,#2
        STRB     r0,[r5,#3]
        LDRB     r1,[r4,#4]
        MOVS     r2,#1
        MOV      r0,r5
        BL       I2C_MasterRepeatedStart
        MOV      r7,r0
        CBZ      r7,|L3.342|
        MOV      r0,r7
        B        |L3.48|
|L3.342|
        NOP      
|L3.344|
        LDRB     r0,[r5,#3]
        AND      r0,r0,#2
        CMP      r0,#0
        BEQ      |L3.344|
        LDRB     r1,[r5,#3]
        MOV      r0,r5
        BL       I2C_CheckAndClearError
        MOV      r7,r0
        CBZ      r7,|L3.370|
        MOV      r0,r7
        B        |L3.48|
|L3.370|
        B        |L3.372|
|L3.372|
        MOVS     r0,#2
        STRB     r0,[r5,#3]
        NOP      
        MOV      r0,r7
        B        |L3.48|
        ENDP

        DCW      0x0000
|L3.384|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_i2c_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L3.432|
        DCB      "NULL != handle",0
        DCB      0
|L3.448|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.I2C_MasterCreateEDMAHandle||, CODE, READONLY, ALIGN=2

I2C_MasterCreateEDMAHandle PROC
        PUSH     {r4-r10,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r8,r2
        MOV      r9,r3
        LDR      r7,[sp,#0x20]
        CBZ      r4,|L4.18|
        B        |L4.30|
|L4.18|
        MOV      r2,#0x17e
        ADR      r1,|L4.104|
        ADR      r0,|L4.152|
        BL       __aeabi_assert
|L4.30|
        CBZ      r7,|L4.34|
        B        |L4.46|
|L4.34|
        MOV      r2,#0x17f
        ADR      r1,|L4.104|
        ADR      r0,|L4.168|
        BL       __aeabi_assert
|L4.46|
        MOV      r0,r6
        BL       I2C_GetInstance
        MOV      r5,r0
        MOVS     r1,#0x2c
        MOV      r0,r4
        BL       __aeabi_memclr4
        STR      r8,[r4,#0x24]
        STR      r9,[r4,#0x28]
        NOP      
        STR      r7,[r4,#0x20]
        LDR      r0,|L4.188|
        STR      r6,[r0,r5,LSL #3]
        ADD      r0,r0,r5,LSL #3
        STR      r4,[r0,#4]
        LDR      r0,|L4.188|
        ADD      r2,r0,r5,LSL #3
        LDR      r1,|L4.192|
        MOV      r0,r7
        BL       EDMA_SetCallback
        POP      {r4-r10,pc}
        ENDP

|L4.104|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_i2c_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L4.152|
        DCB      "NULL != handle",0
        DCB      0
|L4.168|
        DCB      "NULL != edmaHandle",0
        DCB      0
|L4.188|
        DCD      s_i2cEdmaPrivateHandle
|L4.192|
        DCD      I2C_MasterTransferCallbackEDMA

        AREA ||i.I2C_MasterTransferAbortEDMA||, CODE, READONLY, ALIGN=1

I2C_MasterTransferAbortEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r0,[r4,#0x20]
        BL       EDMA_AbortTransfer
        MOVS     r1,#0
        MOV      r0,r5
        BL       I2C_EnableDMA
        MOVS     r0,#0
        STRB     r0,[r4,#0x1d]
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.I2C_MasterTransferCallbackEDMA||, CODE, READONLY, ALIGN=1

I2C_MasterTransferCallbackEDMA PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r8,r2
        MOV      r9,r3
        MOV      r4,r5
        MOVS     r6,#0
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       I2C_EnableDMA
        LDR      r0,[r4,#4]
        LDRB     r0,[r0,#0]
        AND      r0,r0,#4
        CBNZ     r0,|L6.120|
        LDR      r0,[r4,#4]
        LDRB     r0,[r0,#5]
        CMP      r0,#1
        BNE      |L6.96|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#2]
        NOP      
|L6.56|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#3]
        AND      r0,r0,#0x80
        CMP      r0,#0
        BEQ      |L6.56|
        LDR      r0,[r4,#0]
        BL       I2C_MasterStop
        MOV      r6,r0
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#4]
        LDR      r1,[r4,#4]
        LDR      r1,[r1,#0x10]
        LDR      r2,[r4,#4]
        LDR      r2,[r2,#0x14]
        ADD      r1,r1,r2
        STRB     r0,[r1,#-1]
        B        |L6.184|
|L6.96|
        NOP      
|L6.98|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#3]
        AND      r0,r0,#0x80
        CMP      r0,#0
        BEQ      |L6.98|
        LDR      r0,[r4,#0]
        BL       I2C_MasterStop
        MOV      r6,r0
        B        |L6.184|
|L6.120|
        LDR      r0,[r4,#4]
        LDRB     r0,[r0,#5]
        CMP      r0,#1
        BNE      |L6.184|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#2]
        NOP      
|L6.142|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#3]
        AND      r0,r0,#0x80
        CMP      r0,#0
        BEQ      |L6.142|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#2]
        ORR      r0,r0,#0x10
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#2]
        LDR      r0,[r4,#0]
        LDRB     r1,[r0,#4]
        LDR      r0,[r4,#4]
        LDR      r0,[r0,#0x10]
        LDR      r2,[r4,#4]
        LDR      r2,[r2,#0x14]
        ADD      r0,r0,r2
        STRB     r1,[r0,#-1]
|L6.184|
        MOVS     r0,#0
        LDR      r1,[r4,#4]
        STRB     r0,[r1,#0x1d]
        LDR      r0,[r4,#4]
        LDR      r0,[r0,#0x24]
        CBZ      r0,|L6.212|
        LDR      r2,[r4,#4]
        MOV      r1,r2
        LDR      r3,[r2,#0x28]
        LDR      r0,[r4,#0]
        LDR      r12,[r2,#0x24]
        MOV      r2,r6
        BLX      r12
|L6.212|
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.I2C_MasterTransferEDMA||, CODE, READONLY, ALIGN=2

I2C_MasterTransferEDMA PROC
        PUSH     {r3-r9,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r8,r2
        CBZ      r5,|L7.14|
        B        |L7.26|
|L7.14|
        MOV      r2,#0x1a4
        ADR      r1,|L7.260|
        ADR      r0,|L7.308|
        BL       __aeabi_assert
|L7.26|
        CMP      r8,#0
        BEQ      |L7.34|
        B        |L7.46|
|L7.34|
        MOV      r2,#0x1a5
        ADR      r1,|L7.260|
        ADR      r0,|L7.324|
        BL       __aeabi_assert
|L7.46|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDRB     r0,[sp,#0]
        ADDS     r0,r0,#1
        UXTB     r0,r0
        STR      r0,[sp,#0]
        MOVS     r1,#0
        MOV      r0,r4
        BL       I2C_EnableDMA
        MOV      r2,r8
        MOV      r1,r5
        MOV      r0,r4
        BL       I2C_InitTransferStateMachineEDMA
        MOV      r6,r0
        CBZ      r6,|L7.110|
        MOV      r0,#0x44e
        CMP      r6,r0
        BNE      |L7.100|
        MOV      r0,r4
        BL       I2C_MasterStop
        CBZ      r0,|L7.100|
        ADDS     r6,r6,#2
|L7.100|
        MOVS     r0,#0
        STRB     r0,[r5,#0x1d]
        MOV      r0,r6
|L7.106|
        POP      {r3-r9,pc}
|L7.110|
        LDR      r0,[r5,#0x14]
        CMP      r0,#1
        BLS      |L7.168|
        MOV      r1,r5
        MOV      r0,r4
        BL       I2C_MasterTransferEDMAConfig
        LDRB     r0,[r5,#5]
        CMP      r0,#1
        BNE      |L7.152|
        LDRB     r0,[r4,#2]
        BIC      r0,r0,#0x18
        STRB     r0,[r4,#2]
        LDRB     r0,[r4,#4]
        STR      r0,[sp,#0]
        MOVS     r1,#1
        MOV      r0,r4
        BL       I2C_EnableDMA
        B        |L7.256|
|L7.152|
        MOVS     r1,#1
        MOV      r0,r4
        BL       I2C_EnableDMA
        LDR      r0,[r5,#0x10]
        LDRB     r0,[r0,#0]
        STRB     r0,[r4,#4]
        B        |L7.256|
|L7.168|
        LDRB     r0,[r5,#5]
        CMP      r0,#1
        BNE      |L7.192|
        LDRB     r7,[r4,#2]
        BIC      r7,r7,#0x10
        ORR      r7,r7,#8
        STRB     r7,[r4,#2]
        LDRB     r0,[r4,#4]
        STR      r0,[sp,#0]
        B        |L7.198|
|L7.192|
        LDR      r0,[r5,#0x10]
        LDRB     r0,[r0,#0]
        STRB     r0,[r4,#4]
|L7.198|
        NOP      
|L7.200|
        LDRB     r0,[r4,#3]
        AND      r0,r0,#2
        CMP      r0,#0
        BEQ      |L7.200|
        MOVS     r0,#2
        STRB     r0,[r4,#3]
        LDRB     r0,[r5,#0]
        AND      r0,r0,#4
        CBNZ     r0,|L7.232|
        MOV      r0,r4
        BL       I2C_MasterStop
        MOV      r6,r0
        B        |L7.240|
|L7.232|
        LDRB     r0,[r4,#2]
        ORR      r0,r0,#0x10
        STRB     r0,[r4,#2]
|L7.240|
        LDRB     r0,[r5,#5]
        CMP      r0,#1
        BNE      |L7.252|
        LDRB     r0,[r4,#4]
        LDR      r1,[r5,#0x10]
        STRB     r0,[r1,#0]
|L7.252|
        MOVS     r0,#0
        STRB     r0,[r5,#0x1d]
|L7.256|
        MOV      r0,r6
        B        |L7.106|
        ENDP

|L7.260|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_i2c_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L7.308|
        DCB      "NULL != handle",0
        DCB      0
|L7.324|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.I2C_MasterTransferEDMAConfig||, CODE, READONLY, ALIGN=1

I2C_MasterTransferEDMAConfig PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x1c
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r1,#0x18
        ADD      r0,sp,#4
        BL       __aeabi_memclr4
        LDRB     r0,[r4,#5]
        CMP      r0,#1
        BNE      |L8.62|
        NOP      
        ADDS     r0,r5,#4
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#8]
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#1
        STR      r0,[sp,#0x18]
        MOVS     r0,#0
        STRB     r0,[sp,#0xc]
        STRH     r0,[sp,#0xe]
        STRB     r0,[sp,#0xd]
        MOVS     r0,#1
        STRH     r0,[sp,#0x10]
        STR      r0,[sp,#0x14]
        B        |L8.106|
|L8.62|
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[sp,#4]
        NOP      
        ADDS     r0,r5,#4
        STR      r0,[sp,#8]
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,#1
        STR      r0,[sp,#0x18]
        MOVS     r0,#0
        STRB     r0,[sp,#0xc]
        MOVS     r0,#1
        STRH     r0,[sp,#0xe]
        MOVS     r0,#0
        STRB     r0,[sp,#0xd]
        STRH     r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0x14]
|L8.106|
        LDR      r0,[sp,#0x14]
        STRB     r0,[r4,#0x1c]
        ADD      r1,sp,#4
        LDR      r0,[r4,#0x20]
        BL       EDMA_SubmitTransfer
        LDR      r0,[r4,#0x20]
        BL       EDMA_StartTransfer
        ADD      sp,sp,#0x1c
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.I2C_MasterTransferGetCountEDMA||, CODE, READONLY, ALIGN=2

I2C_MasterTransferGetCountEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        LDR      r0,[r4,#0x20]
        CBZ      r0,|L9.14|
        B        |L9.26|
|L9.14|
        MOV      r2,#0x21f
        ADR      r1,|L9.68|
        ADR      r0,|L9.116|
        BL       __aeabi_assert
|L9.26|
        CBNZ     r5,|L9.32|
        MOVS     r0,#4
|L9.30|
        POP      {r4-r6,pc}
|L9.32|
        LDRB     r0,[r4,#0x1d]
        CBZ      r0,|L9.58|
        LDR      r2,[r4,#0x20]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_GetRemainingMajorLoopCount
        LDRB     r2,[r4,#0x1c]
        LDR      r1,[r4,#0x18]
        MLS      r0,r2,r0,r1
        STR      r0,[r5,#0]
        B        |L9.62|
|L9.58|
        LDR      r0,[r4,#0x18]
        STR      r0,[r5,#0]
|L9.62|
        MOVS     r0,#0
        B        |L9.30|
        ENDP

        DCW      0x0000
|L9.68|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_i2c_edma.c",0
        DCB      0
        DCB      0
        DCB      0
|L9.116|
        DCB      "NULL != handle->dmaHandle",0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

s_i2cEdmaPrivateHandle
        %        32

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_i2c_edma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_fsl_i2c_edma_c_d37ba620____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_fsl_i2c_edma_c_d37ba620____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_fsl_i2c_edma_c_d37ba620____REVSH|
#line 483
|__asm___14_fsl_i2c_edma_c_d37ba620____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_fsl_i2c_edma_c_d37ba620____RRX|
#line 670
|__asm___14_fsl_i2c_edma_c_d37ba620____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT I2C_MasterCreateEDMAHandle [CODE]
        EXPORT I2C_MasterTransferAbortEDMA [CODE]
        EXPORT I2C_MasterTransferEDMA [CODE]
        EXPORT I2C_MasterTransferGetCountEDMA [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT I2C_MasterStop [CODE]
        IMPORT __aeabi_assert [CODE]
        IMPORT I2C_MasterRepeatedStart [CODE]
        IMPORT I2C_MasterStart [CODE]
        IMPORT __aeabi_memclr4 [CODE]
        IMPORT EDMA_SubmitTransfer [CODE]
        IMPORT EDMA_StartTransfer [CODE]
        IMPORT I2C_GetInstance [CODE]
        IMPORT EDMA_SetCallback [CODE]
        IMPORT EDMA_GetRemainingMajorLoopCount [CODE]
        IMPORT EDMA_AbortTransfer [CODE]

        KEEP I2C_CheckAndClearError
        KEEP I2C_EnableDMA
        KEEP I2C_InitTransferStateMachineEDMA
        KEEP I2C_MasterTransferCallbackEDMA
        KEEP I2C_MasterTransferEDMAConfig
        KEEP s_i2cEdmaPrivateHandle

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
