; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_lpuart.o --depend=.\objects\fsl_lpuart.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_lpuart.crf ..\..\devices\MK66F18\drivers\fsl_lpuart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.LPUART0_DriverIRQHandler||, CODE, READONLY, ALIGN=2

LPUART0_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.32|
        LDR      r1,[r0,#0]  ; s_lpuartHandle
        LDR      r0,|L1.36|
        LDR      r2,|L1.40|
        LDR      r2,[r2,#0]  ; s_lpuartIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L1.32|
        DCD      s_lpuartHandle
|L1.36|
        DCD      0x400c4000
|L1.40|
        DCD      s_lpuartIsr

        AREA ||i.LPUART_ClearStatusFlags||, CODE, READONLY, ALIGN=2

LPUART_ClearStatusFlags PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        LDR      r3,[r5,#4]
        BIC      r3,r3,#0x80000000
        AND      r0,r4,#0x80000000
        ORRS     r3,r3,r0
        LDR      r0,|L2.64|
        ANDS     r3,r3,r0
        MVNS     r1,r0
        AND      r0,r4,r1
        ORRS     r3,r3,r0
        BIC      r3,r3,#0xc000
        AND      r0,r4,#0xc000
        ORRS     r3,r3,r0
        STR      r3,[r5,#4]
        MOV      r0,r5
        BL       LPUART_GetStatusFlags
        ANDS     r0,r0,r4
        CBZ      r0,|L2.58|
        MOV      r6,#0x51a
        B        |L2.60|
|L2.58|
        MOVS     r6,#0
|L2.60|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP

|L2.64|
        DCD      0xbfe0ffff

        AREA ||i.LPUART_Deinit||, CODE, READONLY, ALIGN=2

LPUART_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        NOP      
|L3.6|
        LDR      r0,[r4,#4]
        AND      r0,r0,#0x400000
        CMP      r0,#0
        BEQ      |L3.6|
        LDR      r5,|L3.72|
        ORR      r5,r5,#0x80000000
        ORR      r5,r5,#0xc000
        LDR      r0,[r4,#4]
        ORRS     r0,r0,r5
        STR      r0,[r4,#4]
        MOVS     r0,#0
        STR      r0,[r4,#8]
        MOV      r0,r4
        BL       LPUART_GetInstance
        MOV      r6,r0
        LDR      r1,|L3.76|
        LDR      r0,[r1,r6,LSL #2]
        LDR      r2,|L3.80|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        BICS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L3.72|
        DCD      0x401f0000
|L3.76|
        DCD      s_lpuartClock
|L3.80|
        DCD      0x40047000

        AREA ||i.LPUART_DisableInterrupts||, CODE, READONLY, ALIGN=1

LPUART_DisableInterrupts PROC
        LDR      r2,[r0,#0]
        MOV      r3,#0xc000
        AND      r3,r3,r1,LSL #8
        BICS     r2,r2,r3
        STR      r2,[r0,#0]
        BIC      r1,r1,#0xff
        LDR      r2,[r0,#8]
        BICS     r2,r2,r1
        STR      r2,[r0,#8]
        BX       lr
        ENDP


        AREA ||i.LPUART_EnableInterrupts||, CODE, READONLY, ALIGN=1

LPUART_EnableInterrupts PROC
        LDR      r2,[r0,#0]
        MOV      r3,#0xc000
        AND      r3,r3,r1,LSL #8
        ORRS     r2,r2,r3
        STR      r2,[r0,#0]
        BIC      r1,r1,#0xff
        LDR      r2,[r0,#8]
        ORRS     r2,r2,r1
        STR      r2,[r0,#8]
        BX       lr
        ENDP


        AREA ||i.LPUART_GetDefaultConfig||, CODE, READONLY, ALIGN=2

LPUART_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L6.8|
        B        |L6.20|
|L6.8|
        MOV      r2,#0x208
        ADR      r1,|L6.64|
        ADR      r0,|L6.108|
        BL       __aeabi_assert
|L6.20|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STR      r0,[r4,#4]
        STR      r0,[r4,#8]
        STR      r0,[r4,#0xc]
        MOV      r0,#0x1c200
        STR      r0,[r4,#0]
        MOVS     r0,#0
        STRB     r0,[r4,#4]
        STRB     r0,[r4,#5]
        STRB     r0,[r4,#6]
        STRB     r0,[r4,#7]
        STRB     r0,[r4,#8]
        STRB     r0,[r4,#9]
        STRB     r0,[r4,#0xb]
        STRB     r0,[r4,#0xa]
        STRB     r0,[r4,#0xc]
        STRB     r0,[r4,#0xd]
        STRB     r0,[r4,#0xe]
        STRB     r0,[r4,#0xf]
        POP      {r4,pc}
        ENDP

|L6.64|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L6.108|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.LPUART_GetEnabledInterrupts||, CODE, READONLY, ALIGN=2

LPUART_GetEnabledInterrupts PROC
        MOV      r1,r0
        LDR      r2,[r1,#0]
        AND      r2,r2,#0xc000
        LSRS     r0,r2,#8
        LDR      r2,[r1,#8]
        LDR      r3,|L7.20|
        ANDS     r2,r2,r3
        ORRS     r0,r0,r2
        BX       lr
        ENDP

|L7.20|
        DCD      0x0ff0c000

        AREA ||i.LPUART_GetInstance||, CODE, READONLY, ALIGN=2

LPUART_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L8.22|
|L8.8|
        LDR      r0,|L8.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L8.20|
        B        |L8.26|
|L8.20|
        ADDS     r4,r4,#1
|L8.22|
        CMP      r4,#0
        BEQ      |L8.8|
|L8.26|
        NOP      
        CBNZ     r4,|L8.32|
        B        |L8.42|
|L8.32|
        MOVS     r2,#0x7a
        ADR      r1,|L8.52|
        ADR      r0,|L8.96|
        BL       __aeabi_assert
|L8.42|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L8.48|
        DCD      s_lpuartBases
|L8.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L8.96|
        DCB      "instance < ARRAY_SIZE(s_lpuartBases)",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.LPUART_GetStatusFlags||, CODE, READONLY, ALIGN=1

LPUART_GetStatusFlags PROC
        MOV      r1,r0
        LDR      r0,[r1,#4]
        BX       lr
        ENDP


        AREA ||i.LPUART_Init||, CODE, READONLY, ALIGN=2

LPUART_Init PROC
        PUSH     {r0-r12,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r9,r2
        CBZ      r5,|L10.14|
        B        |L10.24|
|L10.14|
        MOVS     r2,#0xf1
        ADR      r1,|L10.468|
        ADR      r0,|L10.512|
        BL       __aeabi_assert
|L10.24|
        LDR      r0,[r5,#0]
        CMP      r0,#0
        BLS      |L10.32|
        B        |L10.42|
|L10.32|
        MOVS     r2,#0xf2
        ADR      r1,|L10.468|
        ADR      r0,|L10.528|
        BL       __aeabi_assert
|L10.42|
        LDR      r0,[r5,#0]
        STR      r0,[sp,#4]
        MOV      r10,#0
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        MOVS     r7,#4
        B        |L10.158|
|L10.58|
        LDR      r0,[r5,#0]
        MULS     r0,r7,r0
        UDIV     r0,r9,r0
        UXTH     r8,r0
        CMP      r8,#0
        BNE      |L10.80|
        MOV      r8,#1
|L10.80|
        MUL      r0,r7,r8
        UDIV     r0,r9,r0
        STR      r0,[sp,#8]
        LDR      r1,[r5,#0]
        LDR      r0,[sp,#8]
        SUB      r11,r0,r1
        ADD      r0,r8,#1
        MULS     r0,r7,r0
        UDIV     r0,r9,r0
        LDR      r1,[r5,#0]
        SUBS     r0,r1,r0
        CMP      r0,r11
        BCS      |L10.140|
        ADD      r0,r8,#1
        MULS     r0,r7,r0
        UDIV     r0,r9,r0
        LDR      r1,[r5,#0]
        SUB      r11,r1,r0
        ADD      r0,r8,#1
        UXTH     r8,r0
|L10.140|
        LDR      r0,[sp,#4]
        CMP      r11,r0
        BHI      |L10.156|
        STR      r11,[sp,#4]
        MOV      r10,r7
        STR      r8,[sp,#0xc]
|L10.156|
        ADDS     r7,r7,#1
|L10.158|
        CMP      r7,#0x20
        BLS      |L10.58|
        MOVS     r1,#0x64
        LDR      r0,[r5,#0]
        UDIV     r0,r0,r1
        ADD      r1,r0,r0,LSL #1
        LDR      r0,[sp,#4]
        CMP      r1,r0
        BCS      |L10.190|
        MOV      r0,#0x521
|L10.184|
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
|L10.190|
        MOV      r0,r4
        BL       LPUART_GetInstance
        STR      r0,[sp,#0]
        LDR      r2,|L10.556|
        LDR      r1,[sp,#0]
        LDR      r0,[r2,r1,LSL #2]
        LDR      r2,|L10.560|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        LDR      r0,[r4,#8]
        BIC      r0,r0,#0xc0000
        STR      r0,[r4,#8]
        LDR      r6,[r4,#0]
        CMP      r10,#3
        BLS      |L10.250|
        CMP      r10,#8
        BCS      |L10.250|
        ORR      r6,r6,#0x20000
|L10.250|
        BIC      r6,r6,#0x1f000000
        SUB      r0,r10,#1
        MOV      r1,#0x1f000000
        AND      r0,r1,r0,LSL #24
        ORRS     r6,r6,r0
        BFC      r6,#0,#13
        LDR      r0,[sp,#0xc]
        UBFX     r0,r0,#0,#13
        ORRS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#0]
        BIC      r0,r0,#0x20000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        MOV      r1,#0x717
        BIC      r6,r0,r1
        LDRB     r0,[r5,#4]
        LDRB     r1,[r5,#0xd]
        MOV      r2,#0x700
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        LDRB     r1,[r5,#0xc]
        MOVS     r2,#4
        AND      r1,r2,r1,LSL #2
        ORRS     r0,r0,r1
        ORRS     r6,r6,r0
        LDRB     r0,[r5,#4]
        CBZ      r0,|L10.334|
        ORR      r6,r6,#0x10
|L10.334|
        STR      r6,[r4,#8]
        LDR      r0,[r4,#0]
        BIC      r6,r0,#0x2000
        LDRB     r0,[r5,#7]
        MOV      r1,#0x2000
        AND      r0,r1,r0,LSL #13
        ORRS     r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r6,|L10.564|
        ORR      r6,r6,#0x80000000
        ORR      r6,r6,#0xc000
        LDRB     r0,[r5,#0xb]
        MOVS     r1,#0x10
        AND      r0,r1,r0,LSL #4
        LDRB     r1,[r5,#0xa]
        MOVS     r2,#0x20
        AND      r1,r2,r1,LSL #5
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x14]
        LDRB     r0,[r5,#8]
        CMP      r0,#1
        BNE      |L10.404|
        LDR      r0,[r4,#0x14]
        ORR      r0,r0,#8
        STR      r0,[r4,#0x14]
|L10.404|
        LDRB     r0,[r5,#9]
        CMP      r0,#1
        BNE      |L10.418|
        LDR      r0,[r4,#0x14]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x14]
|L10.418|
        LDRB     r0,[r5,#6]
        CMP      r0,#1
        BNE      |L10.430|
        ORR      r6,r6,#0x20000000
        B        |L10.434|
|L10.430|
        BIC      r6,r6,#0x20000000
|L10.434|
        LDR      r0,[r4,#4]
        ORRS     r0,r0,r6
        STR      r0,[r4,#4]
        LDR      r6,[r4,#8]
        LDRB     r0,[r5,#0xe]
        CMP      r0,#1
        BNE      |L10.452|
        ORR      r6,r6,#0x80000
|L10.452|
        LDRB     r0,[r5,#0xf]
        CMP      r0,#1
        BNE      |L10.462|
        ORR      r6,r6,#0x40000
|L10.462|
        STR      r6,[r4,#8]
        MOVS     r0,#0
        B        |L10.184|
        ENDP

|L10.468|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L10.512|
        DCB      "NULL != config",0
        DCB      0
|L10.528|
        DCB      "0U < config->baudRate_Bps",0
        DCB      0
        DCB      0
|L10.556|
        DCD      s_lpuartClock
|L10.560|
        DCD      0x40047000
|L10.564|
        DCD      0x401f0000

        AREA ||i.LPUART_ReadBlocking||, CODE, READONLY, ALIGN=2

LPUART_ReadBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r8,r2
        CBZ      r6,|L11.14|
        B        |L11.26|
|L11.14|
        MOV      r2,#0x364
        ADR      r1,|L11.208|
        ADR      r0,|L11.252|
        BL       __aeabi_assert
|L11.26|
        MOV      r7,r6
        B        |L11.194|
|L11.30|
        B        |L11.178|
|L11.32|
        MOV      r0,r5
        BL       LPUART_GetStatusFlags
        MOV      r4,r0
        AND      r0,r4,#0x80000
        CMP      r0,#0x80000
        BNE      |L11.76|
        MOV      r1,#0x80000
        MOV      r0,r5
        BL       LPUART_ClearStatusFlags
        CBNZ     r0,|L11.70|
        MOV      r0,#0x51d
|L11.66|
        POP      {r4-r8,pc}
|L11.70|
        MOV      r0,#0x51a
        B        |L11.66|
|L11.76|
        AND      r0,r4,#0x40000
        CMP      r0,#0x40000
        BNE      |L11.110|
        MOV      r1,#0x40000
        MOV      r0,r5
        BL       LPUART_ClearStatusFlags
        CBNZ     r0,|L11.104|
        MOV      r0,#0x51e
        B        |L11.66|
|L11.104|
        MOV      r0,#0x51a
        B        |L11.66|
|L11.110|
        AND      r0,r4,#0x20000
        CMP      r0,#0x20000
        BNE      |L11.144|
        MOV      r1,#0x20000
        MOV      r0,r5
        BL       LPUART_ClearStatusFlags
        CBNZ     r0,|L11.138|
        MOV      r0,#0x51f
        B        |L11.66|
|L11.138|
        MOV      r0,#0x51a
        B        |L11.66|
|L11.144|
        AND      r0,r4,#0x10000
        CMP      r0,#0x10000
        BNE      |L11.178|
        MOV      r1,#0x10000
        MOV      r0,r5
        BL       LPUART_ClearStatusFlags
        CBNZ     r0,|L11.172|
        MOV      r0,#0x520
        B        |L11.66|
|L11.172|
        MOV      r0,#0x51a
        B        |L11.66|
|L11.178|
        LDR      r0,[r5,#4]
        AND      r0,r0,#0x200000
        CMP      r0,#0
        BEQ      |L11.32|
        LDR      r0,[r5,#0xc]
        STRB     r0,[r7,#0]
        ADDS     r7,r7,#1
|L11.194|
        SUBS     r0,r8,#0
        SUB      r8,r8,#1
        BNE      |L11.30|
        NOP      
        B        |L11.66|
        ENDP

|L11.208|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L11.252|
        DCB      "NULL != data",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.LPUART_ReadNonBlocking||, CODE, READONLY, ALIGN=2

LPUART_ReadNonBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r7,r2
        CBZ      r5,|L12.14|
        B        |L12.24|
|L12.14|
        MOVS     r2,#0xbb
        ADR      r1,|L12.44|
        ADR      r0,|L12.88|
        BL       __aeabi_assert
|L12.24|
        MOVS     r4,#0
        B        |L12.34|
|L12.28|
        LDR      r0,[r6,#0xc]
        STRB     r0,[r5,r4]
        ADDS     r4,r4,#1
|L12.34|
        CMP      r4,r7
        BCC      |L12.28|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L12.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L12.88|
        DCB      "NULL != data",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.LPUART_SetBaudRate||, CODE, READONLY, ALIGN=2

LPUART_SetBaudRate PROC
        PUSH     {r0-r12,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r9,r2
        CMP      r4,#0
        BLS      |L13.16|
        B        |L13.28|
|L13.16|
        MOV      r2,#0x235
        ADR      r1,|L13.240|
        ADR      r0,|L13.284|
        BL       __aeabi_assert
|L13.28|
        STR      r4,[sp,#0]
        MOV      r10,#0
        MOVS     r0,#0
        STR      r0,[sp,#8]
        MOVS     r5,#4
        B        |L13.138|
|L13.42|
        MUL      r0,r4,r5
        UDIV     r0,r9,r0
        UXTH     r8,r0
        CMP      r8,#0
        BNE      |L13.64|
        MOV      r8,#1
|L13.64|
        MUL      r0,r5,r8
        UDIV     r0,r9,r0
        UXTH     r0,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#4]
        SUB      r11,r0,r4
        ADD      r0,r8,#1
        MULS     r0,r5,r0
        UDIV     r0,r9,r0
        SUBS     r0,r4,r0
        CMP      r0,r11
        BCS      |L13.120|
        ADD      r0,r8,#1
        MULS     r0,r5,r0
        UDIV     r0,r9,r0
        SUB      r11,r4,r0
        ADD      r0,r8,#1
        UXTH     r8,r0
|L13.120|
        LDR      r0,[sp,#0]
        CMP      r11,r0
        BHI      |L13.136|
        STR      r11,[sp,#0]
        MOV      r10,r5
        STR      r8,[sp,#8]
|L13.136|
        ADDS     r5,r5,#1
|L13.138|
        CMP      r5,#0x20
        BLS      |L13.42|
        MOVS     r0,#0x64
        UDIV     r0,r4,r0
        ADD      r1,r0,r0,LSL #1
        LDR      r0,[sp,#0]
        CMP      r1,r0
        BLS      |L13.232|
        LDR      r0,[r6,#8]
        STR      r0,[sp,#0xc]
        LDR      r0,[r6,#8]
        BIC      r0,r0,#0xc0000
        STR      r0,[r6,#8]
        LDR      r7,[r6,#0]
        CMP      r10,#3
        BLS      |L13.188|
        CMP      r10,#8
        BCS      |L13.188|
        ORR      r7,r7,#0x20000
|L13.188|
        BIC      r7,r7,#0x1f000000
        SUB      r0,r10,#1
        MOV      r1,#0x1f000000
        AND      r0,r1,r0,LSL #24
        ORRS     r7,r7,r0
        BFC      r7,#0,#13
        LDR      r0,[sp,#8]
        UBFX     r0,r0,#0,#13
        ORRS     r0,r0,r7
        STR      r0,[r6,#0]
        LDR      r0,[sp,#0xc]
        STR      r0,[r6,#8]
        MOVS     r0,#0
|L13.226|
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
|L13.232|
        MOV      r0,#0x521
        B        |L13.226|
        ENDP

        DCW      0x0000
|L13.240|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L13.284|
        DCB      "0U < baudRate_Bps",0
        DCB      0
        DCB      0

        AREA ||i.LPUART_TransferAbortReceive||, CODE, READONLY, ALIGN=2

LPUART_TransferAbortReceive PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L14.10|
        B        |L14.22|
|L14.10|
        MOV      r2,#0x523
        ADR      r1,|L14.48|
        ADR      r0,|L14.92|
        BL       __aeabi_assert
|L14.22|
        LDR      r0,[r4,#0x18]
        CBNZ     r0,|L14.36|
        MOV      r1,#0x8300000
        MOV      r0,r5
        BL       LPUART_DisableInterrupts
|L14.36|
        MOVS     r0,#0
        STR      r0,[r4,#0x10]
        MOVS     r0,#2
        STRB     r0,[r4,#0x2d]
        POP      {r4-r6,pc}
        ENDP

|L14.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L14.92|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.LPUART_TransferAbortSend||, CODE, READONLY, ALIGN=2

LPUART_TransferAbortSend PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L15.10|
        B        |L15.22|
|L15.10|
        MOV      r2,#0x463
        ADR      r1,|L15.44|
        ADR      r0,|L15.88|
        BL       __aeabi_assert
|L15.22|
        MOV      r1,#0xc00000
        MOV      r0,r5
        BL       LPUART_DisableInterrupts
        MOVS     r0,#0
        STR      r0,[r4,#4]
        STRB     r0,[r4,#0x2c]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L15.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L15.88|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.LPUART_TransferCreateHandle||, CODE, READONLY, ALIGN=2

LPUART_TransferCreateHandle PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        CBZ      r4,|L16.16|
        B        |L16.28|
|L16.16|
        MOV      r2,#0x3c0
        ADR      r1,|L16.120|
        ADR      r0,|L16.164|
        BL       __aeabi_assert
|L16.28|
        MOVS     r1,#0x30
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOVS     r0,#2
        STRB     r0,[r4,#0x2d]
        MOVS     r0,#0
        STRB     r0,[r4,#0x2c]
        STR      r6,[r4,#0x24]
        STR      r7,[r4,#0x28]
        MOV      r0,r8
        BL       LPUART_GetInstance
        MOV      r5,r0
        LDR      r1,|L16.180|
        STR      r4,[r1,r5,LSL #2]
        LDR      r0,|L16.184|
        LDR      r1,|L16.188|
        STR      r0,[r1,#0]  ; s_lpuartIsr
        LDR      r1,|L16.192|
        LDRSB    r0,[r1,r5]
        CMN      r0,#0x80
        BNE      |L16.84|
        B        |L16.114|
|L16.84|
        MOV      r1,r0
        CMP      r1,#0
        BLT      |L16.110|
        AND      r3,r1,#0x1f
        MOVS     r2,#1
        LSLS     r2,r2,r3
        LSRS     r3,r1,#5
        LSLS     r3,r3,#2
        ADD      r3,r3,#0xe000e000
        STR      r2,[r3,#0x100]
|L16.110|
        NOP      
        NOP      
|L16.114|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L16.120|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L16.164|
        DCB      "NULL != handle",0
        DCB      0
|L16.180|
        DCD      s_lpuartHandle
|L16.184|
        DCD      LPUART_TransferHandleIRQ
|L16.188|
        DCD      s_lpuartIsr
|L16.192|
        DCD      s_lpuartIRQ

        AREA ||i.LPUART_TransferGetReceiveCount||, CODE, READONLY, ALIGN=2

LPUART_TransferGetReceiveCount PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L17.12|
        B        |L17.24|
|L17.12|
        MOV      r2,#0x540
        ADR      r1,|L17.64|
        ADR      r0,|L17.108|
        BL       __aeabi_assert
|L17.24|
        CBZ      r5,|L17.28|
        B        |L17.40|
|L17.28|
        MOV      r2,#0x541
        ADR      r1,|L17.64|
        ADR      r0,|L17.124|
        BL       __aeabi_assert
|L17.40|
        LDRB     r0,[r4,#0x2d]
        CMP      r0,#2
        BNE      |L17.52|
        MOVS     r0,#6
|L17.50|
        POP      {r4-r6,pc}
|L17.52|
        LDRD     r1,r0,[r4,#0x10]
        SUBS     r0,r0,r1
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L17.50|
        ENDP

|L17.64|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L17.108|
        DCB      "NULL != handle",0
        DCB      0
|L17.124|
        DCB      "NULL != count",0
        DCB      0
        DCB      0

        AREA ||i.LPUART_TransferGetRxRingBufferLength||, CODE, READONLY, ALIGN=2

LPUART_TransferGetRxRingBufferLength PROC
        PUSH     {r4-r10,lr}
        MOV      r9,r0
        MOV      r4,r1
        CBZ      r4,|L18.12|
        B        |L18.22|
|L18.12|
        MOVS     r2,#0x87
        ADR      r1,|L18.52|
        ADR      r0,|L18.96|
        BL       __aeabi_assert
|L18.22|
        LDR      r8,[r4,#0x1c]
        LDRH     r5,[r4,#0x22]
        LDRH     r6,[r4,#0x20]
        CMP      r5,r6
        BLE      |L18.42|
        ADD      r0,r6,r8
        SUBS     r7,r0,r5
        B        |L18.44|
|L18.42|
        SUBS     r7,r6,r5
|L18.44|
        MOV      r0,r7
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L18.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L18.96|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.LPUART_TransferGetSendCount||, CODE, READONLY, ALIGN=2

LPUART_TransferGetSendCount PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L19.12|
        B        |L19.24|
|L19.12|
        MOV      r2,#0x47b
        ADR      r1,|L19.64|
        ADR      r0,|L19.108|
        BL       __aeabi_assert
|L19.24|
        CBZ      r5,|L19.28|
        B        |L19.40|
|L19.28|
        MOV      r2,#0x47c
        ADR      r1,|L19.64|
        ADR      r0,|L19.124|
        BL       __aeabi_assert
|L19.40|
        LDRB     r0,[r4,#0x2c]
        CBNZ     r0,|L19.50|
        MOVS     r0,#6
|L19.48|
        POP      {r4-r6,pc}
|L19.50|
        LDRD     r1,r0,[r4,#4]
        SUBS     r0,r0,r1
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L19.48|
        ENDP

        DCW      0x0000
|L19.64|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L19.108|
        DCB      "NULL != handle",0
        DCB      0
|L19.124|
        DCB      "NULL != count",0
        DCB      0
        DCB      0

        AREA ||i.LPUART_TransferHandleErrorIRQ||, CODE, READONLY, ALIGN=1

LPUART_TransferHandleErrorIRQ PROC
        BX       lr
        ENDP


        AREA ||i.LPUART_TransferHandleIRQ||, CODE, READONLY, ALIGN=2

LPUART_TransferHandleIRQ PROC
        PUSH     {r4-r12,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L21.12|
        B        |L21.24|
|L21.12|
        MOV      r2,#0x557
        ADR      r1,|L21.444|
        ADR      r0,|L21.488|
        BL       __aeabi_assert
|L21.24|
        MOV      r0,r5
        BL       LPUART_GetStatusFlags
        MOV      r8,r0
        MOV      r0,r5
        BL       LPUART_GetEnabledInterrupts
        MOV      r9,r0
        AND      r0,r8,#0x80000
        CMP      r0,#0x80000
        BNE      |L21.80|
        LDR      r0,[r5,#4]
        LDR      r1,|L21.504|
        ANDS     r0,r0,r1
        ORR      r0,r0,#0x80000
        STR      r0,[r5,#4]
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L21.80|
        MOV      r2,#0x51d
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r12,r3,[r4,#0x24]
        BLX      r12
|L21.80|
        AND      r0,r8,#0x100000
        CBZ      r0,|L21.136|
        AND      r0,r9,#0x100000
        CBZ      r0,|L21.136|
        LDR      r0,[r5,#4]
        ORR      r0,r0,#0x100000
        STR      r0,[r5,#4]
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L21.114|
        MOV      r1,#0x100000
        MOV      r0,r5
        BL       LPUART_DisableInterrupts
|L21.114|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L21.136|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L21.136|
        MOV      r2,#0x522
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r12,r3,[r4,#0x24]
        BLX      r12
|L21.136|
        AND      r0,r8,#0x200000
        CMP      r0,#0
        BEQ      |L21.352|
        AND      r0,r9,#0x200000
        CMP      r0,#0
        BEQ      |L21.352|
        MOVS     r7,#1
        B        |L21.212|
|L21.156|
        MOVS     r6,#1
        LDR      r1,[r4,#0xc]
        MOV      r2,r6
        MOV      r0,r5
        BL       LPUART_ReadNonBlocking
        LDR      r0,[r4,#0xc]
        ADD      r0,r0,r6
        STR      r0,[r4,#0xc]
        LDR      r0,[r4,#0x10]
        SUBS     r0,r0,r6
        STR      r0,[r4,#0x10]
        SUBS     r0,r7,r6
        UXTB     r7,r0
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L21.212|
        MOVS     r0,#2
        STRB     r0,[r4,#0x2d]
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L21.212|
        MOV      r2,#0x517
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r12,r3,[r4,#0x24]
        BLX      r12
|L21.212|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L21.220|
        CMP      r7,#0
        BNE      |L21.156|
|L21.220|
        LDR      r0,[r4,#0x18]
        CBZ      r0,|L21.336|
        B        |L21.324|
|L21.226|
        MOV      r1,r4
        MOV      r0,r5
        BL       LPUART_TransferIsRxRingBufferFull
        CBZ      r0,|L21.254|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L21.254|
        MOV      r2,#0x51c
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r12,r3,[r4,#0x24]
        BLX      r12
|L21.254|
        MOV      r1,r4
        MOV      r0,r5
        BL       LPUART_TransferIsRxRingBufferFull
        CBZ      r0,|L21.286|
        LDRH     r0,[r4,#0x22]
        ADDS     r0,r0,#1
        LDR      r1,[r4,#0x1c]
        CMP      r0,r1
        BNE      |L21.280|
        MOVS     r0,#0
        STRH     r0,[r4,#0x22]
        B        |L21.286|
|L21.280|
        LDRH     r0,[r4,#0x22]
        ADDS     r0,r0,#1
        STRH     r0,[r4,#0x22]
|L21.286|
        LDRH     r10,[r4,#0x20]
        LDR      r11,[r5,#0xc]
        LDR      r1,[r4,#0x18]
        STRB     r11,[r1,r10]
        LDRH     r0,[r4,#0x20]
        ADDS     r0,r0,#1
        LDR      r1,[r4,#0x1c]
        CMP      r0,r1
        BNE      |L21.316|
        MOVS     r0,#0
        STRH     r0,[r4,#0x20]
        B        |L21.322|
|L21.316|
        LDRH     r0,[r4,#0x20]
        ADDS     r0,r0,#1
        STRH     r0,[r4,#0x20]
|L21.322|
        NOP      
|L21.324|
        SUBS     r0,r7,#0
        SUB      r1,r7,#1
        UXTB     r7,r1
        BNE      |L21.226|
        B        |L21.352|
|L21.336|
        B        |L21.338|
|L21.338|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L21.352|
        MOV      r1,#0x8200000
        MOV      r0,r5
        BL       LPUART_DisableInterrupts
|L21.352|
        AND      r0,r8,#0x800000
        CBZ      r0,|L21.440|
        AND      r0,r9,#0x800000
        CBZ      r0,|L21.440|
        MOVS     r7,#1
        B        |L21.432|
|L21.368|
        MOVS     r6,#1
        LDR      r1,[r4,#0]
        MOV      r2,r6
        MOV      r0,r5
        BL       LPUART_WriteNonBlocking
        LDR      r0,[r4,#0]
        ADD      r0,r0,r6
        STR      r0,[r4,#0]
        LDR      r0,[r4,#4]
        SUBS     r0,r0,r6
        STR      r0,[r4,#4]
        SUBS     r0,r7,r6
        UXTB     r7,r0
        LDR      r0,[r4,#4]
        CBNZ     r0,|L21.432|
        MOVS     r0,#0
        STRB     r0,[r4,#0x2c]
        LDR      r0,[r5,#8]
        BIC      r0,r0,#0x800000
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L21.432|
        MOV      r2,#0x516
        MOV      r1,r4
        MOV      r0,r5
        LDRD     r12,r3,[r4,#0x24]
        BLX      r12
|L21.432|
        LDR      r0,[r4,#4]
        CBZ      r0,|L21.440|
        CMP      r7,#0
        BNE      |L21.368|
|L21.440|
        POP      {r4-r12,pc}
        ENDP

|L21.444|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L21.488|
        DCB      "NULL != handle",0
        DCB      0
|L21.504|
        DCD      0x3fe00000

        AREA ||i.LPUART_TransferIsRxRingBufferFull||, CODE, READONLY, ALIGN=2

LPUART_TransferIsRxRingBufferFull PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L22.10|
        B        |L22.20|
|L22.10|
        MOVS     r2,#0x9c
        ADR      r1,|L22.48|
        ADR      r0,|L22.92|
        BL       __aeabi_assert
|L22.20|
        MOV      r1,r4
        MOV      r0,r6
        BL       LPUART_TransferGetRxRingBufferLength
        LDR      r1,[r4,#0x1c]
        SUBS     r1,r1,#1
        CMP      r0,r1
        BNE      |L22.40|
        MOVS     r5,#1
        B        |L22.42|
|L22.40|
        MOVS     r5,#0
|L22.42|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L22.48|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L22.92|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.LPUART_TransferReceiveNonBlocking||, CODE, READONLY, ALIGN=2

LPUART_TransferReceiveNonBlocking PROC
        PUSH     {r0-r12,lr}
        MOV      r4,r1
        MOV      r6,r2
        MOV      r9,r3
        CBZ      r4,|L23.14|
        B        |L23.26|
|L23.14|
        MOV      r2,#0x4a7
        ADR      r1,|L23.296|
        ADR      r0,|L23.340|
        BL       __aeabi_assert
|L23.26|
        CBZ      r6,|L23.30|
        B        |L23.42|
|L23.30|
        MOV      r2,#0x4a8
        ADR      r1,|L23.296|
        ADR      r0,|L23.356|
        BL       __aeabi_assert
|L23.42|
        LDR      r0,[r6,#0]
        CBZ      r0,|L23.48|
        B        |L23.60|
|L23.48|
        MOV      r2,#0x4a9
        ADR      r1,|L23.296|
        ADR      r0,|L23.372|
        BL       __aeabi_assert
|L23.60|
        LDR      r0,[r6,#4]
        CBZ      r0,|L23.66|
        B        |L23.78|
|L23.66|
        MOV      r2,#0x4aa
        ADR      r1,|L23.296|
        ADR      r0,|L23.392|
        BL       __aeabi_assert
|L23.78|
        MOV      r8,#0
        LDRB     r0,[r4,#0x2d]
        CMP      r0,#3
        BNE      |L23.96|
        MOV      r11,#0x515
        B        |L23.286|
|L23.96|
        LDR      r5,[r6,#4]
        MOVS     r7,#0
        LDR      r0,[r4,#0x18]
        CMP      r0,#0
        BEQ      |L23.246|
        MOV      r1,#0x200000
        LDR      r0,[sp,#0]
        BL       LPUART_DisableInterrupts
        MOV      r1,r4
        LDR      r0,[sp,#0]
        BL       LPUART_TransferGetRxRingBufferLength
        MOV      r8,r0
        CMP      r8,#0
        BEQ      |L23.196|
        CMP      r5,r8
        BCS      |L23.140|
        MOV      r0,r5
        B        |L23.142|
|L23.140|
        MOV      r0,r8
|L23.142|
        MOV      r8,r0
        SUB      r5,r5,r8
        MOV      r10,#0
        B        |L23.192|
|L23.154|
        LDRH     r1,[r4,#0x22]
        LDR      r0,[r4,#0x18]
        LDRB     r0,[r0,r1]
        LDR      r1,[r6,#0]
        STRB     r0,[r1,r7]
        ADDS     r7,r7,#1
        LDRH     r0,[r4,#0x22]
        ADDS     r0,r0,#1
        LDR      r1,[r4,#0x1c]
        CMP      r0,r1
        BNE      |L23.182|
        MOVS     r0,#0
        STRH     r0,[r4,#0x22]
        B        |L23.188|
|L23.182|
        LDRH     r0,[r4,#0x22]
        ADDS     r0,r0,#1
        STRH     r0,[r4,#0x22]
|L23.188|
        ADD      r10,r10,#1
|L23.192|
        CMP      r10,r8
        BCC      |L23.154|
|L23.196|
        CBZ      r5,|L23.214|
        LDR      r0,[r6,#0]
        ADD      r0,r0,r7
        STR      r0,[r4,#0xc]
        STR      r5,[r4,#0x10]
        STR      r5,[r4,#0x14]
        MOVS     r0,#3
        STRB     r0,[r4,#0x2d]
|L23.214|
        MOV      r1,#0x200000
        LDR      r0,[sp,#0]
        BL       LPUART_EnableInterrupts
        CBNZ     r5,|L23.272|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L23.272|
        MOV      r2,#0x517
        MOV      r1,r4
        LDRD     r12,r3,[r4,#0x24]
        LDR      r0,[sp,#0]
        BLX      r12
        B        |L23.272|
|L23.246|
        LDR      r0,[r6,#0]
        ADD      r0,r0,r7
        STR      r0,[r4,#0xc]
        STR      r5,[r4,#0x10]
        STR      r5,[r4,#0x14]
        MOVS     r0,#3
        STRB     r0,[r4,#0x2d]
        MOV      r1,#0x8300000
        LDR      r0,[sp,#0]
        BL       LPUART_EnableInterrupts
|L23.272|
        CMP      r9,#0
        BEQ      |L23.282|
        STR      r7,[r9,#0]
|L23.282|
        MOV      r11,#0
|L23.286|
        MOV      r0,r11
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
        ENDP

        DCW      0x0000
|L23.296|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L23.340|
        DCB      "NULL != handle",0
        DCB      0
|L23.356|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0
|L23.372|
        DCB      "NULL != xfer->data",0
        DCB      0
|L23.392|
        DCB      "0U != xfer->dataSize",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.LPUART_TransferSendNonBlocking||, CODE, READONLY, ALIGN=2

LPUART_TransferSendNonBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L24.14|
        B        |L24.26|
|L24.14|
        MOV      r2,#0x43c
        ADR      r1,|L24.128|
        ADR      r0,|L24.172|
        BL       __aeabi_assert
|L24.26|
        CBZ      r5,|L24.30|
        B        |L24.42|
|L24.30|
        MOV      r2,#0x43d
        ADR      r1,|L24.128|
        ADR      r0,|L24.188|
        BL       __aeabi_assert
|L24.42|
        LDR      r0,[r5,#0]
        CBZ      r0,|L24.48|
        B        |L24.60|
|L24.48|
        MOV      r2,#0x43e
        ADR      r1,|L24.128|
        ADR      r0,|L24.204|
        BL       __aeabi_assert
|L24.60|
        LDR      r0,[r5,#4]
        CBZ      r0,|L24.66|
        B        |L24.78|
|L24.66|
        MOV      r2,#0x43f
        ADR      r1,|L24.128|
        ADR      r0,|L24.224|
        BL       __aeabi_assert
|L24.78|
        LDRB     r0,[r4,#0x2c]
        CMP      r0,#1
        BNE      |L24.92|
        MOV      r6,#0x514
        B        |L24.120|
|L24.92|
        LDR      r0,[r5,#0]
        STR      r0,[r4,#0]
        LDR      r0,[r5,#4]
        STR      r0,[r4,#4]
        LDR      r0,[r5,#4]
        STR      r0,[r4,#8]
        MOVS     r0,#1
        STRB     r0,[r4,#0x2c]
        LSLS     r1,r0,#23
        MOV      r0,r7
        BL       LPUART_EnableInterrupts
        MOVS     r6,#0
|L24.120|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L24.128|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L24.172|
        DCB      "NULL != handle",0
        DCB      0
|L24.188|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0
|L24.204|
        DCB      "NULL != xfer->data",0
        DCB      0
|L24.224|
        DCB      "0U != xfer->dataSize",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.LPUART_TransferStartRingBuffer||, CODE, READONLY, ALIGN=2

LPUART_TransferStartRingBuffer PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        MOV      r6,r3
        CBZ      r4,|L25.16|
        B        |L25.28|
|L25.16|
        MOV      r2,#0x401
        ADR      r1,|L25.68|
        ADR      r0,|L25.112|
        BL       __aeabi_assert
|L25.28|
        CBZ      r5,|L25.32|
        B        |L25.44|
|L25.32|
        MOV      r2,#0x402
        ADR      r1,|L25.68|
        ADR      r0,|L25.128|
        BL       __aeabi_assert
|L25.44|
        STR      r5,[r4,#0x18]
        STR      r6,[r4,#0x1c]
        MOVS     r0,#0
        STRH     r0,[r4,#0x20]
        STRH     r0,[r4,#0x22]
        MOV      r1,#0x8200000
        MOV      r0,r7
        BL       LPUART_EnableInterrupts
        POP      {r4-r8,pc}
        ENDP

|L25.68|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L25.112|
        DCB      "NULL != handle",0
        DCB      0
|L25.128|
        DCB      "NULL != ringBuffer",0
        DCB      0

        AREA ||i.LPUART_TransferStopRingBuffer||, CODE, READONLY, ALIGN=2

LPUART_TransferStopRingBuffer PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L26.10|
        B        |L26.22|
|L26.10|
        MOV      r2,#0x419
        ADR      r1,|L26.52|
        ADR      r0,|L26.96|
        BL       __aeabi_assert
|L26.22|
        LDRB     r0,[r4,#0x2d]
        CMP      r0,#2
        BNE      |L26.40|
        MOV      r1,#0x8200000
        MOV      r0,r5
        BL       LPUART_DisableInterrupts
|L26.40|
        MOVS     r0,#0
        STR      r0,[r4,#0x18]
        STR      r0,[r4,#0x1c]
        STRH     r0,[r4,#0x20]
        STRH     r0,[r4,#0x22]
        POP      {r4-r6,pc}
        ENDP

|L26.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L26.96|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.LPUART_WriteBlocking||, CODE, READONLY, ALIGN=2

LPUART_WriteBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r8,r2
        CBZ      r5,|L27.14|
        B        |L27.26|
|L27.14|
        MOV      r2,#0x341
        ADR      r1,|L27.60|
        ADR      r0,|L27.104|
        BL       __aeabi_assert
|L27.26|
        MOV      r6,r5
        MOV      r7,r8
        B        |L27.52|
|L27.32|
        NOP      
|L27.34|
        LDR      r0,[r4,#4]
        AND      r0,r0,#0x800000
        CMP      r0,#0
        BEQ      |L27.34|
        LDRB     r0,[r6,#0]
        STR      r0,[r4,#0xc]
        ADDS     r6,r6,#1
        SUBS     r7,r7,#1
|L27.52|
        CMP      r7,#0
        BNE      |L27.32|
        POP      {r4-r8,pc}
        ENDP

|L27.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L27.104|
        DCB      "NULL != data",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.LPUART_WriteNonBlocking||, CODE, READONLY, ALIGN=2

LPUART_WriteNonBlocking PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r7,r2
        CBZ      r5,|L28.14|
        B        |L28.24|
|L28.14|
        MOVS     r2,#0xad
        ADR      r1,|L28.44|
        ADR      r0,|L28.88|
        BL       __aeabi_assert
|L28.24|
        MOVS     r4,#0
        B        |L28.34|
|L28.28|
        LDRB     r0,[r5,r4]
        STR      r0,[r6,#0xc]
        ADDS     r4,r4,#1
|L28.34|
        CMP      r4,r7
        BCC      |L28.28|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L28.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c",0
        DCB      0
|L28.88|
        DCB      "NULL != data",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_lpuartBases
        DCD      0x400c4000
s_lpuartIRQ
        DCB      0x56,0x00,0x00,0x00
s_lpuartClock
        DCD      0x102c0004

        AREA ||.data||, DATA, ALIGN=2

s_lpuartHandle
        DCD      0x00000000
s_lpuartIsr
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_lpuart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_lpuart_c_b0574583____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_fsl_lpuart_c_b0574583____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_lpuart_c_b0574583____REVSH|
#line 483
|__asm___12_fsl_lpuart_c_b0574583____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_lpuart_c_b0574583____RRX|
#line 670
|__asm___12_fsl_lpuart_c_b0574583____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT LPUART0_DriverIRQHandler [CODE]
        EXPORT LPUART_ClearStatusFlags [CODE]
        EXPORT LPUART_Deinit [CODE]
        EXPORT LPUART_DisableInterrupts [CODE]
        EXPORT LPUART_EnableInterrupts [CODE]
        EXPORT LPUART_GetDefaultConfig [CODE]
        EXPORT LPUART_GetEnabledInterrupts [CODE]
        EXPORT LPUART_GetInstance [CODE]
        EXPORT LPUART_GetStatusFlags [CODE]
        EXPORT LPUART_Init [CODE]
        EXPORT LPUART_ReadBlocking [CODE]
        EXPORT LPUART_SetBaudRate [CODE]
        EXPORT LPUART_TransferAbortReceive [CODE]
        EXPORT LPUART_TransferAbortSend [CODE]
        EXPORT LPUART_TransferCreateHandle [CODE]
        EXPORT LPUART_TransferGetReceiveCount [CODE]
        EXPORT LPUART_TransferGetRxRingBufferLength [CODE]
        EXPORT LPUART_TransferGetSendCount [CODE]
        EXPORT LPUART_TransferHandleErrorIRQ [CODE]
        EXPORT LPUART_TransferHandleIRQ [CODE]
        EXPORT LPUART_TransferReceiveNonBlocking [CODE]
        EXPORT LPUART_TransferSendNonBlocking [CODE]
        EXPORT LPUART_TransferStartRingBuffer [CODE]
        EXPORT LPUART_TransferStopRingBuffer [CODE]
        EXPORT LPUART_WriteBlocking [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT __aeabi_memclr4 [CODE]

        KEEP LPUART_ReadNonBlocking
        KEEP LPUART_TransferIsRxRingBufferFull
        KEEP LPUART_WriteNonBlocking
        KEEP s_lpuartBases
        KEEP s_lpuartIRQ
        KEEP s_lpuartClock
        KEEP s_lpuartHandle
        KEEP s_lpuartIsr

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
