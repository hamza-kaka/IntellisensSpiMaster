; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_dac.o --depend=.\objects\fsl_dac.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_dac.crf ..\..\devices\MK66F18\drivers\fsl_dac.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DAC_ClearBufferStatusFlags||, CODE, READONLY, ALIGN=1

DAC_ClearBufferStatusFlags PROC
        AND      r1,r1,#7
        LDRB     r2,[r0,#0x20]
        BICS     r2,r2,r1
        STRB     r2,[r0,#0x20]
        BX       lr
        ENDP


        AREA ||i.DAC_Deinit||, CODE, READONLY, ALIGN=2

DAC_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,r5
        MOVS     r1,#0
        CBZ      r1,|L2.24|
        LDRB     r2,[r0,#0x21]
        ORR      r2,r2,#0x80
        STRB     r2,[r0,#0x21]
        B        |L2.36|
|L2.24|
        LDRB     r2,[r0,#0x21]
        BIC      r2,r2,#0x80
        STRB     r2,[r0,#0x21]
|L2.36|
        NOP      
        MOV      r0,r5
        BL       DAC_GetInstance
        LDR      r1,|L2.72|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L2.76|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L2.72|
        DCD      s_dacClocks
|L2.76|
        DCD      0x40047000

        AREA ||i.DAC_DisableBufferInterrupts||, CODE, READONLY, ALIGN=1

DAC_DisableBufferInterrupts PROC
        AND      r1,r1,#7
        LDRB     r2,[r0,#0x21]
        BICS     r2,r2,r1
        STRB     r2,[r0,#0x21]
        BX       lr
        ENDP


        AREA ||i.DAC_EnableBufferInterrupts||, CODE, READONLY, ALIGN=1

DAC_EnableBufferInterrupts PROC
        AND      r1,r1,#7
        LDRB     r2,[r0,#0x21]
        ORRS     r2,r2,r1
        STRB     r2,[r0,#0x21]
        BX       lr
        ENDP


        AREA ||i.DAC_GetBufferStatusFlags||, CODE, READONLY, ALIGN=1

DAC_GetBufferStatusFlags PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0x20]
        AND      r0,r0,#7
        BX       lr
        ENDP


        AREA ||i.DAC_GetDefaultBufferConfig||, CODE, READONLY, ALIGN=2

DAC_GetDefaultBufferConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L6.8|
        B        |L6.18|
|L6.8|
        MOVS     r2,#0xbd
        ADR      r1,|L6.40|
        ADR      r0,|L6.80|
        BL       __aeabi_assert
|L6.18|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        MOVS     r0,#0
        STRB     r0,[r4,#1]
        STRB     r0,[r4,#2]
        MOVS     r0,#0xf
        STRB     r0,[r4,#3]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L6.40|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L6.80|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.DAC_GetDefaultConfig||, CODE, READONLY, ALIGN=2

DAC_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L7.8|
        B        |L7.18|
|L7.8|
        MOVS     r2,#0x7f
        ADR      r1,|L7.32|
        ADR      r0,|L7.72|
        BL       __aeabi_assert
|L7.18|
        MOVS     r0,#0
        STRH     r0,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        MOVS     r0,#0
        STRB     r0,[r4,#1]
        POP      {r4,pc}
        ENDP

|L7.32|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L7.72|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.DAC_GetInstance||, CODE, READONLY, ALIGN=2

DAC_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L8.22|
|L8.8|
        LDR      r0,|L8.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L8.20|
        B        |L8.26|
|L8.20|
        ADDS     r4,r4,#1
|L8.22|
        CMP      r4,#2
        BCC      |L8.8|
|L8.26|
        NOP      
        CMP      r4,#2
        BCS      |L8.34|
        B        |L8.44|
|L8.34|
        MOVS     r2,#0x34
        ADR      r1,|L8.52|
        ADR      r0,|L8.92|
        BL       __aeabi_assert
|L8.44|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

|L8.48|
        DCD      s_dacBases
|L8.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L8.92|
        DCB      "instance < ARRAY_SIZE(s_dacBases)",0
        DCB      0
        DCB      0

        AREA ||i.DAC_Init||, CODE, READONLY, ALIGN=2

DAC_Init PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L9.12|
        B        |L9.22|
|L9.12|
        MOVS     r2,#0x46
        ADR      r1,|L9.88|
        ADR      r0,|L9.128|
        BL       __aeabi_assert
|L9.22|
        MOV      r0,r6
        BL       DAC_GetInstance
        LDR      r1,|L9.144|
        LDR      r7,[r1,r0,LSL #2]
        LDR      r1,|L9.148|
        ADD      r0,r1,r7,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r7
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        LDRB     r0,[r6,#0x21]
        BIC      r5,r0,#0x48
        LDRB     r0,[r4,#0]
        CMP      r0,#1
        BNE      |L9.70|
        ORR      r5,r5,#0x40
|L9.70|
        LDRB     r0,[r4,#1]
        CBZ      r0,|L9.78|
        ORR      r5,r5,#8
|L9.78|
        STRB     r5,[r6,#0x21]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L9.88|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L9.128|
        DCB      "NULL != config",0
        DCB      0
|L9.144|
        DCD      s_dacClocks
|L9.148|
        DCD      0x40047000

        AREA ||i.DAC_SetBufferConfig||, CODE, READONLY, ALIGN=2

DAC_SetBufferConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        CBZ      r6,|L10.10|
        B        |L10.20|
|L10.10|
        MOVS     r2,#0x90
        ADR      r1,|L10.92|
        ADR      r0,|L10.132|
        BL       __aeabi_assert
|L10.20|
        LDRB     r0,[r5,#0x21]
        BIC      r4,r0,#0x20
        LDRB     r0,[r6,#0]
        CMP      r0,#1
        BNE      |L10.38|
        ORR      r4,r4,#0x20
|L10.38|
        STRB     r4,[r5,#0x21]!
        LDRB     r0,[r5,#1]
        BIC      r4,r0,#0x1e
        LDRB     r0,[r6,#1]
        MOVS     r1,#0x18
        AND      r0,r1,r0,LSL #3
        ORRS     r4,r4,r0
        LDRB     r0,[r6,#2]
        MOVS     r1,#6
        AND      r0,r1,r0,LSL #1
        ORRS     r4,r4,r0
        STRB     r4,[r5,#1]
        LDRB     r0,[r5,#2]
        BIC      r4,r0,#0xf
        LDRB     r0,[r6,#3]
        AND      r0,r0,#0xf
        ORRS     r4,r4,r0
        STRB     r4,[r5,#2]
        SUBS     r5,r5,#0x21
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L10.92|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L10.132|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.DAC_SetBufferReadPointer||, CODE, READONLY, ALIGN=2

DAC_SetBufferReadPointer PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CMP      r5,#0x10
        BCS      |L11.12|
        B        |L11.22|
|L11.12|
        MOVS     r2,#0xe6
        ADR      r1,|L11.44|
        ADR      r0,|L11.84|
        BL       __aeabi_assert
|L11.22|
        LDRB     r0,[r4,#0x23]
        BIC      r6,r0,#0xf0
        MOVS     r0,#0xf0
        AND      r0,r0,r5,LSL #4
        ORRS     r6,r6,r0
        STRB     r6,[r4,#0x23]
        POP      {r4-r6,pc}
        ENDP

|L11.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L11.84|
        DCB      "index < DAC_DATL_COUNT",0
        DCB      0

        AREA ||i.DAC_SetBufferValue||, CODE, READONLY, ALIGN=2

DAC_SetBufferValue PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CMP      r4,#0x10
        BCS      |L12.14|
        B        |L12.24|
|L12.14|
        MOVS     r2,#0xd4
        ADR      r1,|L12.44|
        ADR      r0,|L12.84|
        BL       __aeabi_assert
|L12.24|
        STRB     r5,[r6,r4,LSL #1]
        AND      r0,r5,#0xf00
        LSRS     r0,r0,#8
        ADD      r1,r6,r4,LSL #1
        STRB     r0,[r1,#1]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L12.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c",0
|L12.84|
        DCB      "index < DAC_DATL_COUNT",0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_dacBases
        DCD      0x400cc000
        DCD      0x400cd000
s_dacClocks
        DCD      0x102c000c
        DCD      0x102c000d

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_dac.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_dac_c_DAC_Init____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_fsl_dac_c_DAC_Init____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_dac_c_DAC_Init____REVSH|
#line 483
|__asm___9_fsl_dac_c_DAC_Init____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_dac_c_DAC_Init____RRX|
#line 670
|__asm___9_fsl_dac_c_DAC_Init____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT DAC_ClearBufferStatusFlags [CODE]
        EXPORT DAC_Deinit [CODE]
        EXPORT DAC_DisableBufferInterrupts [CODE]
        EXPORT DAC_EnableBufferInterrupts [CODE]
        EXPORT DAC_GetBufferStatusFlags [CODE]
        EXPORT DAC_GetDefaultBufferConfig [CODE]
        EXPORT DAC_GetDefaultConfig [CODE]
        EXPORT DAC_Init [CODE]
        EXPORT DAC_SetBufferConfig [CODE]
        EXPORT DAC_SetBufferReadPointer [CODE]
        EXPORT DAC_SetBufferValue [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP DAC_GetInstance
        KEEP s_dacBases
        KEEP s_dacClocks

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
