; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_rnga.o --depend=.\objects\fsl_rnga.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_rnga.crf ..\..\devices\MK66F18\drivers\fsl_rnga.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CLOCK_DisableClock||, CODE, READONLY, ALIGN=2

CLOCK_DisableClock PROC
        LDR      r2,|L1.20|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        BICS     r2,r2,r3
        STR      r2,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L1.20|
        DCD      0x40047000

        AREA ||i.CLOCK_EnableClock||, CODE, READONLY, ALIGN=2

CLOCK_EnableClock PROC
        LDR      r2,|L2.20|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L2.20|
        DCD      0x40047000

        AREA ||i.RNGA_Deinit||, CODE, READONLY, ALIGN=2

RNGA_Deinit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L3.12|
        BL       CLOCK_DisableClock
        POP      {r4,pc}
        ENDP

|L3.12|
        DCD      0x10300000

        AREA ||i.RNGA_GetMode||, CODE, READONLY, ALIGN=1

RNGA_GetMode PROC
        MOV      r1,r0
        LDR      r0,[r1,#4]
        UBFX     r0,r0,#4,#1
        BX       lr
        ENDP


        AREA ||i.RNGA_GetRandomData||, CODE, READONLY, ALIGN=1

RNGA_GetRandomData PROC
        PUSH     {r3-r11,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r11,#0
        MOV      r9,r5
        CBZ      r6,|L5.78|
        CBZ      r5,|L5.78|
        CBZ      r4,|L5.78|
        NOP      
|L5.24|
        MOV      r0,r6
        BL       rnga_ReadEntropy
        STR      r0,[sp,#0]
        MOV      r7,sp
        CMP      r4,#4
        BCS      |L5.42|
        MOV      r8,r4
        B        |L5.46|
|L5.42|
        MOV      r8,#4
|L5.46|
        MOV      r10,#0
        B        |L5.64|
|L5.52|
        LDRB     r0,[r7],#1
        STRB     r0,[r9],#1
        ADD      r10,r10,#1
|L5.64|
        CMP      r10,r8
        BCC      |L5.52|
        SUB      r4,r4,r8
        CMP      r4,#0
        BNE      |L5.24|
        B        |L5.82|
|L5.78|
        MOV      r11,#4
|L5.82|
        MOV      r0,r11
        POP      {r3-r11,pc}
        ENDP


        AREA ||i.RNGA_Init||, CODE, READONLY, ALIGN=2

RNGA_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L6.40|
        BL       CLOCK_EnableClock
        LDR      r0,|L6.40|
        BL       CLOCK_DisableClock
        LDR      r0,|L6.40|
        BL       CLOCK_EnableClock
        MOVS     r0,#0
        STR      r0,[r4,#0]
        LDR      r0,[r4,#0]
        BIC      r0,r0,#1
        ADDS     r0,r0,#1
        STR      r0,[r4,#0]
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L6.40|
        DCD      0x10300000

        AREA ||i.RNGA_Seed||, CODE, READONLY, ALIGN=1

RNGA_Seed PROC
        STR      r1,[r0,#8]
        BX       lr
        ENDP


        AREA ||i.RNGA_SetMode||, CODE, READONLY, ALIGN=1

RNGA_SetMode PROC
        LDR      r2,[r0,#0]
        BFI      r2,r1,#4,#1
        STR      r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.rnga_ReadEntropy||, CODE, READONLY, ALIGN=1

rnga_ReadEntropy PROC
        PUSH     {lr}
        MOV      r2,r0
        MOVS     r3,#0
        MOV      r0,r2
        BL       RNGA_GetMode
        CBNZ     r0,|L9.28|
        NOP      
|L9.16|
        LDR      r0,[r2,#4]
        UBFX     r0,r0,#8,#8
        CMP      r0,#0
        BEQ      |L9.16|
        LDR      r3,[r2,#0xc]
|L9.28|
        MOV      r0,r3
        POP      {pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_rnga.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_rnga_c_3e53f3f3____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_fsl_rnga_c_3e53f3f3____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_rnga_c_3e53f3f3____REVSH|
#line 483
|__asm___10_fsl_rnga_c_3e53f3f3____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_rnga_c_3e53f3f3____RRX|
#line 670
|__asm___10_fsl_rnga_c_3e53f3f3____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT RNGA_Deinit [CODE]
        EXPORT RNGA_GetMode [CODE]
        EXPORT RNGA_GetRandomData [CODE]
        EXPORT RNGA_Init [CODE]
        EXPORT RNGA_Seed [CODE]
        EXPORT RNGA_SetMode [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP CLOCK_DisableClock
        KEEP CLOCK_EnableClock
        KEEP rnga_ReadEntropy

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
