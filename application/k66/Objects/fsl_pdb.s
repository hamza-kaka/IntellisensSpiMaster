; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_pdb.o --depend=.\objects\fsl_pdb.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_pdb.crf ..\..\devices\MK66F18\drivers\fsl_pdb.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.PDB_Deinit||, CODE, READONLY, ALIGN=2

PDB_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r1,#0
        MOV      r0,r5
        BL       PDB_Enable
        MOV      r0,r5
        BL       PDB_GetInstance
        LDR      r1,|L1.44|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L1.48|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L1.44|
        DCD      s_pdbClocks
|L1.48|
        DCD      0x40047000

        AREA ||i.PDB_Enable||, CODE, READONLY, ALIGN=1

PDB_Enable PROC
        CBZ      r1,|L2.12|
        LDR      r2,[r0,#0]
        ORR      r2,r2,#0x80
        STR      r2,[r0,#0]
        B        |L2.20|
|L2.12|
        LDR      r2,[r0,#0]
        BIC      r2,r2,#0x80
        STR      r2,[r0,#0]
|L2.20|
        BX       lr
        ENDP


        AREA ||i.PDB_GetDefaultConfig||, CODE, READONLY, ALIGN=2

PDB_GetDefaultConfig PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBZ      r4,|L3.8|
        B        |L3.18|
|L3.8|
        MOVS     r2,#0x7d
        ADR      r1,|L3.40|
        ADR      r0,|L3.80|
        BL       __aeabi_assert
|L3.18|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STRB     r0,[r4,#4]
        STRB     r0,[r4,#0]
        STRB     r0,[r4,#1]
        STRB     r0,[r4,#2]
        MOVS     r0,#0xf
        STRB     r0,[r4,#3]
        MOVS     r0,#0
        STRB     r0,[r4,#4]
        POP      {r4,pc}
        ENDP

|L3.40|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_pdb.c",0
|L3.80|
        DCB      "NULL != config",0
        DCB      0

        AREA ||i.PDB_GetInstance||, CODE, READONLY, ALIGN=2

PDB_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L4.22|
|L4.8|
        LDR      r0,|L4.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L4.20|
        B        |L4.26|
|L4.20|
        ADDS     r4,r4,#1
|L4.22|
        CMP      r4,#0
        BEQ      |L4.8|
|L4.26|
        NOP      
        CBNZ     r4,|L4.32|
        B        |L4.42|
|L4.32|
        MOVS     r2,#0x34
        ADR      r1,|L4.52|
        ADR      r0,|L4.92|
        BL       __aeabi_assert
|L4.42|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L4.48|
        DCD      s_pdbBases
|L4.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_pdb.c",0
|L4.92|
        DCB      "instance < ARRAY_SIZE(s_pdbBases)",0
        DCB      0
        DCB      0

        AREA ||i.PDB_Init||, CODE, READONLY, ALIGN=2

PDB_Init PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L5.12|
        B        |L5.22|
|L5.12|
        MOVS     r2,#0x46
        ADR      r1,|L5.128|
        ADR      r0,|L5.168|
        BL       __aeabi_assert
|L5.22|
        MOV      r0,r5
        BL       PDB_GetInstance
        LDR      r1,|L5.184|
        LDR      r7,[r1,r0,LSL #2]
        LDR      r1,|L5.188|
        ADD      r0,r1,r7,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r7
        ORRS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        LDR      r0,[r5,#0]
        LDR      r1,|L5.192|
        AND      r6,r0,r1
        LDRB     r0,[r4,#0]
        MOV      r1,#0xc0000
        AND      r0,r1,r0,LSL #18
        LDRB     r1,[r4,#1]
        MOV      r2,#0x7000
        AND      r1,r2,r1,LSL #12
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#3]
        MOV      r2,#0xf00
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#2]
        MOVS     r2,#0xc
        AND      r1,r2,r1,LSL #2
        ORRS     r0,r0,r1
        ORRS     r6,r6,r0
        LDRB     r0,[r4,#4]
        CBZ      r0,|L5.114|
        ORR      r6,r6,#2
|L5.114|
        STR      r6,[r5,#0]
        MOVS     r1,#1
        MOV      r0,r5
        BL       PDB_Enable
        POP      {r4-r8,pc}
        ENDP

|L5.128|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_pdb.c",0
|L5.168|
        DCB      "NULL != config",0
        DCB      0
|L5.184|
        DCD      s_pdbClocks
|L5.188|
        DCD      0x40047000
|L5.192|
        DCD      0xfff380f1

        AREA ||i.PDB_SetDACTriggerConfig||, CODE, READONLY, ALIGN=2

PDB_SetDACTriggerConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r6,r1
        MOV      r4,r2
        CMP      r6,#2
        BGE      |L6.16|
        B        |L6.26|
|L6.16|
        MOVS     r2,#0x93
        ADR      r1,|L6.72|
        ADR      r0,|L6.112|
        BL       __aeabi_assert
|L6.26|
        CBZ      r4,|L6.30|
        B        |L6.40|
|L6.30|
        MOVS     r2,#0x94
        ADR      r1,|L6.72|
        ADR      r0,|L6.168|
        BL       __aeabi_assert
|L6.40|
        MOVS     r5,#0
        LDRB     r0,[r4,#0]
        CBZ      r0,|L6.50|
        ORR      r5,r5,#2
|L6.50|
        LDRB     r0,[r4,#1]
        CBZ      r0,|L6.58|
        ORR      r5,r5,#1
|L6.58|
        ADD      r0,r7,#0x150
        STR      r5,[r0,r6,LSL #3]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L6.72|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_pdb.c",0
|L6.112|
        DCB      "channel < FSL_FEATURE_PDB_DAC_INTERVAL_TRIGGER_COUNT",0
        DCB      0
        DCB      0
        DCB      0
|L6.168|
        DCB      "NULL != config",0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_pdbBases
        DCD      0x40036000
s_pdbClocks
        DCD      0x103c0016

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_pdb.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_pdb_c_PDB_Init____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_fsl_pdb_c_PDB_Init____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_pdb_c_PDB_Init____REVSH|
#line 483
|__asm___9_fsl_pdb_c_PDB_Init____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_pdb_c_PDB_Init____RRX|
#line 670
|__asm___9_fsl_pdb_c_PDB_Init____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT PDB_Deinit [CODE]
        EXPORT PDB_GetDefaultConfig [CODE]
        EXPORT PDB_Init [CODE]
        EXPORT PDB_SetDACTriggerConfig [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP PDB_Enable
        KEEP PDB_GetInstance
        KEEP s_pdbBases
        KEEP s_pdbClocks

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
