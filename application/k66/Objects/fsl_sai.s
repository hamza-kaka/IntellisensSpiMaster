; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_sai.o --depend=.\objects\fsl_sai.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_sai.crf ..\..\devices\MK66F18\drivers\fsl_sai.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.CLOCK_EnableClock||, CODE, READONLY, ALIGN=2

CLOCK_EnableClock PROC
        LDR      r2,|L1.20|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L1.20|
        DCD      0x40047000

        AREA ||i.EnableIRQ||, CODE, READONLY, ALIGN=1

EnableIRQ PROC
        MOV      r1,r0
        CMN      r1,#0x80
        BNE      |L2.12|
        MOVS     r0,#1
|L2.10|
        BX       lr
|L2.12|
        MOV      r0,r1
        CMP      r0,#0
        BLT      |L2.38|
        AND      r3,r0,#0x1f
        MOVS     r2,#1
        LSLS     r2,r2,r3
        LSRS     r3,r0,#5
        LSLS     r3,r3,#2
        ADD      r3,r3,#0xe000e000
        STR      r2,[r3,#0x100]
|L2.38|
        NOP      
        MOVS     r0,#0
        B        |L2.10|
        ENDP


        AREA ||i.I2S0_DriverIRQHandler||, CODE, READONLY, ALIGN=2

I2S0_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L3.148|
        LDR      r0,[r0,#4]  ; s_saiHandle
        CBZ      r0,|L3.62|
        LDR      r0,|L3.152|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10000
        CBNZ     r0,|L3.28|
        LDR      r0,|L3.152|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x40000
        CBZ      r0,|L3.62|
|L3.28|
        LDR      r0,|L3.152|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBNZ     r0,|L3.48|
        LDR      r0,|L3.152|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x400
        CBZ      r0,|L3.62|
|L3.48|
        LDR      r0,|L3.148|
        LDR      r1,[r0,#4]  ; s_saiHandle
        LDR      r0,|L3.152|
        SUBS     r0,r0,#0x80
        LDR      r2,|L3.156|
        LDR      r2,[r2,#0]  ; s_saiRxIsr
        BLX      r2
|L3.62|
        LDR      r0,|L3.148|
        LDR      r0,[r0,#0]  ; s_saiHandle
        CBZ      r0,|L3.130|
        LDR      r0,|L3.152|
        SUBS     r0,r0,#0x80
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10000
        CBNZ     r0,|L3.92|
        LDR      r0,|L3.152|
        SUBS     r0,r0,#0x80
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x40000
        CBZ      r0,|L3.130|
|L3.92|
        LDR      r0,|L3.152|
        SUBS     r0,r0,#0x80
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBNZ     r0,|L3.116|
        LDR      r0,|L3.152|
        SUBS     r0,r0,#0x80
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x400
        CBZ      r0,|L3.130|
|L3.116|
        LDR      r0,|L3.148|
        LDR      r1,[r0,#0]  ; s_saiHandle
        LDR      r0,|L3.152|
        SUBS     r0,r0,#0x80
        LDR      r2,|L3.160|
        LDR      r2,[r2,#0]  ; s_saiTxIsr
        BLX      r2
|L3.130|
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L3.148|
        DCD      s_saiHandle
|L3.152|
        DCD      0x4002f080
|L3.156|
        DCD      s_saiRxIsr
|L3.160|
        DCD      s_saiTxIsr

        AREA ||i.I2S0_Rx_DriverIRQHandler||, CODE, READONLY, ALIGN=2

I2S0_Rx_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L4.52|
        LDR      r0,[r0,#4]  ; s_saiHandle
        CBZ      r0,|L4.10|
        B        |L4.22|
|L4.10|
        MOV      r2,#0xafe
        ADR      r1,|L4.56|
        ADR      r0,|L4.96|
        BL       __aeabi_assert
|L4.22|
        LDR      r0,|L4.52|
        LDR      r1,[r0,#4]  ; s_saiHandle
        LDR      r0,|L4.116|
        LDR      r2,|L4.120|
        LDR      r2,[r2,#0]  ; s_saiRxIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L4.52|
        DCD      s_saiHandle
|L4.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L4.96|
        DCB      "s_saiHandle[0][1]",0
        DCB      0
        DCB      0
|L4.116|
        DCD      0x4002f000
|L4.120|
        DCD      s_saiRxIsr

        AREA ||i.I2S0_Tx_DriverIRQHandler||, CODE, READONLY, ALIGN=2

I2S0_Tx_DriverIRQHandler PROC
        PUSH     {r4,lr}
        LDR      r0,|L5.52|
        LDR      r0,[r0,#0]  ; s_saiHandle
        CBZ      r0,|L5.10|
        B        |L5.22|
|L5.10|
        MOV      r2,#0xaf3
        ADR      r1,|L5.56|
        ADR      r0,|L5.96|
        BL       __aeabi_assert
|L5.22|
        LDR      r0,|L5.52|
        LDR      r1,[r0,#0]  ; s_saiHandle
        LDR      r0,|L5.116|
        LDR      r2,|L5.120|
        LDR      r2,[r2,#0]  ; s_saiTxIsr
        BLX      r2
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        POP      {r4,pc}
        ENDP

|L5.52|
        DCD      s_saiHandle
|L5.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L5.96|
        DCB      "s_saiHandle[0][0]",0
        DCB      0
        DCB      0
|L5.116|
        DCD      0x4002f000
|L5.120|
        DCD      s_saiTxIsr

        AREA ||i.SAI_Deinit||, CODE, READONLY, ALIGN=2

SAI_Deinit PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r1,#0
        MOV      r0,r5
        BL       SAI_TxEnable
        MOVS     r1,#0
        MOV      r0,r5
        BL       SAI_RxEnable
        MOV      r0,r5
        BL       SAI_GetInstance
        LDR      r1,|L6.52|
        LDR      r4,[r1,r0,LSL #2]
        LDR      r1,|L6.56|
        ADD      r0,r1,r4,LSR #16
        LDR      r1,[r0,#0]
        MOVS     r2,#1
        LSLS     r2,r2,r4
        BICS     r1,r1,r2
        STR      r1,[r0,#0]
        NOP      
        POP      {r4-r6,pc}
        ENDP

|L6.52|
        DCD      s_saiClock
|L6.56|
        DCD      0x40047000

        AREA ||i.SAI_GetClassicI2SConfig||, CODE, READONLY, ALIGN=1

SAI_GetClassicI2SConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       SAI_GetCommonConfig
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.SAI_GetCommonConfig||, CODE, READONLY, ALIGN=2

SAI_GetCommonConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r7,r2
        MOV      r6,r3
        CBZ      r4,|L8.16|
        B        |L8.28|
|L8.16|
        MOV      r2,#0x128
        ADR      r1,|L8.108|
        ADR      r0,|L8.148|
        BL       __aeabi_assert
|L8.28|
        CBZ      r6,|L8.32|
        B        |L8.44|
|L8.32|
        MOV      r2,#0x129
        ADR      r1,|L8.108|
        ADR      r0,|L8.164|
        BL       __aeabi_assert
|L8.44|
        MOVS     r1,#0x1c
        MOV      r0,r4
        BL       __aeabi_memclr4
        STRB     r6,[r4,#0x19]
        MOVS     r0,#0
        STRB     r0,[r4,#0x17]
        STRB     r0,[r4,#0x16]
        STRB     r0,[r4,#0xf]
        MOVS     r1,#0
        STRB     r1,[r4,#0x10]
        MOVS     r1,#1
        STRB     r1,[r4,#0x11]
        STRB     r1,[r4,#0x12]
        STRB     r5,[r4,#0xc]
        STRB     r1,[r4,#0xd]
        STRB     r1,[r4,#0xe]
        MOVS     r0,#1
        STRB     r0,[r4,#0]
        STRB     r5,[r4,#1]
        STRB     r5,[r4,#3]
        STRB     r5,[r4,#2]
        STRB     r5,[r4,#4]
        MOVS     r0,#2
        STRB     r0,[r4,#5]
        STR      r7,[r4,#8]
        MOVS     r1,#4
        STRB     r1,[r4,#0x15]
        MOVS     r0,#1
        STRB     r0,[r4,#0x13]
        POP      {r4-r8,pc}
        ENDP

|L8.108|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L8.148|
        DCB      "NULL != config",0
        DCB      0
|L8.164|
        DCB      "saiChannelMask != 0U",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SAI_GetDSPConfig||, CODE, READONLY, ALIGN=2

SAI_GetDSPConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        LDR      r8,[sp,#0x18]
        CBZ      r4,|L9.20|
        B        |L9.32|
|L9.20|
        MOV      r2,#0x69e
        ADR      r1,|L9.96|
        ADR      r0,|L9.136|
        BL       __aeabi_assert
|L9.32|
        CMP      r8,#0
        BEQ      |L9.40|
        B        |L9.52|
|L9.40|
        MOV      r2,#0x69f
        ADR      r1,|L9.96|
        ADR      r0,|L9.152|
        BL       __aeabi_assert
|L9.52|
        MOV      r3,r8
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       SAI_GetCommonConfig
        CBNZ     r5,|L9.72|
        MOVS     r0,#1
        STRB     r0,[r4,#0xc]
        B        |L9.84|
|L9.72|
        MOV      r2,#0x6aa
        ADR      r1,|L9.96|
        ADR      r0,|L9.176|
        BL       __aeabi_assert
|L9.84|
        NOP      
        MOVS     r1,#0
        STRB     r1,[r4,#0xd]
        STRB     r1,[r4,#0xe]
        POP      {r4-r8,pc}
        ENDP

|L9.96|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L9.136|
        DCB      "NULL != config",0
        DCB      0
|L9.152|
        DCB      "saiChannelMask != 0U",0
        DCB      0
        DCB      0
        DCB      0
|L9.176|
        DCB      "false",0
        DCB      0
        DCB      0

        AREA ||i.SAI_GetInstance||, CODE, READONLY, ALIGN=2

SAI_GetInstance PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOVS     r4,#0
        B        |L10.22|
|L10.8|
        LDR      r0,|L10.48|
        LDR      r0,[r0,r4,LSL #2]
        CMP      r0,r5
        BNE      |L10.20|
        B        |L10.26|
|L10.20|
        ADDS     r4,r4,#1
|L10.22|
        CMP      r4,#0
        BEQ      |L10.8|
|L10.26|
        NOP      
        CBNZ     r4,|L10.32|
        B        |L10.42|
|L10.32|
        MOVS     r2,#0xdf
        ADR      r1,|L10.52|
        ADR      r0,|L10.92|
        BL       __aeabi_assert
|L10.42|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L10.48|
        DCD      s_saiBases
|L10.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L10.92|
        DCB      "instance < ARRAY_SIZE(s_saiBases)",0
        DCB      0
        DCB      0

        AREA ||i.SAI_GetLeftJustifiedConfig||, CODE, READONLY, ALIGN=2

SAI_GetLeftJustifiedConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r5,r3
        CBZ      r4,|L11.16|
        B        |L11.28|
|L11.16|
        MOV      r2,#0x671
        ADR      r1,|L11.68|
        ADR      r0,|L11.108|
        BL       __aeabi_assert
|L11.28|
        CBZ      r5,|L11.32|
        B        |L11.44|
|L11.32|
        MOV      r2,#0x672
        ADR      r1,|L11.68|
        ADR      r0,|L11.124|
        BL       __aeabi_assert
|L11.44|
        MOV      r3,r5
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       SAI_GetCommonConfig
        MOVS     r1,#0
        STRB     r1,[r4,#0xd]
        STRB     r1,[r4,#0xe]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L11.68|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L11.108|
        DCB      "NULL != config",0
        DCB      0
|L11.124|
        DCB      "saiChannelMask != 0U",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SAI_GetRightJustifiedConfig||, CODE, READONLY, ALIGN=2

SAI_GetRightJustifiedConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r5,r3
        CBZ      r4,|L12.16|
        B        |L12.28|
|L12.16|
        MOV      r2,#0x687
        ADR      r1,|L12.68|
        ADR      r0,|L12.108|
        BL       __aeabi_assert
|L12.28|
        CBZ      r5,|L12.32|
        B        |L12.44|
|L12.32|
        MOV      r2,#0x688
        ADR      r1,|L12.68|
        ADR      r0,|L12.124|
        BL       __aeabi_assert
|L12.44|
        MOV      r3,r5
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r4
        BL       SAI_GetCommonConfig
        MOVS     r1,#0
        STRB     r1,[r4,#0xd]
        STRB     r1,[r4,#0xe]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L12.68|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L12.108|
        DCB      "NULL != config",0
        DCB      0
|L12.124|
        DCB      "saiChannelMask != 0U",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.SAI_GetTDMConfig||, CODE, READONLY, ALIGN=2

SAI_GetTDMConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r5,r3
        LDR      r8,[sp,#0x18]
        CBZ      r4,|L13.20|
        B        |L13.32|
|L13.20|
        MOV      r2,#0x6be
        ADR      r1,|L13.124|
        ADR      r0,|L13.164|
        BL       __aeabi_assert
|L13.32|
        CMP      r8,#0
        BEQ      |L13.40|
        B        |L13.52|
|L13.40|
        MOV      r2,#0x6bf
        ADR      r1,|L13.124|
        ADR      r0,|L13.180|
        BL       __aeabi_assert
|L13.52|
        CMP      r5,#0x20
        BHI      |L13.58|
        B        |L13.70|
|L13.58|
        MOV      r2,#0x6c0
        ADR      r1,|L13.124|
        ADR      r0,|L13.204|
        BL       __aeabi_assert
|L13.70|
        MOV      r3,r8
        MOVS     r2,#0
        MOV      r1,r7
        MOV      r0,r4
        BL       SAI_GetCommonConfig
        CBZ      r6,|L13.90|
        CMP      r6,#1
        BNE      |L13.98|
        B        |L13.96|
|L13.90|
        MOVS     r0,#1
        STRB     r0,[r4,#0xc]
        B        |L13.110|
|L13.96|
        B        |L13.110|
|L13.98|
        MOV      r2,#0x6cd
        ADR      r1,|L13.124|
        ADR      r0,|L13.224|
        BL       __aeabi_assert
|L13.110|
        NOP      
        MOVS     r1,#0
        STRB     r1,[r4,#0xd]
        STRB     r1,[r4,#0xe]
        STRB     r5,[r4,#5]
        POP      {r4-r8,pc}
        ENDP

|L13.124|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L13.164|
        DCB      "NULL != config",0
        DCB      0
|L13.180|
        DCB      "saiChannelMask != 0U",0
        DCB      0
        DCB      0
        DCB      0
|L13.204|
        DCB      "dataWordNum <= 32U",0
        DCB      0
|L13.224|
        DCB      "false",0
        DCB      0
        DCB      0

        AREA ||i.SAI_Init||, CODE, READONLY, ALIGN=2

SAI_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       SAI_GetInstance
        LDR      r1,|L14.24|
        LDR      r5,[r1,r0,LSL #2]
        MOV      r0,r5
        BL       CLOCK_EnableClock
        POP      {r4-r6,pc}
        ENDP

|L14.24|
        DCD      s_saiClock

        AREA ||i.SAI_ReadBlocking||, CODE, READONLY, ALIGN=1

SAI_ReadBlocking PROC
        PUSH     {r1-r11,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r8,r3
        LDR      r10,[sp,#0x30]
        MOV      r9,#0
        UBFX     r4,r7,#3,#8
        LDR      r0,[r5,#0x84]
        MULS     r0,r4,r0
        UXTB     r4,r0
        B        |L15.74|
|L15.34|
        NOP      
|L15.36|
        LDR      r0,[r5,#0x80]
        AND      r0,r0,#0x20000
        CMP      r0,#0
        BEQ      |L15.36|
        MOVS     r0,#1
        LSL      r2,r0,r6
        MOV      r3,r6
        MOV      r1,r6
        MOV      r0,r5
        STRD     r7,r8,[sp,#0]
        STR      r4,[sp,#8]
        BL       SAI_ReadNonBlocking
        ADD      r8,r8,r4
        ADD      r9,r9,r4
|L15.74|
        CMP      r9,r10
        BCC      |L15.34|
        POP      {r1-r11,pc}
        ENDP


        AREA ||i.SAI_ReadMultiChannelBlocking||, CODE, READONLY, ALIGN=2

SAI_ReadMultiChannelBlocking PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0x14
        MOV      r6,r0
        MOV      r9,r2
        MOV      r7,r3
        LDR      r10,[sp,#0x48]
        MOVS     r5,#0
        MOV      r11,r5
        UBFX     r4,r7,#3,#8
        MOV      r8,r5
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        LDR      r0,[r6,#0x84]
        MULS     r0,r4,r0
        UXTB     r4,r0
        NOP      
        B        |L16.60|
|L16.42|
        MOVS     r0,#1
        LSLS     r0,r0,r5
        AND      r0,r0,r9
        CBZ      r0,|L16.58|
        ADD      r8,r8,#1
        STR      r5,[sp,#0x10]
|L16.58|
        ADDS     r5,r5,#1
|L16.60|
        CMP      r5,#2
        BCC      |L16.42|
        CMP      r8,#2
        BHI      |L16.72|
        B        |L16.84|
|L16.72|
        MOV      r2,#0x868
        ADR      r1,|L16.140|
        ADR      r0,|L16.180|
        BL       __aeabi_assert
|L16.84|
        MUL      r0,r4,r8
        UXTB     r4,r0
        B        |L16.128|
|L16.92|
        NOP      
|L16.94|
        LDR      r0,[r6,#0x80]
        AND      r0,r0,#0x20000
        CMP      r0,#0
        BEQ      |L16.94|
        STRD     r7,r10,[sp,#0]
        STR      r4,[sp,#8]
        MOV      r2,r9
        MOV      r0,r6
        LDR      r3,[sp,#0x10]
        LDR      r1,[sp,#0x18]
        BL       SAI_ReadNonBlocking
        ADD      r10,r10,r4
        ADD      r11,r11,r4
|L16.128|
        LDR      r0,[sp,#0x4c]
        CMP      r11,r0
        BCC      |L16.92|
        ADD      sp,sp,#0x24
        POP      {r4-r11,pc}
        ENDP

|L16.140|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L16.180|
        DCB      "channelNums <= FSL_FEATURE_SAI_CHANNEL_COUNTn(base)",0

        AREA ||i.SAI_ReadNonBlocking||, CODE, READONLY, ALIGN=1

SAI_ReadNonBlocking PROC
        PUSH     {r4-r11,lr}
        MOV      r5,r0
        MOV      r6,r1
        LDRD     r12,r4,[sp,#0x24]
        LDR      r8,[sp,#0x2c]
        MOVS     r7,#0
        MOVS     r0,#0
        MOVS     r1,#0
        UBFX     r9,r12,#3,#8
        MOV      r10,r0
        NOP      
        B        |L17.106|
|L17.32|
        UXTB     r0,r6
        B        |L17.100|
|L17.36|
        MOV      r11,#1
        LSL      r11,r11,r0
        AND      r11,r11,r2
        CMP      r11,#0
        BEQ      |L17.92|
        ADD      r11,r5,#0xa0
        LDR      r10,[r11,r0,LSL #2]
        MOVS     r1,#0
        B        |L17.88|
|L17.66|
        LSL      r11,r1,#3
        LSR      r11,r10,r11
        STRB     r11,[r4,#0]
        ADDS     r4,r4,#1
        ADD      r11,r1,#1
        AND      r1,r11,#0xff
|L17.88|
        CMP      r1,r9
        BLT      |L17.66|
|L17.92|
        ADD      r11,r0,#1
        AND      r0,r11,#0xff
|L17.100|
        CMP      r0,r3
        BLS      |L17.36|
        ADDS     r7,r7,#1
|L17.106|
        UDIV     r11,r8,r9
        CMP      r11,r7
        BHI      |L17.32|
        POP      {r4-r11,pc}
        ENDP


        AREA ||i.SAI_RxClearStatusFlags||, CODE, READONLY, ALIGN=1

SAI_RxClearStatusFlags PROC
        LDR      r2,[r0,#0x80]
        BIC      r2,r2,#0x1c0000
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x80]
        BX       lr
        ENDP


        AREA ||i.SAI_RxEnable||, CODE, READONLY, ALIGN=1

SAI_RxEnable PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBZ      r5,|L19.60|
        LDR      r0,[r4,#0x88]
        MOVS     r1,#1
        CMP      r1,r0,LSR #30
        BNE      |L19.32|
        LDR      r0,[r4,#0]
        BIC      r0,r0,#0x1c0000
        ORR      r0,r0,#0x80000000
        STR      r0,[r4,#0]
|L19.32|
        LDR      r0,[r4,#0x80]
        BIC      r0,r0,#0x1c0000
        ORR      r0,r0,#0x80000000
        STR      r0,[r4,#0x80]
        MOV      r1,#0x40000
        MOV      r0,r4
        BL       SAI_RxClearStatusFlags
        B        |L19.86|
|L19.60|
        LDR      r0,[r4,#8]
        MOVS     r1,#1
        CMP      r1,r0,LSR #30
        BEQ      |L19.86|
        LDR      r0,[r4,#0x80]
        BIC      r0,r0,#0x1c0000
        BIC      r0,r0,#0x80000000
        STR      r0,[r4,#0x80]
|L19.86|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SAI_RxGetDefaultConfig||, CODE, READONLY, ALIGN=1

SAI_RxGetDefaultConfig PROC
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STRH     r1,[r0,#4]
        MOVS     r1,#1
        STRB     r1,[r0,#4]
        MOVS     r1,#0
        STRB     r1,[r0,#5]
        MOVS     r1,#1
        STRB     r1,[r0,#2]
        MOVS     r1,#0
        STRB     r1,[r0,#3]
        MOVS     r1,#2
        STRB     r1,[r0,#0]
        MOVS     r1,#1
        STRB     r1,[r0,#1]
        BX       lr
        ENDP


        AREA ||i.SAI_RxInit||, CODE, READONLY, ALIGN=2

SAI_RxInit PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOVS     r5,#0
        MOV      r0,r4
        BL       SAI_GetInstance
        LDR      r1,|L21.392|
        LDR      r7,[r1,r0,LSL #2]
        MOV      r0,r7
        BL       CLOCK_EnableClock
        LDR      r0,[r4,#0x100]
        BIC      r5,r0,#0x3000000
        LDRB     r0,[r6,#3]
        MOV      r1,#0x3000000
        AND      r0,r1,r0,LSL #24
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x100]
        LDR      r0,[r4,#0x100]
        BIC      r5,r0,#0x40000000
        LDRB     r0,[r6,#2]
        MOV      r1,#0x40000000
        AND      r0,r1,r0,LSL #30
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x100]
        MOV      r0,r4
        BL       SAI_RxReset
        LDRB     r0,[r6,#0]
        CMP      r0,#5
        BCS      |L21.232|
        TBB      [pc,r0]
        DCB      0x03,0x10,0x1d,0x2b
        DCB      0x38,0x00
        LDR      r0,[r4,#0x88]!
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#4]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#4]
        LDR      r0,|L21.396|
        STR      r0,[r4,#8]
        SUBS     r4,r4,#0x88
        B        |L21.234|
        LDR      r0,[r4,#0x88]!
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#4]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#4]
        LDR      r0,|L21.396|
        STR      r0,[r4,#8]
        SUBS     r4,r4,#0x88
        B        |L21.234|
        LDR      r0,[r4,#0x88]!
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#4]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#4]
        LDR      r0,|L21.396|
        ADDS     r0,r0,#0xa
        STR      r0,[r4,#8]
        SUBS     r4,r4,#0x88
        B        |L21.234|
        LDR      r0,[r4,#0x88]!
        BIC      r0,r0,#0x2000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#4]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#4]
        LDR      r0,|L21.400|
        STR      r0,[r4,#8]
        SUBS     r4,r4,#0x88
        B        |L21.234|
        LDR      r0,[r4,#0x88]!
        BIC      r0,r0,#0x2000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#4]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#4]
        LDR      r0,|L21.400|
        SUBS     r0,r0,#8
        STR      r0,[r4,#8]
        SUBS     r4,r4,#0x88
        B        |L21.234|
|L21.232|
        NOP      
|L21.234|
        NOP      
        LDRB     r0,[r6,#5]
        CBNZ     r0,|L21.282|
        LDR      r0,[r4,#0x88]!
        ORR      r0,r0,#0x1000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        ORR      r0,r0,#1
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        BIC      r5,r0,#0xc000000
        LDRB     r0,[r6,#4]
        MOV      r1,#0xc000000
        AND      r0,r1,r0,LSL #26
        ORRS     r0,r0,r5
        STR      r0,[r4],#-0x88
        B        |L21.302|
|L21.282|
        LDR      r0,[r4,#0x88]!
        BIC      r0,r0,#0x1000000
        STR      r0,[r4,#0]
        LDR      r0,[r4,#8]
        BIC      r0,r0,#1
        STR      r0,[r4,#8]
        SUBS     r4,r4,#0x88
|L21.302|
        LDRB     r0,[r6,#1]
        CBZ      r0,|L21.312|
        CMP      r0,#1
        BNE      |L21.352|
        B        |L21.326|
|L21.312|
        LDR      r5,[r4,#0x88]
        BIC      r5,r5,#0xc0000000
        STR      r5,[r4,#0x88]
        B        |L21.354|
|L21.326|
        LDR      r5,[r4,#0x88]
        BIC      r5,r5,#0xc0000000
        ORR      r0,r5,#0x40000000
        STR      r0,[r4,#0x88]
        LDR      r5,[r4,#8]
        BIC      r5,r5,#0xc0000000
        STR      r5,[r4,#8]
        B        |L21.354|
|L21.352|
        NOP      
|L21.354|
        NOP      
        MOVS     r0,#1
        CBZ      r0,|L21.374|
        LDR      r1,[r4,#0x90]
        ORR      r1,r1,#0x10000000
        STR      r1,[r4,#0x90]
        B        |L21.386|
|L21.374|
        LDR      r1,[r4,#0x90]
        BIC      r1,r1,#0x10000000
        STR      r1,[r4,#0x90]
|L21.386|
        NOP      
        POP      {r4-r8,pc}
        ENDP

|L21.392|
        DCD      s_saiClock
|L21.396|
        DCD      0x00011f10
|L21.400|
        DCD      0x00010018

        AREA ||i.SAI_RxReset||, CODE, READONLY, ALIGN=1

SAI_RxReset PROC
        MOV      r1,#0x3000000
        STR      r1,[r0,#0x80]!
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0x1000000
        STR      r1,[r0,#0]
        MOVS     r1,#0
        STR      r1,[r0,#8]
        STR      r1,[r0,#0xc]
        STR      r1,[r0,#0x10]
        STR      r1,[r0,#0x14]
        STR      r1,[r0,#0x60]
        SUBS     r0,r0,#0x80
        BX       lr
        ENDP


        AREA ||i.SAI_RxSetBitClockPolarity||, CODE, READONLY, ALIGN=1

SAI_RxSetBitClockPolarity PROC
        LDR      r3,[r0,#0x88]
        BIC      r2,r3,#0x2000000
        MOV      r3,#0x2000000
        AND      r3,r3,r1,LSL #25
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x88]
        BX       lr
        ENDP


        AREA ||i.SAI_RxSetBitClockRate||, CODE, READONLY, ALIGN=2

SAI_RxSetBitClockRate PROC
        PUSH     {r4-r12,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r9,r2
        MOV      r10,r3
        LDR      r11,[sp,#0x28]
        LDR      r7,[r6,#0x88]
        MOVS     r4,#0
        MUL      r0,r9,r10
        MUL      r8,r0,r11
        CMP      r5,r8
        BCC      |L24.36|
        B        |L24.48|
|L24.36|
        MOV      r2,#0x41c
        ADR      r1,|L24.88|
        ADR      r0,|L24.128|
        BL       __aeabi_assert
|L24.48|
        BIC      r7,r7,#0xff
        UDIV     r4,r5,r8
        CBNZ     r4,|L24.60|
        ADDS     r4,r4,#1
|L24.60|
        UDIV     r0,r5,r4
        CMP      r0,r8
        BLS      |L24.70|
        ADDS     r4,r4,#1
|L24.70|
        MOVS     r0,#1
        RSB      r0,r0,r4,LSR #1
        UXTB     r0,r0
        ORRS     r7,r7,r0
        STR      r7,[r6,#0x88]
        POP      {r4-r12,pc}
        ENDP

|L24.88|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L24.128|
        DCB      "sourceClockHz >= bitClockFreq",0
        DCB      0
        DCB      0

        AREA ||i.SAI_RxSetBitclockConfig||, CODE, READONLY, ALIGN=2

SAI_RxSetBitclockConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r4,r2
        LDR      r5,[r6,#0x88]
        CBZ      r7,|L25.20|
        CMP      r7,#2
        BNE      |L25.92|
|L25.20|
        CBZ      r4,|L25.24|
        B        |L25.36|
|L25.24|
        MOV      r2,#0x463
        ADR      r1,|L25.104|
        ADR      r0,|L25.144|
        BL       __aeabi_assert
|L25.36|
        BIC      r5,r5,#0x3f000000
        LDRB     r0,[r4,#2]
        MOV      r1,#0x2000000
        AND      r0,r1,r0,LSL #25
        ORR      r0,r0,#0x1000000
        LDRB     r1,[r4,#1]
        MOV      r2,#0x10000000
        AND      r1,r2,r1,LSL #28
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0]
        LSLS     r2,r2,#1
        AND      r1,r2,r1,LSL #29
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#3]
        MOV      r2,#0xc000000
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        B        |L25.96|
|L25.92|
        BIC      r5,r5,#0x1000000
|L25.96|
        STR      r5,[r6,#0x88]
        POP      {r4-r8,pc}
        ENDP

|L25.104|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L25.144|
        DCB      "config != NULL",0
        DCB      0

        AREA ||i.SAI_RxSetChannelFIFOMask||, CODE, READONLY, ALIGN=1

SAI_RxSetChannelFIFOMask PROC
        LDR      r2,[r0,#0x8c]!
        BIC      r2,r2,#0x30000
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        MOV      r3,#0x30000
        AND      r3,r3,r1,LSL #16
        ORRS     r2,r2,r3
        STR      r2,[r0],#-0x8c
        BX       lr
        ENDP


        AREA ||i.SAI_RxSetConfig||, CODE, READONLY, ALIGN=2

SAI_RxSetConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L27.12|
        B        |L27.24|
|L27.12|
        MOV      r2,#0x5e1
        ADR      r1,|L27.252|
        ADR      r0,|L27.292|
        BL       __aeabi_assert
|L27.24|
        MOVS     r6,#0
        MOVS     r7,#0
        MOV      r8,r6
        MOV      r0,r5
        BL       SAI_RxReset
        LDRB     r0,[r4,#0x19]
        CBNZ     r0,|L27.48|
        LDRB     r1,[r4,#0x18]
        MOVS     r0,#1
        LSLS     r0,r0,r1
        STRB     r0,[r4,#0x19]
|L27.48|
        MOVS     r7,#0
        B        |L27.78|
|L27.52|
        MOVS     r0,#1
        LSLS     r0,r0,r7
        LDRB     r1,[r4,#0x19]
        ANDS     r0,r0,r1
        CBZ      r0,|L27.76|
        CMP      r8,#0
        BNE      |L27.70|
        STRB     r7,[r4,#0x18]
|L27.70|
        ADD      r8,r8,#1
        STRB     r7,[r4,#0x1a]
|L27.76|
        ADDS     r7,r7,#1
|L27.78|
        CMP      r7,#2
        BCC      |L27.52|
        CMP      r8,#2
        BHI      |L27.90|
        B        |L27.102|
|L27.90|
        MOV      r2,#0x5fe
        ADR      r1,|L27.252|
        ADR      r0,|L27.308|
        BL       __aeabi_assert
|L27.102|
        STRB     r8,[r4,#0x1b]
        LDRB     r0,[r4,#0x1b]
        CMP      r0,#1
        BLS      |L27.124|
        LDR      r0,[r5,#0x90]
        BIC      r0,r0,#0xc000000
        STR      r0,[r5,#0x90]
|L27.124|
        LDR      r0,[r5,#0x8c]!
        BIC      r0,r0,#0x30000
        STR      r0,[r5,#0]
        LDR      r0,[r5,#0]
        LDRB     r1,[r4,#0x19]
        MOV      r2,#0x30000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r5],#-0x8c
        LDRB     r0,[r4,#0x17]
        CBZ      r0,|L27.162|
        CMP      r0,#1
        BNE      |L27.202|
        B        |L27.176|
|L27.162|
        LDR      r6,[r5,#0x88]
        BIC      r6,r6,#0xc0000000
        STR      r6,[r5,#0x88]
        B        |L27.204|
|L27.176|
        LDR      r6,[r5,#0x88]
        BIC      r6,r6,#0xc0000000
        ORR      r0,r6,#0x40000000
        STR      r0,[r5,#0x88]
        LDR      r6,[r5,#8]
        BIC      r6,r6,#0xc0000000
        STR      r6,[r5,#8]
        B        |L27.204|
|L27.202|
        NOP      
|L27.204|
        NOP      
        LDRB     r1,[r4,#0x16]
        ADD      r2,r4,#0xf
        MOV      r0,r5
        BL       SAI_RxSetBitclockConfig
        MOV      r1,r4
        MOV      r0,r5
        BL       SAI_RxSetSerialDataConfig
        LDRB     r1,[r4,#0x16]
        ADD      r2,r4,#0xc
        MOV      r0,r5
        BL       SAI_RxSetFrameSyncConfig
        ADD      r1,r4,#0x13
        MOV      r0,r5
        BL       SAI_RxSetFifoConfig
        POP      {r4-r8,pc}
        ENDP

|L27.252|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L27.292|
        DCB      "config != NULL",0
        DCB      0
|L27.308|
        DCB      "channelNums <= FSL_FEATURE_SAI_CHANNEL_COUNTn(base)",0

        AREA ||i.SAI_RxSetDataOrder||, CODE, READONLY, ALIGN=1

SAI_RxSetDataOrder PROC
        LDR      r3,[r0,#0x90]
        BIC      r2,r3,#0x10
        MOVS     r3,#0x10
        AND      r3,r3,r1,LSL #4
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x90]
        BX       lr
        ENDP


        AREA ||i.SAI_RxSetFIFOPacking||, CODE, READONLY, ALIGN=1

SAI_RxSetFIFOPacking PROC
        MOV      r2,r1
        LDR      r1,[r0,#0x90]
        BIC      r1,r1,#0x3000000
        MOV      r3,#0x3000000
        AND      r3,r3,r2,LSL #24
        ORRS     r1,r1,r3
        STR      r1,[r0,#0x90]
        BX       lr
        ENDP


        AREA ||i.SAI_RxSetFifoConfig||, CODE, READONLY, ALIGN=2

SAI_RxSetFifoConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L30.10|
        B        |L30.22|
|L30.10|
        MOV      r2,#0x4c7
        ADR      r1,|L30.96|
        ADR      r0,|L30.136|
        BL       __aeabi_assert
|L30.22|
        LDRB     r0,[r4,#2]
        CMP      r0,#7
        BHI      |L30.30|
        B        |L30.42|
|L30.30|
        MOV      r2,#0x4c9
        ADR      r1,|L30.96|
        LDR      r0,|L30.152|
        BL       __aeabi_assert
|L30.42|
        ADDS     r5,r5,#0x84
        LDR      r6,[r5,#0xc]
        BIC      r6,r6,#0x10000000
        LDRB     r0,[r4,#0]
        MOV      r1,#0x10000000
        AND      r0,r1,r0,LSL #28
        ORRS     r6,r6,r0
        BIC      r6,r6,#0x3000000
        LDRB     r0,[r4,#1]
        MOV      r1,#0x3000000
        AND      r0,r1,r0,LSL #24
        ORRS     r6,r6,r0
        STR      r6,[r5,#0xc]
        LDRB     r1,[r4,#2]
        LDR      r0,[r5,#0]
        BFI      r0,r1,#0,#3
        STR      r0,[r5],#-0x84
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L30.96|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L30.136|
        DCB      "config != NULL",0
        DCB      0
|L30.152|
        DCD      ||.conststring||

        AREA ||i.SAI_RxSetFormat||, CODE, READONLY, ALIGN=2

SAI_RxSetFormat PROC
        PUSH     {r0-r12,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r9,r3
        MOV      r11,#0
        MOVS     r6,#0
        MOVS     r7,#0
        MOV      r8,r6
        MOV      r10,r6
        LDRB     r0,[r4,#0x16]
        CBZ      r0,|L31.74|
        LDRD     r0,r1,[r4,#0]
        MULS     r0,r1,r0
        LDRB     r1,[r4,#8]
        CBNZ     r1,|L31.40|
        MOVS     r1,#2
        B        |L31.42|
|L31.40|
        MOVS     r1,#1
|L31.42|
        MUL      r11,r0,r1
        LDR      r0,[r5,#0x90]
        BIC      r6,r0,#0x1f00
        LDR      r0,[r4,#4]
        SUBS     r0,r0,#1
        MOV      r1,#0x1f00
        AND      r0,r1,r0,LSL #8
        ORRS     r6,r6,r0
        STR      r6,[r5,#0x90]
        B        |L31.80|
|L31.74|
        LDR      r0,[r4,#0]
        LSL      r11,r0,#6
|L31.80|
        LDR      r0,[r5,#0x100]
        AND      r0,r0,#0x40000000
        CBZ      r0,|L31.100|
        LDR      r1,[r4,#0xc]
        MOV      r0,r5
        LDR      r2,[sp,#8]
        BL       SAI_SetMasterClockDivider
|L31.100|
        LDR      r0,[r5,#0x88]
        AND      r0,r0,#0x1000000
        CBZ      r0,|L31.166|
        LDR      r0,[r5,#0x88]
        BIC      r0,r0,#0xff
        STR      r0,[r5,#0x88]
        UDIV     r8,r9,r11
        CMP      r8,#0
        BNE      |L31.136|
        ADD      r8,r8,#1
|L31.136|
        UDIV     r0,r9,r8
        CMP      r0,r11
        BLS      |L31.148|
        ADD      r8,r8,#1
|L31.148|
        LDR      r0,[r5,#0x88]
        MOVS     r1,#1
        RSB      r1,r1,r8,LSR #1
        UXTB     r1,r1
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x88]
|L31.166|
        LDRB     r0,[r4,#0x16]
        CBZ      r0,|L31.176|
        LDR      r0,[r4,#4]
        SUBS     r0,r0,#1
        B        |L31.178|
|L31.176|
        MOVS     r0,#0x1f
|L31.178|
        MOV      r6,r0
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L31.220|
        MOV      r0,#0x1f000000
        AND      r0,r0,r6,LSL #24
        MOV      r1,#0x1f0000
        AND      r1,r1,r6,LSL #16
        ORRS     r0,r0,r1
        MOV      r1,#0x1f00
        AND      r1,r1,r6,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x94]
        B        |L31.290|
|L31.220|
        LDR      r0,[r5,#0x90]
        AND      r0,r0,#0x10
        CBZ      r0,|L31.268|
        MOV      r0,#0x1f000000
        AND      r0,r0,r6,LSL #24
        MOV      r1,#0x1f0000
        AND      r1,r1,r6,LSL #16
        ORRS     r0,r0,r1
        LDR      r1,[r4,#4]
        SUBS     r1,r1,#1
        MOV      r2,#0x1f00
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x94]
        B        |L31.290|
|L31.268|
        MOV      r0,#0x1f000000
        AND      r0,r0,r6,LSL #24
        MOV      r1,#0x1f0000
        AND      r1,r1,r6,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x94]
|L31.290|
        LDRB     r0,[r4,#8]
        STR      r0,[r5,#0xe0]
        LDRB     r0,[r4,#0x12]
        CBNZ     r0,|L31.308|
        LDRB     r1,[r4,#0x11]
        MOVS     r0,#1
        LSLS     r0,r0,r1
        STRB     r0,[r4,#0x12]
|L31.308|
        MOVS     r7,#0
        B        |L31.338|
|L31.312|
        MOVS     r0,#1
        LSLS     r0,r0,r7
        LDRB     r1,[r4,#0x12]
        ANDS     r0,r0,r1
        CBZ      r0,|L31.336|
        CMP      r10,#0
        BNE      |L31.330|
        STRB     r7,[r4,#0x11]
|L31.330|
        ADD      r10,r10,#1
        STRB     r7,[r4,#0x13]
|L31.336|
        ADDS     r7,r7,#1
|L31.338|
        CMP      r7,#2
        BCC      |L31.312|
        STRB     r10,[r4,#0x14]
        LDRB     r0,[r4,#0x14]
        CMP      r0,#2
        BGT      |L31.354|
        B        |L31.366|
|L31.354|
        MOV      r2,#0x7d7
        ADR      r1,|L31.420|
        ADR      r0,|L31.460|
        BL       __aeabi_assert
|L31.366|
        LDRB     r0,[r4,#0x14]
        CMP      r0,#1
        BLS      |L31.384|
        LDR      r0,[r5,#0x90]
        BIC      r0,r0,#0xc000000
        STR      r0,[r5,#0x90]
|L31.384|
        ADDS     r5,r5,#0x84
        LDR      r0,[r5,#8]
        BIC      r0,r0,#0x30000
        STR      r0,[r5,#8]
        LDR      r0,[r5,#8]
        LDRB     r1,[r4,#0x12]
        MOV      r2,#0x30000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r5,#8]
        LDRB     r0,[r4,#0x10]
        STR      r0,[r5],#-0x84
        POP      {r0-r12,pc}
        ENDP

|L31.420|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L31.460|
        DCB      "format->channelNums <= FSL_FEATURE_SAI_CHANNEL_COUNTn(b"
        DCB      "ase)",0

        AREA ||i.SAI_RxSetFrameSyncConfig||, CODE, READONLY, ALIGN=2

SAI_RxSetFrameSyncConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r4,r2
        LDR      r5,[r6,#0x90]
        CBZ      r7,|L32.20|
        CMP      r7,#3
        BNE      |L32.102|
|L32.20|
        CBZ      r4,|L32.24|
        B        |L32.36|
|L32.24|
        MOV      r2,#0x512
        ADR      r1,|L32.116|
        ADR      r0,|L32.156|
        BL       __aeabi_assert
|L32.36|
        LDRB     r0,[r4,#0]
        SUBS     r0,r0,#1
        CMP      r0,#0x1f
        BHI      |L32.46|
        B        |L32.58|
|L32.46|
        MOV      r2,#0x513
        ADR      r1,|L32.116|
        LDR      r0,|L32.172|
        BL       __aeabi_assert
|L32.58|
        MOV      r0,#0x1f0b
        BICS     r5,r5,r0
        LDRB     r0,[r4,#1]
        MOVS     r1,#8
        AND      r0,r1,r0,LSL #3
        LDRB     r1,[r4,#2]
        MOVS     r2,#2
        AND      r1,r2,r1,LSL #1
        ORRS     r0,r0,r1
        ADDS     r0,r0,#1
        LDRB     r1,[r4,#0]
        SUBS     r1,r1,#1
        MOV      r2,#0x1f00
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        B        |L32.106|
|L32.102|
        BIC      r5,r5,#1
|L32.106|
        STR      r5,[r6,#0x90]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L32.116|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L32.156|
        DCB      "config != NULL",0
        DCB      0
|L32.172|
        DCD      ||.conststring||+0x94

        AREA ||i.SAI_RxSetFrameSyncPolarity||, CODE, READONLY, ALIGN=1

SAI_RxSetFrameSyncPolarity PROC
        LDR      r3,[r0,#0x90]
        BIC      r2,r3,#2
        MOVS     r3,#2
        AND      r3,r3,r1,LSL #1
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x90]
        BX       lr
        ENDP


        AREA ||i.SAI_RxSetSerialDataConfig||, CODE, READONLY, ALIGN=2

SAI_RxSetSerialDataConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L34.10|
        B        |L34.22|
|L34.10|
        MOV      r2,#0x551
        ADR      r1,|L34.104|
        ADR      r0,|L34.144|
        BL       __aeabi_assert
|L34.22|
        LDR      r6,[r5,#0x90]!
        LDRB     r0,[r4,#2]
        SUBS     r0,r0,#1
        MOV      r1,#0x1f000000
        AND      r0,r1,r0,LSL #24
        LDRB     r1,[r4,#1]
        SUBS     r1,r1,#1
        MOV      r2,#0x1f0000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#4]
        SUBS     r1,r1,#1
        ASRS     r2,r2,#8
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#4]
        LDR      r0,[r4,#8]
        STR      r0,[r5,#0x50]
        LDR      r0,|L34.160|
        ANDS     r6,r6,r0
        LDRB     r0,[r4,#5]
        SUBS     r0,r0,#1
        LSLS     r1,r2,#8
        AND      r0,r1,r0,LSL #16
        LDRB     r1,[r4,#0]
        MOVS     r2,#0x10
        AND      r1,r2,r1,LSL #4
        ORRS     r0,r0,r1
        ORRS     r6,r6,r0
        STR      r6,[r5],#-0x90
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L34.104|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L34.144|
        DCB      "config != NULL",0
        DCB      0
|L34.160|
        DCD      0xffe0ffef

        AREA ||i.SAI_RxSoftwareReset||, CODE, READONLY, ALIGN=1

SAI_RxSoftwareReset PROC
        LDR      r2,[r0,#0x80]!
        ORRS     r2,r2,r1
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        BIC      r2,r2,#0x1000000
        STR      r2,[r0],#-0x80
        BX       lr
        ENDP


        AREA ||i.SAI_SetMasterClockConfig||, CODE, READONLY, ALIGN=2

SAI_SetMasterClockConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L36.10|
        B        |L36.22|
|L36.10|
        MOV      r2,#0x47b
        ADR      r1,|L36.88|
        ADR      r0,|L36.128|
        BL       __aeabi_assert
|L36.22|
        MOVS     r6,#0
        LDR      r0,[r5,#0x100]
        BIC      r6,r0,#0x3000000
        LDRB     r0,[r4,#1]
        MOV      r1,#0x3000000
        AND      r0,r1,r0,LSL #24
        ORRS     r0,r0,r6
        STR      r0,[r5,#0x100]
        LDR      r0,[r5,#0x100]
        BIC      r6,r0,#0x40000000
        LDRB     r0,[r4,#0]
        MOV      r1,#0x40000000
        AND      r0,r1,r0,LSL #30
        ORRS     r0,r0,r6
        STR      r0,[r5,#0x100]
        LDRB     r0,[r4,#0]
        CBZ      r0,|L36.86|
        MOV      r0,r5
        LDRD     r1,r2,[r4,#4]
        BL       SAI_SetMasterClockDivider
|L36.86|
        POP      {r4-r6,pc}
        ENDP

|L36.88|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L36.128|
        DCB      "config != NULL",0
        DCB      0

        AREA ||i.SAI_SetMasterClockDivider||, CODE, READONLY, ALIGN=2

SAI_SetMasterClockDivider PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x14
        MOV      r9,r0
        MOV      r7,r1
        MOV      r10,r2
        CMP      r7,r10
        BHI      |L37.18|
        B        |L37.28|
|L37.18|
        MOVS     r2,#0x86
        ADR      r1,|L37.208|
        ADR      r0,|L37.248|
        BL       __aeabi_assert
|L37.28|
        MOVS     r0,#0x64
        UDIV     r11,r10,r0
        UDIV     r4,r7,r0
        MOVS     r6,#0
        SUBS     r0,r6,#1
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#8]
        STR      r0,[sp,#4]
        MOV      r8,r0
        MOV      r0,#0x100
        STR      r0,[sp,#0]
        LSLS     r0,r4,#12
        UDIV     r0,r0,r11
        ADDS     r0,r0,#1
        STR      r0,[sp,#0]
        LDR      r0,[sp,#0]
        CMP      r0,#0x100
        BLS      |L37.82|
        MOV      r0,#0x100
        STR      r0,[sp,#0]
|L37.82|
        MOVS     r5,#1
        B        |L37.154|
|L37.86|
        MUL      r8,r11,r5
        UDIV     r0,r8,r4
        MLS      r6,r4,r0,r8
        UDIV     r0,r8,r4
        UXTH     r0,r0
        STR      r0,[sp,#0x10]
        CBNZ     r6,|L37.120|
        STR      r5,[sp,#8]
        UDIV     r0,r8,r4
        UXTH     r0,r0
        STR      r0,[sp,#4]
        B        |L37.160|
|L37.120|
        CMP      r6,r7,LSR #1
        BLS      |L37.136|
        SUBS     r6,r4,r6
        LDR      r0,[sp,#0x10]
        ADDS     r0,r0,#1
        UXTH     r0,r0
        STR      r0,[sp,#0x10]
|L37.136|
        LDR      r0,[sp,#0xc]
        CMP      r6,r0
        BCS      |L37.150|
        STR      r5,[sp,#8]
        LDR      r0,[sp,#0x10]
        STR      r0,[sp,#4]
        STR      r6,[sp,#0xc]
|L37.150|
        ADDS     r0,r5,#1
        UXTH     r5,r0
|L37.154|
        LDR      r0,[sp,#0]
        CMP      r5,r0
        BCC      |L37.86|
|L37.160|
        NOP      
        LDR      r0,[sp,#4]
        SUBS     r0,r0,#1
        UBFX     r1,r0,#0,#12
        LDR      r0,[sp,#8]
        SUBS     r0,r0,#1
        MOV      r2,#0xff000
        AND      r0,r2,r0,LSL #12
        ORRS     r1,r1,r0
        STR      r1,[r9,#0x104]
        NOP      
|L37.190|
        LDR      r0,[r9,#0x100]
        AND      r0,r0,#0x80000000
        CMP      r0,#0
        BNE      |L37.190|
        ADD      sp,sp,#0x14
        POP      {r4-r11,pc}
        ENDP

|L37.208|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L37.248|
        DCB      "mclk_Hz <= mclkSrcClock_Hz",0
        DCB      0

        AREA ||i.SAI_TransferAbortReceive||, CODE, READONLY, ALIGN=2

SAI_TransferAbortReceive PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L38.10|
        B        |L38.22|
|L38.10|
        MOV      r2,#0x9f9
        ADR      r1,|L38.76|
        ADR      r0,|L38.116|
        BL       __aeabi_assert
|L38.22|
        MOVS     r1,#0
        MOV      r0,r5
        BL       SAI_RxEnable
        MOV      r0,#0x500
        LDR      r1,[r5,#0x80]
        BIC      r1,r1,#0x1c0000
        BICS     r1,r1,r0
        STR      r1,[r5,#0x80]
        NOP      
        MOVS     r0,#1
        STR      r0,[r4,#4]
        MOVS     r1,#0x20
        ADD      r0,r4,#0x18
        BL       __aeabi_memclr4
        MOVS     r0,#0
        STRB     r0,[r4,#0x49]
        STRB     r0,[r4,#0x48]
        POP      {r4-r6,pc}
        ENDP

|L38.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L38.116|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferAbortSend||, CODE, READONLY, ALIGN=2

SAI_TransferAbortSend PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L39.10|
        B        |L39.22|
|L39.10|
        MOV      r2,#0x9db
        ADR      r1,|L39.72|
        ADR      r0,|L39.112|
        BL       __aeabi_assert
|L39.22|
        MOVS     r1,#0
        MOV      r0,r5
        BL       SAI_TxEnable
        MOV      r0,#0x500
        LDR      r1,[r5,#0]
        BIC      r1,r1,#0x1c0000
        BICS     r1,r1,r0
        STR      r1,[r5,#0]
        NOP      
        MOVS     r0,#1
        STR      r0,[r4,#4]
        MOVS     r1,#0x20
        ADD      r0,r4,#0x18
        BL       __aeabi_memclr4
        MOVS     r0,#0
        STRB     r0,[r4,#0x49]
        STRB     r0,[r4,#0x48]
        POP      {r4-r6,pc}
        ENDP

|L39.72|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L39.112|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferGetReceiveCount||, CODE, READONLY, ALIGN=2

SAI_TransferGetReceiveCount PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L40.14|
        B        |L40.26|
|L40.14|
        MOV      r2,#0x9c0
        ADR      r1,|L40.72|
        ADR      r0,|L40.112|
        BL       __aeabi_assert
|L40.26|
        MOVS     r6,#0
        LDR      r0,[r4,#4]
        CBZ      r0,|L40.36|
        MOVS     r6,#6
        B        |L40.64|
|L40.36|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x38
        LDR      r1,[r0,r1,LSL #2]
        LDRB     r2,[r4,#0x49]
        SUBS     r0,r0,#0x20
        ADD      r0,r0,r2,LSL #3
        LDR      r0,[r0,#4]
        SUBS     r0,r1,r0
        STR      r0,[r5,#0]
|L40.64|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L40.72|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L40.112|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferGetSendCount||, CODE, READONLY, ALIGN=2

SAI_TransferGetSendCount PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L41.14|
        B        |L41.26|
|L41.14|
        MOV      r2,#0x9a5
        ADR      r1,|L41.72|
        ADR      r0,|L41.112|
        BL       __aeabi_assert
|L41.26|
        MOVS     r6,#0
        LDR      r0,[r4,#4]
        CBZ      r0,|L41.36|
        MOVS     r6,#6
        B        |L41.64|
|L41.36|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x38
        LDR      r1,[r0,r1,LSL #2]
        LDRB     r2,[r4,#0x49]
        SUBS     r0,r0,#0x20
        ADD      r0,r0,r2,LSL #3
        LDR      r0,[r0,#4]
        SUBS     r0,r1,r0
        STR      r0,[r5,#0]
|L41.64|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L41.72|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L41.112|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferReceiveNonBlocking||, CODE, READONLY, ALIGN=2

SAI_TransferReceiveNonBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L42.12|
        B        |L42.24|
|L42.12|
        MOV      r2,#0x97b
        ADR      r1,|L42.140|
        ADR      r0,|L42.180|
        BL       __aeabi_assert
|L42.24|
        LDRB     r1,[r4,#0x48]
        ADD      r0,r4,#0x18
        LDR      r0,[r0,r1,LSL #3]
        CBZ      r0,|L42.44|
        MOV      r0,#0x770
|L42.42|
        POP      {r4-r6,pc}
|L42.44|
        LDRB     r2,[r4,#0x48]
        LDR      r1,[r5,#4]
        ADD      r0,r4,#0x38
        STR      r1,[r0,r2,LSL #2]
        LDRB     r2,[r4,#0x48]
        LDR      r1,[r5,#0]
        SUBS     r0,r0,#0x20
        STR      r1,[r0,r2,LSL #3]
        LDRB     r2,[r4,#0x48]
        LDR      r1,[r5,#4]
        ADD      r0,r0,r2,LSL #3
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0x48]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0x48]
        MOVS     r0,#0
        STR      r0,[r4,#4]
        MOV      r0,#0x500
        LDR      r1,[r6,#0x80]
        BIC      r1,r1,#0x1c0000
        ORRS     r1,r1,r0
        STR      r1,[r6,#0x80]
        NOP      
        MOVS     r1,#1
        MOV      r0,r6
        BL       SAI_RxEnable
        MOVS     r0,#0
        B        |L42.42|
        ENDP

|L42.140|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L42.180|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferRxCreateHandle||, CODE, READONLY, ALIGN=2

SAI_TransferRxCreateHandle PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        CBZ      r4,|L43.16|
        B        |L43.28|
|L43.16|
        MOV      r2,#0x8c4
        ADR      r1,|L43.84|
        ADR      r0,|L43.124|
        BL       __aeabi_assert
|L43.28|
        MOVS     r1,#0x4c
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOV      r0,r5
        BL       SAI_GetInstance
        LDR      r1,|L43.132|
        ADD      r0,r1,r0,LSL #3
        STR      r4,[r0,#4]
        STR      r6,[r4,#8]
        STR      r7,[r4,#0xc]
        STR      r5,[r4,#0]
        LDR      r0,|L43.136|
        LDR      r1,|L43.140|
        STR      r0,[r1,#0]  ; s_saiRxIsr
        MOV      r0,r5
        BL       SAI_GetInstance
        LDR      r1,|L43.144|
        LDRSB    r8,[r1,r0]
        MOV      r0,r8
        BL       EnableIRQ
        POP      {r4-r8,pc}
        ENDP

|L43.84|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L43.124|
        DCB      "handle",0
        DCB      0
|L43.132|
        DCD      s_saiHandle
|L43.136|
        DCD      SAI_TransferRxHandleIRQ
|L43.140|
        DCD      s_saiRxIsr
|L43.144|
        DCD      s_saiRxIRQ

        AREA ||i.SAI_TransferRxHandleIRQ||, CODE, READONLY, ALIGN=2

SAI_TransferRxHandleIRQ PROC
        PUSH     {r1-r9,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L44.12|
        B        |L44.24|
|L44.12|
        MOV      r2,#0xa8f
        ADR      r1,|L44.316|
        ADR      r0,|L44.356|
        BL       __aeabi_assert
|L44.24|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        LDR      r8,[r0,r1,LSL #3]
        LDRB     r0,[r4,#0x10]
        LSRS     r0,r0,#3
        LDRB     r1,[r4,#0x14]
        SMULBB   r0,r0,r1
        UXTB     r7,r0
        LDR      r0,[r6,#0x80]
        AND      r0,r0,#0x40000
        CBZ      r0,|L44.96|
        MOV      r1,#0x40000
        MOV      r0,r6
        BL       SAI_RxClearStatusFlags
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       SAI_RxSoftwareReset
        LDR      r0,[r4,#8]
        CBZ      r0,|L44.96|
        MOV      r2,#0x76f
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r5,r3,[r4,#8]
        BLX      r5
|L44.96|
        LDR      r0,[r6,#0x80]
        AND      r0,r0,#0x10000
        CBZ      r0,|L44.214|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#4]
        LDRB     r0,[r4,#0x4a]
        MULS     r0,r7,r0
        CMP      r1,r0
        BCS      |L44.146|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        LDR      r0,[r0,#4]
        B        |L44.152|
|L44.146|
        LDRB     r0,[r4,#0x4a]
        MULS     r0,r7,r0
|L44.152|
        UXTB     r5,r0
        LDRB     r0,[r4,#0x10]
        STRD     r8,r5,[sp,#4]
        STR      r0,[sp,#0]
        LDRB     r3,[r4,#0x13]
        LDRB     r2,[r4,#0x12]
        LDRB     r1,[r4,#0x11]
        MOV      r0,r6
        BL       SAI_ReadNonBlocking
        LDRB     r2,[r4,#0x49]
        ADD      r1,r4,#0x18
        ADD      r1,r1,r2,LSL #3
        ADDS     r0,r1,#4
        LDR      r1,[r1,#4]
        SUBS     r1,r1,r5
        STR      r1,[r0,#0]
        LDRB     r2,[r4,#0x49]
        ADD      r1,r4,#0x18
        ADD      r0,r1,r2,LSL #3
        LDR      r1,[r0,#0]
        ADD      r1,r1,r5
        STR      r1,[r0,#0]
        NOP      
|L44.214|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        LDR      r0,[r0,#4]
        CBNZ     r0,|L44.288|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0x49]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0x49]
        LDR      r0,[r4,#8]
        CBZ      r0,|L44.288|
        MOV      r2,#0x772
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r5,r3,[r4,#8]
        BLX      r5
|L44.288|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        LDR      r0,[r0,r1,LSL #3]
        CBNZ     r0,|L44.310|
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_TransferAbortReceive
|L44.310|
        POP      {r1-r9,pc}
        ENDP

        DCW      0x0000
|L44.316|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L44.356|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferRxSetConfig||, CODE, READONLY, ALIGN=2

SAI_TransferRxSetConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        CBZ      r5,|L45.12|
        B        |L45.24|
|L45.12|
        MOV      r2,#0x642
        ADR      r1,|L45.76|
        ADR      r0,|L45.116|
        BL       __aeabi_assert
|L45.24|
        CBZ      r4,|L45.28|
        B        |L45.40|
|L45.28|
        MOV      r2,#0x643
        ADR      r1,|L45.76|
        ADR      r0,|L45.132|
        BL       __aeabi_assert
|L45.40|
        LDRB     r0,[r4,#0xc]
        STRB     r0,[r5,#0x10]
        LDRB     r0,[r4,#0x15]
        STRB     r0,[r5,#0x4a]
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_RxSetConfig
        LDRB     r0,[r4,#0x18]
        STRB     r0,[r5,#0x11]
        LDRB     r0,[r4,#0x19]
        STRB     r0,[r5,#0x12]
        LDRB     r0,[r4,#0x1b]
        STRB     r0,[r5,#0x14]
        LDRB     r0,[r4,#0x1a]
        STRB     r0,[r5,#0x13]
        POP      {r4-r6,pc}
        ENDP

|L45.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L45.116|
        DCB      "handle != NULL",0
        DCB      0
|L45.132|
        DCB      "config != NULL",0
        DCB      0

        AREA ||i.SAI_TransferRxSetFormat||, CODE, READONLY, ALIGN=2

SAI_TransferRxSetFormat PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r6,r3
        LDR      r7,[sp,#0x18]
        CBZ      r5,|L46.18|
        B        |L46.30|
|L46.18|
        MOV      r2,#0x91e
        ADR      r1,|L46.92|
        ADR      r0,|L46.132|
        BL       __aeabi_assert
|L46.30|
        LDR      r0,[r4,#0]
        CMP      r0,r7
        BHI      |L46.42|
        LDR      r0,[r4,#0]
        CMP      r0,r6
        BLS      |L46.48|
|L46.42|
        MOVS     r0,#4
|L46.44|
        POP      {r4-r8,pc}
|L46.48|
        LDRB     r0,[r4,#4]
        STRB     r0,[r5,#0x10]
        LDRB     r0,[r4,#0x10]
        STRB     r0,[r5,#0x4a]
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r8
        BL       SAI_RxSetFormat
        LDRB     r0,[r4,#0x11]
        STRB     r0,[r5,#0x11]
        LDRB     r0,[r4,#0x12]
        STRB     r0,[r5,#0x12]
        LDRB     r0,[r4,#0x14]
        STRB     r0,[r5,#0x14]
        LDRB     r0,[r4,#0x13]
        STRB     r0,[r5,#0x13]
        MOVS     r0,#0
        B        |L46.44|
        ENDP

        DCW      0x0000
|L46.92|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L46.132|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferSendNonBlocking||, CODE, READONLY, ALIGN=2

SAI_TransferSendNonBlocking PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L47.12|
        B        |L47.24|
|L47.12|
        MOV      r2,#0x94b
        ADR      r1,|L47.136|
        ADR      r0,|L47.176|
        BL       __aeabi_assert
|L47.24|
        LDRB     r1,[r4,#0x48]
        ADD      r0,r4,#0x18
        LDR      r0,[r0,r1,LSL #3]
        CBZ      r0,|L47.44|
        MOV      r0,#0x770
|L47.42|
        POP      {r4-r6,pc}
|L47.44|
        LDRB     r2,[r4,#0x48]
        LDR      r1,[r5,#4]
        ADD      r0,r4,#0x38
        STR      r1,[r0,r2,LSL #2]
        LDRB     r2,[r4,#0x48]
        LDR      r1,[r5,#0]
        SUBS     r0,r0,#0x20
        STR      r1,[r0,r2,LSL #3]
        LDRB     r2,[r4,#0x48]
        LDR      r1,[r5,#4]
        ADD      r0,r0,r2,LSL #3
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0x48]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0x48]
        MOVS     r0,#0
        STR      r0,[r4,#4]
        MOV      r0,#0x500
        LDR      r1,[r6,#0]
        BIC      r1,r1,#0x1c0000
        ORRS     r1,r1,r0
        STR      r1,[r6,#0]
        NOP      
        MOVS     r1,#1
        MOV      r0,r6
        BL       SAI_TxEnable
        MOVS     r0,#0
        B        |L47.42|
        ENDP

|L47.136|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L47.176|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferTerminateReceive||, CODE, READONLY, ALIGN=2

SAI_TransferTerminateReceive PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L48.10|
        B        |L48.22|
|L48.10|
        MOV      r2,#0xa2e
        ADR      r1,|L48.60|
        ADR      r0,|L48.100|
        BL       __aeabi_assert
|L48.22|
        MOV      r1,r4
        MOV      r0,r5
        BL       SAI_TransferAbortReceive
        MOVS     r1,#0x20
        ADD      r0,r4,#0x18
        BL       __aeabi_memclr4
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        STR      r0,[r4,#0x3c]
        STR      r0,[r4,#0x40]
        STR      r0,[r4,#0x44]
        STRB     r0,[r4,#0x48]
        STRB     r0,[r4,#0x49]
        POP      {r4-r6,pc}
        ENDP

|L48.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L48.100|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferTerminateSend||, CODE, READONLY, ALIGN=2

SAI_TransferTerminateSend PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L49.10|
        B        |L49.22|
|L49.10|
        MOV      r2,#0xa17
        ADR      r1,|L49.60|
        ADR      r0,|L49.100|
        BL       __aeabi_assert
|L49.22|
        MOV      r1,r4
        MOV      r0,r5
        BL       SAI_TransferAbortSend
        MOVS     r1,#0x20
        ADD      r0,r4,#0x18
        BL       __aeabi_memclr4
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        STR      r0,[r4,#0x3c]
        STR      r0,[r4,#0x40]
        STR      r0,[r4,#0x44]
        STRB     r0,[r4,#0x48]
        STRB     r0,[r4,#0x49]
        POP      {r4-r6,pc}
        ENDP

|L49.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L49.100|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferTxCreateHandle||, CODE, READONLY, ALIGN=2

SAI_TransferTxCreateHandle PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        CBZ      r4,|L50.16|
        B        |L50.28|
|L50.16|
        MOV      r2,#0x8a5
        ADR      r1,|L50.84|
        ADR      r0,|L50.124|
        BL       __aeabi_assert
|L50.28|
        MOVS     r1,#0x4c
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOV      r0,r5
        BL       SAI_GetInstance
        LDR      r1,|L50.132|
        STR      r4,[r1,r0,LSL #3]
        STR      r6,[r4,#8]
        STR      r7,[r4,#0xc]
        STR      r5,[r4,#0]
        LDR      r0,|L50.136|
        LDR      r1,|L50.140|
        STR      r0,[r1,#0]  ; s_saiTxIsr
        MOV      r0,r5
        BL       SAI_GetInstance
        LDR      r1,|L50.144|
        LDRSB    r8,[r1,r0]
        MOV      r0,r8
        BL       EnableIRQ
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L50.84|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L50.124|
        DCB      "handle",0
        DCB      0
|L50.132|
        DCD      s_saiHandle
|L50.136|
        DCD      SAI_TransferTxHandleIRQ
|L50.140|
        DCD      s_saiTxIsr
|L50.144|
        DCD      s_saiTxIRQ

        AREA ||i.SAI_TransferTxHandleIRQ||, CODE, READONLY, ALIGN=2

SAI_TransferTxHandleIRQ PROC
        PUSH     {r1-r9,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L51.12|
        B        |L51.24|
|L51.12|
        MOV      r2,#0xa42
        ADR      r1,|L51.320|
        ADR      r0,|L51.360|
        BL       __aeabi_assert
|L51.24|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        LDR      r8,[r0,r1,LSL #3]
        LDRB     r0,[r4,#0x10]
        LSRS     r0,r0,#3
        LDRB     r1,[r4,#0x14]
        SMULBB   r0,r0,r1
        UXTB     r7,r0
        LDR      r0,[r6,#0]
        AND      r0,r0,#0x40000
        CBZ      r0,|L51.94|
        MOV      r1,#0x40000
        MOV      r0,r6
        BL       SAI_TxClearStatusFlags
        MOV      r1,#0x2000000
        MOV      r0,r6
        BL       SAI_TxSoftwareReset
        LDR      r0,[r4,#8]
        CBZ      r0,|L51.94|
        MOV      r2,#0x76e
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r5,r3,[r4,#8]
        BLX      r5
|L51.94|
        LDR      r0,[r6,#0]
        AND      r0,r0,#0x10000
        CBZ      r0,|L51.218|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#4]
        LDRB     r0,[r4,#0x4a]
        RSB      r0,r0,#8
        MULS     r0,r7,r0
        CMP      r1,r0
        BCS      |L51.146|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        LDR      r0,[r0,#4]
        B        |L51.156|
|L51.146|
        LDRB     r0,[r4,#0x4a]
        RSB      r0,r0,#8
        MULS     r0,r7,r0
|L51.156|
        UXTB     r5,r0
        LDRB     r0,[r4,#0x10]
        STRD     r8,r5,[sp,#4]
        STR      r0,[sp,#0]
        LDRB     r3,[r4,#0x13]
        LDRB     r2,[r4,#0x12]
        LDRB     r1,[r4,#0x11]
        MOV      r0,r6
        BL       SAI_WriteNonBlocking
        LDRB     r2,[r4,#0x49]
        ADD      r1,r4,#0x18
        ADD      r1,r1,r2,LSL #3
        ADDS     r0,r1,#4
        LDR      r1,[r1,#4]
        SUBS     r1,r1,r5
        STR      r1,[r0,#0]
        LDRB     r2,[r4,#0x49]
        ADD      r1,r4,#0x18
        ADD      r0,r1,r2,LSL #3
        LDR      r1,[r0,#0]
        ADD      r1,r1,r5
        STR      r1,[r0,#0]
        NOP      
|L51.218|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        LDR      r0,[r0,#4]
        CBNZ     r0,|L51.292|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        ADD      r0,r0,r1,LSL #3
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        LDRB     r1,[r4,#0x49]
        ADDS     r0,r1,#1
        ASRS     r1,r0,#31
        ADD      r1,r0,r1,LSR #30
        ASRS     r1,r1,#2
        SUB      r1,r0,r1,LSL #2
        STRB     r1,[r4,#0x49]
        LDR      r0,[r4,#8]
        CBZ      r0,|L51.292|
        MOV      r2,#0x771
        MOV      r1,r4
        MOV      r0,r6
        LDRD     r5,r3,[r4,#8]
        BLX      r5
|L51.292|
        LDRB     r1,[r4,#0x49]
        ADD      r0,r4,#0x18
        LDR      r0,[r0,r1,LSL #3]
        CBNZ     r0,|L51.314|
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_TransferAbortSend
|L51.314|
        POP      {r1-r9,pc}
        ENDP

        DCW      0x0000
|L51.320|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L51.360|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TransferTxSetConfig||, CODE, READONLY, ALIGN=2

SAI_TransferTxSetConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r4,r2
        CBZ      r5,|L52.12|
        B        |L52.24|
|L52.12|
        MOV      r2,#0x5c7
        ADR      r1,|L52.76|
        ADR      r0,|L52.116|
        BL       __aeabi_assert
|L52.24|
        CBZ      r4,|L52.28|
        B        |L52.40|
|L52.28|
        MOV      r2,#0x5c8
        ADR      r1,|L52.76|
        ADR      r0,|L52.132|
        BL       __aeabi_assert
|L52.40|
        LDRB     r0,[r4,#0xc]
        STRB     r0,[r5,#0x10]
        LDRB     r0,[r4,#0x15]
        STRB     r0,[r5,#0x4a]
        MOV      r1,r4
        MOV      r0,r6
        BL       SAI_TxSetConfig
        LDRB     r0,[r4,#0x18]
        STRB     r0,[r5,#0x11]
        LDRB     r0,[r4,#0x19]
        STRB     r0,[r5,#0x12]
        LDRB     r0,[r4,#0x1b]
        STRB     r0,[r5,#0x14]
        LDRB     r0,[r4,#0x1a]
        STRB     r0,[r5,#0x13]
        POP      {r4-r6,pc}
        ENDP

|L52.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L52.116|
        DCB      "handle != NULL",0
        DCB      0
|L52.132|
        DCB      "config != NULL",0
        DCB      0

        AREA ||i.SAI_TransferTxSetFormat||, CODE, READONLY, ALIGN=2

SAI_TransferTxSetFormat PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r6,r3
        LDR      r7,[sp,#0x18]
        CBZ      r5,|L53.18|
        B        |L53.30|
|L53.18|
        MOV      r2,#0x8ec
        ADR      r1,|L53.92|
        ADR      r0,|L53.132|
        BL       __aeabi_assert
|L53.30|
        LDR      r0,[r4,#0]
        CMP      r0,r7
        BHI      |L53.42|
        LDR      r0,[r4,#0]
        CMP      r0,r6
        BLS      |L53.48|
|L53.42|
        MOVS     r0,#4
|L53.44|
        POP      {r4-r8,pc}
|L53.48|
        LDRB     r0,[r4,#4]
        STRB     r0,[r5,#0x10]
        LDRB     r0,[r4,#0x10]
        STRB     r0,[r5,#0x4a]
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r8
        BL       SAI_TxSetFormat
        LDRB     r0,[r4,#0x11]
        STRB     r0,[r5,#0x11]
        LDRB     r0,[r4,#0x12]
        STRB     r0,[r5,#0x12]
        LDRB     r0,[r4,#0x14]
        STRB     r0,[r5,#0x14]
        LDRB     r0,[r4,#0x13]
        STRB     r0,[r5,#0x13]
        MOVS     r0,#0
        B        |L53.44|
        ENDP

        DCW      0x0000
|L53.92|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L53.132|
        DCB      "handle",0
        DCB      0

        AREA ||i.SAI_TxClearStatusFlags||, CODE, READONLY, ALIGN=1

SAI_TxClearStatusFlags PROC
        LDR      r2,[r0,#0]
        BIC      r2,r2,#0x1c0000
        ORRS     r2,r2,r1
        STR      r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.SAI_TxEnable||, CODE, READONLY, ALIGN=1

SAI_TxEnable PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBZ      r5,|L55.58|
        LDR      r0,[r4,#8]
        MOVS     r1,#1
        CMP      r1,r0,LSR #30
        BNE      |L55.34|
        LDR      r0,[r4,#0x80]
        BIC      r0,r0,#0x1c0000
        ORR      r0,r0,#0x80000000
        STR      r0,[r4,#0x80]
|L55.34|
        LDR      r0,[r4,#0]
        BIC      r0,r0,#0x1c0000
        ORR      r0,r0,#0x80000000
        STR      r0,[r4,#0]
        MOV      r1,#0x40000
        MOV      r0,r4
        BL       SAI_TxClearStatusFlags
        B        |L55.82|
|L55.58|
        LDR      r0,[r4,#0x88]
        MOVS     r1,#1
        CMP      r1,r0,LSR #30
        BEQ      |L55.82|
        LDR      r0,[r4,#0]
        BIC      r0,r0,#0x1c0000
        BIC      r0,r0,#0x80000000
        STR      r0,[r4,#0]
|L55.82|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SAI_TxGetDefaultConfig||, CODE, READONLY, ALIGN=1

SAI_TxGetDefaultConfig PROC
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STRH     r1,[r0,#4]
        MOVS     r1,#1
        STRB     r1,[r0,#4]
        MOVS     r1,#0
        STRB     r1,[r0,#5]
        MOVS     r1,#1
        STRB     r1,[r0,#2]
        MOVS     r1,#0
        STRB     r1,[r0,#3]
        MOVS     r1,#2
        STRB     r1,[r0,#0]
        MOVS     r1,#0
        STRB     r1,[r0,#1]
        BX       lr
        ENDP


        AREA ||i.SAI_TxInit||, CODE, READONLY, ALIGN=2

SAI_TxInit PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOVS     r5,#0
        MOV      r0,r4
        BL       SAI_GetInstance
        LDR      r1,|L57.352|
        LDR      r7,[r1,r0,LSL #2]
        MOV      r0,r7
        BL       CLOCK_EnableClock
        LDR      r0,[r4,#0x100]
        BIC      r5,r0,#0x3000000
        LDRB     r0,[r6,#3]
        MOV      r1,#0x3000000
        AND      r0,r1,r0,LSL #24
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x100]
        LDR      r0,[r4,#0x100]
        BIC      r5,r0,#0x40000000
        LDRB     r0,[r6,#2]
        MOV      r1,#0x40000000
        AND      r0,r1,r0,LSL #30
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x100]
        MOV      r0,r4
        BL       SAI_TxReset
        LDRB     r0,[r6,#0]
        CMP      r0,#5
        BCS      |L57.212|
        TBB      [pc,r0]
        DCB      0x03,0x0e,0x19,0x25
        DCB      0x30,0x00
        LDR      r0,[r4,#8]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0xc]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#0xc]
        LDR      r0,|L57.356|
        STR      r0,[r4,#0x10]
        B        |L57.214|
        LDR      r0,[r4,#8]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0xc]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#0xc]
        LDR      r0,|L57.356|
        STR      r0,[r4,#0x10]
        B        |L57.214|
        LDR      r0,[r4,#8]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0xc]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#0xc]
        LDR      r0,|L57.356|
        ADDS     r0,r0,#0xa
        STR      r0,[r4,#0x10]
        B        |L57.214|
        LDR      r0,[r4,#8]
        BIC      r0,r0,#0x2000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0xc]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#0xc]
        LDR      r0,|L57.360|
        STR      r0,[r4,#0x10]
        B        |L57.214|
        LDR      r0,[r4,#8]
        BIC      r0,r0,#0x2000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0xc]
        BIC      r0,r0,#0x1f
        STR      r0,[r4,#0xc]
        LDR      r0,|L57.360|
        SUBS     r0,r0,#8
        STR      r0,[r4,#0x10]
        B        |L57.214|
|L57.212|
        NOP      
|L57.214|
        NOP      
        LDRB     r0,[r6,#5]
        CBNZ     r0,|L57.258|
        LDR      r0,[r4,#8]
        ORR      r0,r0,#0x1000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x10]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#8]
        BIC      r5,r0,#0xc000000
        LDRB     r0,[r6,#4]
        MOV      r1,#0xc000000
        AND      r0,r1,r0,LSL #26
        ORRS     r0,r0,r5
        STR      r0,[r4,#8]
        B        |L57.274|
|L57.258|
        LDR      r0,[r4,#8]
        BIC      r0,r0,#0x1000000
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0x10]
        BIC      r0,r0,#1
        STR      r0,[r4,#0x10]
|L57.274|
        LDRB     r0,[r6,#1]
        CBZ      r0,|L57.284|
        CMP      r0,#1
        BNE      |L57.320|
        B        |L57.294|
|L57.284|
        LDR      r5,[r4,#8]
        BIC      r5,r5,#0xc0000000
        STR      r5,[r4,#8]
        B        |L57.322|
|L57.294|
        LDR      r5,[r4,#8]
        BIC      r5,r5,#0xc0000000
        ORR      r0,r5,#0x40000000
        STR      r0,[r4,#8]
        LDR      r5,[r4,#0x88]
        BIC      r5,r5,#0xc0000000
        STR      r5,[r4,#0x88]
        B        |L57.322|
|L57.320|
        NOP      
|L57.322|
        NOP      
        MOVS     r0,#1
        CBZ      r0,|L57.338|
        LDR      r1,[r4,#0x10]
        ORR      r1,r1,#0x10000000
        STR      r1,[r4,#0x10]
        B        |L57.346|
|L57.338|
        LDR      r1,[r4,#0x10]
        BIC      r1,r1,#0x10000000
        STR      r1,[r4,#0x10]
|L57.346|
        NOP      
        POP      {r4-r8,pc}
        ENDP

|L57.352|
        DCD      s_saiClock
|L57.356|
        DCD      0x00011f10
|L57.360|
        DCD      0x00010018

        AREA ||i.SAI_TxReset||, CODE, READONLY, ALIGN=1

SAI_TxReset PROC
        MOV      r1,#0x3000000
        STR      r1,[r0,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0x1000000
        STR      r1,[r0,#0]
        MOVS     r1,#0
        STR      r1,[r0,#8]
        STR      r1,[r0,#0xc]
        STR      r1,[r0,#0x10]
        STR      r1,[r0,#0x14]
        STR      r1,[r0,#0x60]
        BX       lr
        ENDP


        AREA ||i.SAI_TxSetBitClockPolarity||, CODE, READONLY, ALIGN=1

SAI_TxSetBitClockPolarity PROC
        LDR      r3,[r0,#8]
        BIC      r2,r3,#0x2000000
        MOV      r3,#0x2000000
        AND      r3,r3,r1,LSL #25
        ORRS     r2,r2,r3
        STR      r2,[r0,#8]
        BX       lr
        ENDP


        AREA ||i.SAI_TxSetBitClockRate||, CODE, READONLY, ALIGN=2

SAI_TxSetBitClockRate PROC
        PUSH     {r4-r12,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r9,r2
        MOV      r10,r3
        LDR      r11,[sp,#0x28]
        LDR      r7,[r6,#8]
        MOVS     r4,#0
        MUL      r0,r9,r10
        MUL      r8,r0,r11
        CMP      r5,r8
        BCC      |L60.34|
        B        |L60.46|
|L60.34|
        MOV      r2,#0x3ed
        ADR      r1,|L60.84|
        ADR      r0,|L60.124|
        BL       __aeabi_assert
|L60.46|
        BIC      r7,r7,#0xff
        UDIV     r4,r5,r8
        CBNZ     r4,|L60.58|
        ADDS     r4,r4,#1
|L60.58|
        UDIV     r0,r5,r4
        CMP      r0,r8
        BLS      |L60.68|
        ADDS     r4,r4,#1
|L60.68|
        MOVS     r0,#1
        RSB      r0,r0,r4,LSR #1
        UXTB     r0,r0
        ORRS     r7,r7,r0
        STR      r7,[r6,#8]
        POP      {r4-r12,pc}
        ENDP

|L60.84|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L60.124|
        DCB      "sourceClockHz >= bitClockFreq",0
        DCB      0
        DCB      0

        AREA ||i.SAI_TxSetBitclockConfig||, CODE, READONLY, ALIGN=2

SAI_TxSetBitclockConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r4,r2
        LDR      r5,[r6,#8]
        CBZ      r7,|L61.18|
        CMP      r7,#2
        BNE      |L61.90|
|L61.18|
        CBZ      r4,|L61.22|
        B        |L61.34|
|L61.22|
        MOV      r2,#0x448
        ADR      r1,|L61.100|
        ADR      r0,|L61.140|
        BL       __aeabi_assert
|L61.34|
        BIC      r5,r5,#0x3f000000
        LDRB     r0,[r4,#2]
        MOV      r1,#0x2000000
        AND      r0,r1,r0,LSL #25
        ORR      r0,r0,#0x1000000
        LDRB     r1,[r4,#1]
        MOV      r2,#0x10000000
        AND      r1,r2,r1,LSL #28
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#0]
        LSLS     r2,r2,#1
        AND      r1,r2,r1,LSL #29
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#3]
        MOV      r2,#0xc000000
        AND      r1,r2,r1,LSL #26
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        B        |L61.94|
|L61.90|
        BIC      r5,r5,#0x1000000
|L61.94|
        STR      r5,[r6,#8]
        POP      {r4-r8,pc}
        ENDP

|L61.100|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L61.140|
        DCB      "config != NULL",0
        DCB      0

        AREA ||i.SAI_TxSetChannelFIFOMask||, CODE, READONLY, ALIGN=1

SAI_TxSetChannelFIFOMask PROC
        LDR      r2,[r0,#0xc]
        BIC      r2,r2,#0x30000
        STR      r2,[r0,#0xc]
        LDR      r2,[r0,#0xc]
        MOV      r3,#0x30000
        AND      r3,r3,r1,LSL #16
        ORRS     r2,r2,r3
        STR      r2,[r0,#0xc]
        BX       lr
        ENDP


        AREA ||i.SAI_TxSetConfig||, CODE, READONLY, ALIGN=2

SAI_TxSetConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L63.12|
        B        |L63.24|
|L63.12|
        MOV      r2,#0x567
        ADR      r1,|L63.240|
        ADR      r0,|L63.280|
        BL       __aeabi_assert
|L63.24|
        MOVS     r6,#0
        MOVS     r7,#0
        MOV      r8,r6
        MOV      r0,r5
        BL       SAI_TxReset
        LDRB     r0,[r4,#0x19]
        CBNZ     r0,|L63.48|
        LDRB     r1,[r4,#0x18]
        MOVS     r0,#1
        LSLS     r0,r0,r1
        STRB     r0,[r4,#0x19]
|L63.48|
        MOVS     r7,#0
        B        |L63.78|
|L63.52|
        MOVS     r0,#1
        LSLS     r0,r0,r7
        LDRB     r1,[r4,#0x19]
        ANDS     r0,r0,r1
        CBZ      r0,|L63.76|
        CMP      r8,#0
        BNE      |L63.70|
        STRB     r7,[r4,#0x18]
|L63.70|
        ADD      r8,r8,#1
        STRB     r7,[r4,#0x1a]
|L63.76|
        ADDS     r7,r7,#1
|L63.78|
        CMP      r7,#2
        BCC      |L63.52|
        CMP      r8,#2
        BHI      |L63.90|
        B        |L63.102|
|L63.90|
        MOV      r2,#0x583
        ADR      r1,|L63.240|
        ADR      r0,|L63.296|
        BL       __aeabi_assert
|L63.102|
        STRB     r8,[r4,#0x1b]
        LDRB     r0,[r4,#0x1b]
        CMP      r0,#1
        BLS      |L63.120|
        LDR      r0,[r5,#0x10]
        BIC      r0,r0,#0xc000000
        STR      r0,[r5,#0x10]
|L63.120|
        LDR      r0,[r5,#0xc]
        BIC      r0,r0,#0x30000
        STR      r0,[r5,#0xc]
        LDR      r0,[r5,#0xc]
        LDRB     r1,[r4,#0x19]
        MOV      r2,#0x30000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r5,#0xc]
        LDRB     r0,[r4,#0x17]
        CBZ      r0,|L63.154|
        CMP      r0,#1
        BNE      |L63.190|
        B        |L63.164|
|L63.154|
        LDR      r6,[r5,#8]
        BIC      r6,r6,#0xc0000000
        STR      r6,[r5,#8]
        B        |L63.192|
|L63.164|
        LDR      r6,[r5,#8]
        BIC      r6,r6,#0xc0000000
        ORR      r0,r6,#0x40000000
        STR      r0,[r5,#8]
        LDR      r6,[r5,#0x88]
        BIC      r6,r6,#0xc0000000
        STR      r6,[r5,#0x88]
        B        |L63.192|
|L63.190|
        NOP      
|L63.192|
        NOP      
        LDRB     r1,[r4,#0x16]
        ADD      r2,r4,#0xf
        MOV      r0,r5
        BL       SAI_TxSetBitclockConfig
        MOV      r1,r4
        MOV      r0,r5
        BL       SAI_TxSetSerialDataConfig
        LDRB     r1,[r4,#0x16]
        ADD      r2,r4,#0xc
        MOV      r0,r5
        BL       SAI_TxSetFrameSyncConfig
        ADD      r1,r4,#0x13
        MOV      r0,r5
        BL       SAI_TxSetFifoConfig
        POP      {r4-r8,pc}
        ENDP

|L63.240|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L63.280|
        DCB      "config != NULL",0
        DCB      0
|L63.296|
        DCB      "channelNums <= FSL_FEATURE_SAI_CHANNEL_COUNTn(base)",0

        AREA ||i.SAI_TxSetDataOrder||, CODE, READONLY, ALIGN=1

SAI_TxSetDataOrder PROC
        LDR      r3,[r0,#0x10]
        BIC      r2,r3,#0x10
        MOVS     r3,#0x10
        AND      r3,r3,r1,LSL #4
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x10]
        BX       lr
        ENDP


        AREA ||i.SAI_TxSetFIFOPacking||, CODE, READONLY, ALIGN=1

SAI_TxSetFIFOPacking PROC
        MOV      r2,r1
        LDR      r1,[r0,#0x10]
        BIC      r1,r1,#0x3000000
        MOV      r3,#0x3000000
        AND      r3,r3,r2,LSL #24
        ORRS     r1,r1,r3
        STR      r1,[r0,#0x10]
        BX       lr
        ENDP


        AREA ||i.SAI_TxSetFifoConfig||, CODE, READONLY, ALIGN=2

SAI_TxSetFifoConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBZ      r5,|L66.10|
        B        |L66.22|
|L66.10|
        MOV      r2,#0x49d
        ADR      r1,|L66.96|
        ADR      r0,|L66.136|
        BL       __aeabi_assert
|L66.22|
        LDRB     r0,[r5,#2]
        CMP      r0,#7
        BHI      |L66.30|
        B        |L66.42|
|L66.30|
        MOV      r2,#0x49f
        ADR      r1,|L66.96|
        LDR      r0,|L66.152|
        BL       __aeabi_assert
|L66.42|
        LDR      r6,[r4,#0x10]
        BIC      r6,r6,#0x10000000
        LDR      r0,[r4,#0x60]
        CBNZ     r0,|L66.64|
        LDRB     r0,[r5,#0]
        MOV      r1,#0x10000000
        AND      r0,r1,r0,LSL #28
        ORRS     r6,r6,r0
|L66.64|
        BIC      r6,r6,#0x3000000
        LDRB     r0,[r5,#1]
        MOV      r1,#0x3000000
        AND      r0,r1,r0,LSL #24
        ORRS     r6,r6,r0
        STR      r6,[r4,#0x10]
        LDRB     r1,[r5,#2]
        LDR      r0,[r4,#4]
        BFI      r0,r1,#0,#3
        STR      r0,[r4,#4]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L66.96|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L66.136|
        DCB      "config != NULL",0
        DCB      0
|L66.152|
        DCD      ||.conststring||

        AREA ||i.SAI_TxSetFormat||, CODE, READONLY, ALIGN=2

SAI_TxSetFormat PROC
        PUSH     {r0-r12,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r9,r3
        MOV      r11,#0
        MOVS     r6,#0
        MOVS     r7,#0
        MOV      r8,r6
        MOV      r10,r6
        LDRB     r0,[r4,#0x16]
        CBZ      r0,|L67.70|
        LDRD     r0,r1,[r4,#0]
        MULS     r0,r1,r0
        LDRB     r1,[r4,#8]
        CBNZ     r1,|L67.40|
        MOVS     r1,#2
        B        |L67.42|
|L67.40|
        MOVS     r1,#1
|L67.42|
        MUL      r11,r0,r1
        LDR      r0,[r5,#0x10]
        BIC      r6,r0,#0x1f00
        LDR      r0,[r4,#4]
        SUBS     r0,r0,#1
        MOV      r1,#0x1f00
        AND      r0,r1,r0,LSL #8
        ORRS     r6,r6,r0
        STR      r6,[r5,#0x10]
        B        |L67.76|
|L67.70|
        LDR      r0,[r4,#0]
        LSL      r11,r0,#6
|L67.76|
        LDR      r0,[r5,#0x100]
        AND      r0,r0,#0x40000000
        CBZ      r0,|L67.96|
        LDR      r1,[r4,#0xc]
        MOV      r0,r5
        LDR      r2,[sp,#8]
        BL       SAI_SetMasterClockDivider
|L67.96|
        LDR      r0,[r5,#8]
        AND      r0,r0,#0x1000000
        CBZ      r0,|L67.152|
        LDR      r0,[r5,#8]
        BIC      r0,r0,#0xff
        STR      r0,[r5,#8]
        UDIV     r8,r9,r11
        CMP      r8,#0
        BNE      |L67.126|
        ADD      r8,r8,#1
|L67.126|
        UDIV     r0,r9,r8
        CMP      r0,r11
        BLS      |L67.138|
        ADD      r8,r8,#1
|L67.138|
        LDR      r0,[r5,#8]
        MOVS     r1,#1
        RSB      r1,r1,r8,LSR #1
        UXTB     r1,r1
        ORRS     r0,r0,r1
        STR      r0,[r5,#8]
|L67.152|
        LDRB     r0,[r4,#0x16]
        CBZ      r0,|L67.162|
        LDR      r0,[r4,#4]
        SUBS     r0,r0,#1
        B        |L67.164|
|L67.162|
        MOVS     r0,#0x1f
|L67.164|
        MOV      r6,r0
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L67.204|
        MOV      r0,#0x1f000000
        AND      r0,r0,r6,LSL #24
        MOV      r1,#0x1f0000
        AND      r1,r1,r6,LSL #16
        ORRS     r0,r0,r1
        MOV      r1,#0x1f00
        AND      r1,r1,r6,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x14]
        B        |L67.268|
|L67.204|
        LDR      r0,[r5,#0x10]
        AND      r0,r0,#0x10
        CBZ      r0,|L67.248|
        MOV      r0,#0x1f000000
        AND      r0,r0,r6,LSL #24
        MOV      r1,#0x1f0000
        AND      r1,r1,r6,LSL #16
        ORRS     r0,r0,r1
        LDR      r1,[r4,#4]
        SUBS     r1,r1,#1
        MOV      r2,#0x1f00
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x14]
        B        |L67.268|
|L67.248|
        MOV      r0,#0x1f000000
        AND      r0,r0,r6,LSL #24
        MOV      r1,#0x1f0000
        AND      r1,r1,r6,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x14]
|L67.268|
        LDRB     r0,[r4,#8]
        STR      r0,[r5,#0x60]
        LDRB     r0,[r4,#0x12]
        CBNZ     r0,|L67.284|
        LDRB     r1,[r4,#0x11]
        MOVS     r0,#1
        LSLS     r0,r0,r1
        STRB     r0,[r4,#0x12]
|L67.284|
        MOVS     r7,#0
        B        |L67.314|
|L67.288|
        MOVS     r0,#1
        LSLS     r0,r0,r7
        LDRB     r1,[r4,#0x12]
        ANDS     r0,r0,r1
        CBZ      r0,|L67.312|
        CMP      r10,#0
        BNE      |L67.306|
        STRB     r7,[r4,#0x11]
|L67.306|
        ADD      r10,r10,#1
        STRB     r7,[r4,#0x13]
|L67.312|
        ADDS     r7,r7,#1
|L67.314|
        CMP      r7,#2
        BCC      |L67.288|
        STRB     r10,[r4,#0x14]
        LDRB     r0,[r4,#0x14]
        CMP      r0,#2
        BGT      |L67.330|
        B        |L67.342|
|L67.330|
        MOV      r2,#0x74c
        ADR      r1,|L67.388|
        ADR      r0,|L67.428|
        BL       __aeabi_assert
|L67.342|
        LDRB     r0,[r4,#0x14]
        CMP      r0,#1
        BLS      |L67.356|
        LDR      r0,[r5,#0x10]
        BIC      r0,r0,#0xc000000
        STR      r0,[r5,#0x10]
|L67.356|
        LDR      r0,[r5,#0xc]
        BIC      r0,r0,#0x30000
        STR      r0,[r5,#0xc]
        LDR      r0,[r5,#0xc]
        LDRB     r1,[r4,#0x12]
        MOV      r2,#0x30000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        STR      r0,[r5,#0xc]
        LDRB     r0,[r4,#0x10]
        STR      r0,[r5,#4]
        POP      {r0-r12,pc}
        ENDP

|L67.388|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L67.428|
        DCB      "format->channelNums <= FSL_FEATURE_SAI_CHANNEL_COUNTn(b"
        DCB      "ase)",0

        AREA ||i.SAI_TxSetFrameSyncConfig||, CODE, READONLY, ALIGN=2

SAI_TxSetFrameSyncConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r4,r2
        LDR      r5,[r6,#0x10]
        CBZ      r7,|L68.18|
        CMP      r7,#3
        BNE      |L68.100|
|L68.18|
        CBZ      r4,|L68.22|
        B        |L68.34|
|L68.22|
        MOV      r2,#0x4f0
        ADR      r1,|L68.112|
        ADR      r0,|L68.152|
        BL       __aeabi_assert
|L68.34|
        LDRB     r0,[r4,#0]
        SUBS     r0,r0,#1
        CMP      r0,#0x1f
        BHI      |L68.44|
        B        |L68.56|
|L68.44|
        MOV      r2,#0x4f1
        ADR      r1,|L68.112|
        LDR      r0,|L68.168|
        BL       __aeabi_assert
|L68.56|
        MOV      r0,#0x1f0b
        BICS     r5,r5,r0
        LDRB     r0,[r4,#1]
        MOVS     r1,#8
        AND      r0,r1,r0,LSL #3
        LDRB     r1,[r4,#2]
        MOVS     r2,#2
        AND      r1,r2,r1,LSL #1
        ORRS     r0,r0,r1
        ADDS     r0,r0,#1
        LDRB     r1,[r4,#0]
        SUBS     r1,r1,#1
        MOV      r2,#0x1f00
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        B        |L68.104|
|L68.100|
        BIC      r5,r5,#1
|L68.104|
        STR      r5,[r6,#0x10]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L68.112|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L68.152|
        DCB      "config != NULL",0
        DCB      0
|L68.168|
        DCD      ||.conststring||+0x44

        AREA ||i.SAI_TxSetFrameSyncPolarity||, CODE, READONLY, ALIGN=1

SAI_TxSetFrameSyncPolarity PROC
        LDR      r3,[r0,#0x10]
        BIC      r2,r3,#2
        MOVS     r3,#2
        AND      r3,r3,r1,LSL #1
        ORRS     r2,r2,r3
        STR      r2,[r0,#0x10]
        BX       lr
        ENDP


        AREA ||i.SAI_TxSetSerialDataConfig||, CODE, READONLY, ALIGN=2

SAI_TxSetSerialDataConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L70.10|
        B        |L70.22|
|L70.10|
        MOV      r2,#0x52f
        ADR      r1,|L70.108|
        ADR      r0,|L70.148|
        BL       __aeabi_assert
|L70.22|
        LDR      r6,[r5,#0x10]
        LDRB     r0,[r4,#2]
        SUBS     r0,r0,#1
        MOV      r1,#0x1f000000
        AND      r0,r1,r0,LSL #24
        LDRB     r1,[r4,#1]
        SUBS     r1,r1,#1
        MOV      r2,#0x1f0000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        LDRB     r1,[r4,#4]
        SUBS     r1,r1,#1
        ASRS     r2,r2,#8
        AND      r1,r2,r1,LSL #8
        ORRS     r0,r0,r1
        STR      r0,[r5,#0x14]
        LDR      r0,[r4,#8]
        STR      r0,[r5,#0x60]
        LDR      r0,[r4,#8]
        CBZ      r0,|L70.76|
        BIC      r6,r6,#0x10000000
|L70.76|
        LDR      r0,|L70.164|
        ANDS     r6,r6,r0
        LDRB     r0,[r4,#5]
        SUBS     r0,r0,#1
        MOV      r1,#0x1f0000
        AND      r0,r1,r0,LSL #16
        LDRB     r1,[r4,#0]
        MOVS     r2,#0x10
        AND      r1,r2,r1,LSL #4
        ORRS     r0,r0,r1
        ORRS     r6,r6,r0
        STR      r6,[r5,#0x10]
        POP      {r4-r6,pc}
        ENDP

|L70.108|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L70.148|
        DCB      "config != NULL",0
        DCB      0
|L70.164|
        DCD      0xffe0ffef

        AREA ||i.SAI_TxSoftwareReset||, CODE, READONLY, ALIGN=1

SAI_TxSoftwareReset PROC
        LDR      r2,[r0,#0]
        ORRS     r2,r2,r1
        STR      r2,[r0,#0]
        LDR      r2,[r0,#0]
        BIC      r2,r2,#0x1000000
        STR      r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.SAI_WriteBlocking||, CODE, READONLY, ALIGN=1

SAI_WriteBlocking PROC
        PUSH     {r1-r11,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r8,r3
        LDR      r10,[sp,#0x30]
        MOV      r9,#0
        UBFX     r5,r7,#3,#8
        LDR      r0,[r4,#4]
        RSB      r0,r0,#8
        MULS     r0,r5,r0
        UXTB     r5,r0
        B        |L72.74|
|L72.36|
        NOP      
|L72.38|
        LDR      r0,[r4,#0]
        AND      r0,r0,#0x20000
        CMP      r0,#0
        BEQ      |L72.38|
        MOVS     r0,#1
        LSL      r2,r0,r6
        MOV      r3,r6
        MOV      r1,r6
        MOV      r0,r4
        STRD     r7,r8,[sp,#0]
        STR      r5,[sp,#8]
        BL       SAI_WriteNonBlocking
        ADD      r8,r8,r5
        ADD      r9,r9,r5
|L72.74|
        CMP      r9,r10
        BCC      |L72.36|
        NOP      
|L72.80|
        LDR      r0,[r4,#0]
        AND      r0,r0,#0x20000
        CMP      r0,#0
        BEQ      |L72.80|
        POP      {r1-r11,pc}
        ENDP


        AREA ||i.SAI_WriteMultiChannelBlocking||, CODE, READONLY, ALIGN=2

SAI_WriteMultiChannelBlocking PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#0x14
        MOV      r5,r0
        MOV      r9,r2
        MOV      r7,r3
        LDR      r10,[sp,#0x48]
        MOVS     r6,#0
        MOV      r11,r6
        UBFX     r4,r7,#3,#8
        MOV      r8,r6
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        LDR      r0,[r5,#4]
        RSB      r0,r0,#8
        MULS     r0,r4,r0
        UXTB     r4,r0
        NOP      
        B        |L73.62|
|L73.44|
        MOVS     r0,#1
        LSLS     r0,r0,r6
        AND      r0,r0,r9
        CBZ      r0,|L73.60|
        ADD      r8,r8,#1
        STR      r6,[sp,#0x10]
|L73.60|
        ADDS     r6,r6,#1
|L73.62|
        CMP      r6,#2
        BCC      |L73.44|
        CMP      r8,#2
        BHI      |L73.74|
        B        |L73.86|
|L73.74|
        MOV      r2,#0x833
        ADR      r1,|L73.152|
        ADR      r0,|L73.192|
        BL       __aeabi_assert
|L73.86|
        MUL      r0,r4,r8
        UXTB     r4,r0
        B        |L73.128|
|L73.94|
        NOP      
|L73.96|
        LDR      r0,[r5,#0]
        AND      r0,r0,#0x20000
        CMP      r0,#0
        BEQ      |L73.96|
        STRD     r7,r10,[sp,#0]
        STR      r4,[sp,#8]
        MOV      r2,r9
        MOV      r0,r5
        LDR      r3,[sp,#0x10]
        LDR      r1,[sp,#0x18]
        BL       SAI_WriteNonBlocking
        ADD      r10,r10,r4
        ADD      r11,r11,r4
|L73.128|
        LDR      r0,[sp,#0x4c]
        CMP      r11,r0
        BCC      |L73.94|
        NOP      
|L73.136|
        LDR      r0,[r5,#0]
        AND      r0,r0,#0x20000
        CMP      r0,#0
        BEQ      |L73.136|
        ADD      sp,sp,#0x24
        POP      {r4-r11,pc}
        ENDP

|L73.152|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c",0
|L73.192|
        DCB      "channelNums <= FSL_FEATURE_SAI_CHANNEL_COUNTn(base)",0

        AREA ||i.SAI_WriteNonBlocking||, CODE, READONLY, ALIGN=1

SAI_WriteNonBlocking PROC
        PUSH     {r4-r11,lr}
        MOV      r5,r0
        MOV      r6,r1
        LDRD     r4,lr,[sp,#0x28]
        LDR      r8,[sp,#0x24]
        MOVS     r7,#0
        MOVS     r0,#0
        MOVS     r1,#0
        UBFX     r12,r8,#3,#8
        MOV      r9,r0
        MOV      r10,r0
        NOP      
        B        |L74.116|
|L74.34|
        UXTB     r0,r6
        B        |L74.110|
|L74.38|
        MOV      r11,#1
        LSL      r11,r11,r0
        AND      r11,r11,r2
        CMP      r11,#0
        BEQ      |L74.102|
        MOVS     r1,#0
        B        |L74.86|
|L74.60|
        LDRB     r10,[r4,#0]
        LSL      r11,r1,#3
        LSL      r11,r10,r11
        ORR      r9,r11,r9
        ADDS     r4,r4,#1
        ADD      r11,r1,#1
        AND      r1,r11,#0xff
|L74.86|
        CMP      r1,r12
        BLT      |L74.60|
        ADD      r11,r5,#0x20
        STR      r9,[r11,r0,LSL #2]
        MOV      r9,#0
|L74.102|
        ADD      r11,r0,#1
        AND      r0,r11,#0xff
|L74.110|
        CMP      r0,r3
        BLS      |L74.38|
        ADDS     r7,r7,#1
|L74.116|
        UDIV     r11,lr,r12
        CMP      r11,r7
        BHI      |L74.34|
        POP      {r4-r11,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

s_saiBases
        DCD      0x4002f000
s_saiTxIRQ
        DCB      0x1c
s_saiRxIRQ
        DCB      0x1d,0x00,0x00
s_saiClock
        DCD      0x103c000f

        AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

        DCB      "config->fifoWatermark <= (I2S_TCR1_TFW_MASK >> I2S_TCR1"
        DCB      "_TFW_SHIFT)",0
        DCB      0
        DCB      "(config->frameSyncWidth - 1U) <= (I2S_TCR4_SYWD_MASK >>"
        DCB      " I2S_TCR4_SYWD_SHIFT)",0
        DCB      0
        DCB      0
        DCB      0
        DCB      "(config->frameSyncWidth - 1U) <= (I2S_RCR4_SYWD_MASK >>"
        DCB      " I2S_RCR4_SYWD_SHIFT)",0

        AREA ||.data||, DATA, ALIGN=2

s_saiHandle
        %        8
s_saiTxIsr
        DCD      0x00000000
s_saiRxIsr
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_sai.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_sai_c_82b07758____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_fsl_sai_c_82b07758____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_sai_c_82b07758____REVSH|
#line 483
|__asm___9_fsl_sai_c_82b07758____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_fsl_sai_c_82b07758____RRX|
#line 670
|__asm___9_fsl_sai_c_82b07758____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT I2S0_DriverIRQHandler [CODE]
        EXPORT I2S0_Rx_DriverIRQHandler [CODE]
        EXPORT I2S0_Tx_DriverIRQHandler [CODE]
        EXPORT SAI_Deinit [CODE]
        EXPORT SAI_GetClassicI2SConfig [CODE]
        EXPORT SAI_GetDSPConfig [CODE]
        EXPORT SAI_GetLeftJustifiedConfig [CODE]
        EXPORT SAI_GetRightJustifiedConfig [CODE]
        EXPORT SAI_GetTDMConfig [CODE]
        EXPORT SAI_Init [CODE]
        EXPORT SAI_ReadBlocking [CODE]
        EXPORT SAI_ReadMultiChannelBlocking [CODE]
        EXPORT SAI_RxEnable [CODE]
        EXPORT SAI_RxGetDefaultConfig [CODE]
        EXPORT SAI_RxInit [CODE]
        EXPORT SAI_RxReset [CODE]
        EXPORT SAI_RxSetBitClockPolarity [CODE]
        EXPORT SAI_RxSetBitClockRate [CODE]
        EXPORT SAI_RxSetBitclockConfig [CODE]
        EXPORT SAI_RxSetChannelFIFOMask [CODE]
        EXPORT SAI_RxSetConfig [CODE]
        EXPORT SAI_RxSetDataOrder [CODE]
        EXPORT SAI_RxSetFIFOPacking [CODE]
        EXPORT SAI_RxSetFifoConfig [CODE]
        EXPORT SAI_RxSetFormat [CODE]
        EXPORT SAI_RxSetFrameSyncConfig [CODE]
        EXPORT SAI_RxSetFrameSyncPolarity [CODE]
        EXPORT SAI_RxSetSerialDataConfig [CODE]
        EXPORT SAI_RxSoftwareReset [CODE]
        EXPORT SAI_SetMasterClockConfig [CODE]
        EXPORT SAI_TransferAbortReceive [CODE]
        EXPORT SAI_TransferAbortSend [CODE]
        EXPORT SAI_TransferGetReceiveCount [CODE]
        EXPORT SAI_TransferGetSendCount [CODE]
        EXPORT SAI_TransferReceiveNonBlocking [CODE]
        EXPORT SAI_TransferRxCreateHandle [CODE]
        EXPORT SAI_TransferRxHandleIRQ [CODE]
        EXPORT SAI_TransferRxSetConfig [CODE]
        EXPORT SAI_TransferRxSetFormat [CODE]
        EXPORT SAI_TransferSendNonBlocking [CODE]
        EXPORT SAI_TransferTerminateReceive [CODE]
        EXPORT SAI_TransferTerminateSend [CODE]
        EXPORT SAI_TransferTxCreateHandle [CODE]
        EXPORT SAI_TransferTxHandleIRQ [CODE]
        EXPORT SAI_TransferTxSetConfig [CODE]
        EXPORT SAI_TransferTxSetFormat [CODE]
        EXPORT SAI_TxEnable [CODE]
        EXPORT SAI_TxGetDefaultConfig [CODE]
        EXPORT SAI_TxInit [CODE]
        EXPORT SAI_TxReset [CODE]
        EXPORT SAI_TxSetBitClockPolarity [CODE]
        EXPORT SAI_TxSetBitClockRate [CODE]
        EXPORT SAI_TxSetBitclockConfig [CODE]
        EXPORT SAI_TxSetChannelFIFOMask [CODE]
        EXPORT SAI_TxSetConfig [CODE]
        EXPORT SAI_TxSetDataOrder [CODE]
        EXPORT SAI_TxSetFIFOPacking [CODE]
        EXPORT SAI_TxSetFifoConfig [CODE]
        EXPORT SAI_TxSetFormat [CODE]
        EXPORT SAI_TxSetFrameSyncConfig [CODE]
        EXPORT SAI_TxSetFrameSyncPolarity [CODE]
        EXPORT SAI_TxSetSerialDataConfig [CODE]
        EXPORT SAI_TxSoftwareReset [CODE]
        EXPORT SAI_WriteBlocking [CODE]
        EXPORT SAI_WriteMultiChannelBlocking [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT __aeabi_memclr4 [CODE]

        KEEP CLOCK_EnableClock
        KEEP EnableIRQ
        KEEP SAI_GetCommonConfig
        KEEP SAI_GetInstance
        KEEP SAI_ReadNonBlocking
        KEEP SAI_RxClearStatusFlags
        KEEP SAI_SetMasterClockDivider
        KEEP SAI_TxClearStatusFlags
        KEEP SAI_WriteNonBlocking
        KEEP s_saiBases
        KEEP s_saiTxIRQ
        KEEP s_saiRxIRQ
        KEEP s_saiClock
        KEEP s_saiHandle
        KEEP s_saiTxIsr
        KEEP s_saiRxIsr

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
