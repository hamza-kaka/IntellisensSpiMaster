; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_sysmpu.o --depend=.\objects\fsl_sysmpu.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_sysmpu.crf ..\..\devices\MK66F18\drivers\fsl_sysmpu.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SYSMPU_Deinit||, CODE, READONLY, ALIGN=2

SYSMPU_Deinit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOVS     r1,#0
        MOV      r0,r4
        BL       SYSMPU_Enable
        LDR      r1,|L1.36|
        LDR      r0,[r1,#0]  ; g_sysmpuClock
        LDR      r2,|L1.40|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        BICS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        POP      {r4,pc}
        ENDP

|L1.36|
        DCD      g_sysmpuClock
|L1.40|
        DCD      0x40047000

        AREA ||i.SYSMPU_Enable||, CODE, READONLY, ALIGN=1

SYSMPU_Enable PROC
        CBZ      r1,|L2.12|
        LDR      r2,[r0,#0]
        ORR      r2,r2,#1
        STR      r2,[r0,#0]
        B        |L2.20|
|L2.12|
        LDR      r2,[r0,#0]
        BIC      r2,r2,#1
        STR      r2,[r0,#0]
|L2.20|
        BX       lr
        ENDP


        AREA ||i.SYSMPU_GetDetailErrorAccessInfo||, CODE, READONLY, ALIGN=2

SYSMPU_GetDetailErrorAccessInfo PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r4,r2
        CBZ      r4,|L3.14|
        B        |L3.26|
|L3.14|
        MOV      r2,#0x129
        ADR      r1,|L3.132|
        ADR      r0,|L3.176|
        BL       __aeabi_assert
|L3.26|
        ADD      r0,r6,#0x10
        LDR      r0,[r0,r7,LSL #3]
        STR      r0,[r4,#8]
        ADD      r0,r6,#0x10
        ADD      r0,r0,r7,LSL #3
        LDR      r0,[r0,#4]
        LSRS     r5,r0,#16
        CBNZ     r5,|L3.56|
        MOVS     r0,#0
        STRB     r0,[r4,#6]
        B        |L3.72|
|L3.56|
        SUBS     r0,r5,#1
        ANDS     r0,r0,r5
        CBNZ     r0,|L3.68|
        MOVS     r0,#1
        STRB     r0,[r4,#6]
        B        |L3.72|
|L3.68|
        MOVS     r0,#2
        STRB     r0,[r4,#6]
|L3.72|
        ADD      r0,r6,#0x10
        ADD      r0,r0,r7,LSL #3
        LDR      r0,[r0,#4]
        UXTH     r5,r0
        UBFX     r0,r5,#4,#4
        STR      r0,[r4,#0]
        UBFX     r0,r5,#1,#3
        STRB     r0,[r4,#4]
        AND      r0,r5,#1
        STRB     r0,[r4,#5]
        LSRS     r0,r5,#8
        STRB     r0,[r4,#0xc]
        RSB      r0,r7,#4
        MOVS     r1,#1
        LSL      r0,r1,r0
        LDR      r8,[r6,#0]
        BFI      r8,r0,#27,#5
        STR      r8,[r6,#0]
        POP      {r4-r8,pc}
        ENDP

|L3.132|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L3.176|
        DCB      "errInform",0
        DCB      0
        DCB      0

        AREA ||i.SYSMPU_GetHardwareInfo||, CODE, READONLY, ALIGN=2

SYSMPU_GetHardwareInfo PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        CBZ      r4,|L4.10|
        B        |L4.20|
|L4.10|
        MOVS     r2,#0x5a
        ADR      r1,|L4.44|
        ADR      r0,|L4.88|
        BL       __aeabi_assert
|L4.20|
        LDR      r5,[r6,#0]
        UBFX     r0,r5,#16,#4
        STRB     r0,[r4,#0]
        UBFX     r0,r5,#12,#4
        STRB     r0,[r4,#1]
        UBFX     r0,r5,#8,#4
        STRB     r0,[r4,#2]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L4.44|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L4.88|
        DCB      "hardwareInform",0
        DCB      0

        AREA ||i.SYSMPU_GetSlavePortErrorStatus||, CODE, READONLY, ALIGN=1

SYSMPU_GetSlavePortErrorStatus PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        RSB      r0,r1,#4
        MOVS     r4,#1
        LSLS     r4,r4,r0
        LDR      r0,[r2,#0]
        AND      r3,r4,r0,LSR #27
        CBZ      r3,|L5.24|
        MOVS     r0,#1
|L5.22|
        POP      {r4,pc}
|L5.24|
        MOVS     r0,#0
        B        |L5.22|
        ENDP


        AREA ||i.SYSMPU_Init||, CODE, READONLY, ALIGN=2

SYSMPU_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r6,r1
        CBZ      r6,|L6.10|
        B        |L6.20|
|L6.10|
        MOVS     r2,#0x26
        ADR      r1,|L6.132|
        ADR      r0,|L6.176|
        BL       __aeabi_assert
|L6.20|
        LDR      r1,|L6.184|
        LDR      r0,[r1,#0]  ; g_sysmpuClock
        LDR      r2,|L6.188|
        ADD      r1,r2,r0,LSR #16
        LDR      r2,[r1,#0]
        MOVS     r3,#1
        LSLS     r3,r3,r0
        ORRS     r2,r2,r3
        STR      r2,[r1,#0]
        NOP      
        MOVS     r4,#1
        B        |L6.100|
|L6.46|
        MOVS     r1,#0
        ADD      r0,r5,#0x400
        ADD      r0,r0,r4,LSL #4
        STR      r1,[r0,#0xc]
        ADD      r0,r5,#0x400
        ADD      r0,r0,r4,LSL #4
        STR      r1,[r0,#0]
        ADD      r0,r5,#0x400
        ADD      r0,r0,r4,LSL #4
        STR      r1,[r0,#4]
        ADD      r0,r5,#0x400
        ADD      r0,r0,r4,LSL #4
        STR      r1,[r0,#8]
        ADD      r0,r5,#0x800
        STR      r1,[r0,r4,LSL #2]
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L6.100|
        CMP      r4,#0xc
        BLT      |L6.46|
        B        |L6.116|
|L6.106|
        MOV      r1,r6
        MOV      r0,r5
        BL       SYSMPU_SetRegionConfig
        LDR      r6,[r6,#0x24]
|L6.116|
        CMP      r6,#0
        BNE      |L6.106|
        MOVS     r1,#1
        MOV      r0,r5
        BL       SYSMPU_Enable
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L6.132|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L6.176|
        DCB      "config",0
        DCB      0
|L6.184|
        DCD      g_sysmpuClock
|L6.188|
        DCD      0x40047000

        AREA ||i.SYSMPU_SetRegionAddr||, CODE, READONLY, ALIGN=2

SYSMPU_SetRegionAddr PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        CMP      r4,#0xc
        BCS      |L7.18|
        B        |L7.28|
|L7.18|
        MOVS     r2,#0xb1
        ADR      r1,|L7.52|
        ADR      r0,|L7.96|
        BL       __aeabi_assert
|L7.28|
        ADD      r0,r5,#0x400
        ADD      r0,r0,r4,LSL #4
        STR      r6,[r0,#0]
        ADD      r0,r5,#0x400
        ADD      r0,r0,r4,LSL #4
        STR      r7,[r0,#4]
        POP      {r4-r8,pc}
        ENDP

|L7.52|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L7.96|
        DCB      "regionNum < FSL_FEATURE_SYSMPU_DESCRIPTOR_COUNT",0

        AREA ||i.SYSMPU_SetRegionConfig||, CODE, READONLY, ALIGN=2

SYSMPU_SetRegionConfig PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r5,r1
        CBZ      r5,|L8.12|
        B        |L8.22|
|L8.12|
        MOVS     r2,#0x71
        ADR      r1,|L8.284|
        ADR      r0,|L8.328|
        BL       __aeabi_assert
|L8.22|
        LDR      r0,[r5,#0]
        CMP      r0,#0xc
        BCS      |L8.30|
        B        |L8.40|
|L8.30|
        MOVS     r2,#0x72
        ADR      r1,|L8.284|
        ADR      r0,|L8.344|
        BL       __aeabi_assert
|L8.40|
        MOVS     r6,#0
        LDRB     r8,[r5,#0]
        ADD      r0,r7,#0x400
        ADD      r0,r0,r8,LSL #4
        LDR      r1,[r5,#4]
        STR      r1,[r0,#0]
        ADD      r0,r7,#0x400
        ADD      r0,r0,r8,LSL #4
        LDR      r1,[r5,#8]
        STR      r1,[r0,#4]
        MOVS     r4,#0
        B        |L8.166|
|L8.74|
        ADD      r1,r4,r4,LSL #1
        ADD      r0,r5,#0xc
        ADD      r0,r0,r1
        LDRB     r1,[r0,#1]
        ADD      r2,r4,r4,LSL #1
        ADD      r0,r5,#0xc
        LDRB     r0,[r0,r2]
        ORR      r0,r1,r0,LSL #3
        ADD      r1,r4,r4,LSL #1
        LSLS     r1,r1,#1
        LSLS     r0,r0,r1
        ADD      r1,r4,r4,LSL #1
        LSLS     r2,r1,#1
        MOVS     r1,#0x1f
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        ORRS     r6,r6,r0
        ADD      r1,r4,r4,LSL #1
        ADD      r0,r5,#0xc
        ADD      r0,r0,r1
        LDRB     r0,[r0,#2]
        ADD      r1,r4,r4,LSL #1
        MOVS     r2,#5
        ADD      r1,r2,r1,LSL #1
        LSLS     r0,r0,r1
        ADD      r1,r4,r4,LSL #1
        ADD      r2,r2,r1,LSL #1
        MOVS     r1,#1
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        ORRS     r6,r6,r0
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L8.166|
        CMP      r4,#4
        BLT      |L8.74|
        MOVS     r4,#4
        B        |L8.224|
|L8.174|
        SUBS     r0,r4,#4
        ADD      r1,r5,#0x18
        LDRB     r2,[r1,r0,LSL #1]
        ADD      r0,r1,r0,LSL #1
        LDRB     r0,[r0,#1]
        ORR      r1,r2,r0,LSL #1
        SUBS     r0,r4,#4
        MOVS     r2,#0x18
        ADD      r0,r2,r0,LSL #1
        LSL      r0,r1,r0
        SUBS     r1,r4,#4
        ADD      r2,r2,r1,LSL #1
        MOVS     r1,#3
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        ORRS     r6,r6,r0
        ADDS     r0,r4,#1
        UXTB     r4,r0
|L8.224|
        CMP      r4,#7
        BLT      |L8.174|
        ADD      r0,r7,#0x400
        ADD      r0,r0,r8,LSL #4
        STR      r6,[r0,#8]
        MOVS     r6,#1
        LDRB     r0,[r5,#0x20]
        MOV      r1,#0xff000000
        AND      r0,r1,r0,LSL #24
        LDRB     r1,[r5,#0x21]
        MOV      r2,#0xff0000
        AND      r1,r2,r1,LSL #16
        ORRS     r0,r0,r1
        ORRS     r6,r6,r0
        ADD      r0,r7,#0x400
        ADD      r0,r0,r8,LSL #4
        STR      r6,[r0,#0xc]
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L8.284|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L8.328|
        DCB      "regionConfig",0
        DCB      0
        DCB      0
        DCB      0
|L8.344|
        DCB      "regionConfig->regionNum < FSL_FEATURE_SYSMPU_DESCRIPTOR"
        DCB      "_COUNT",0
        DCB      0
        DCB      0

        AREA ||i.SYSMPU_SetRegionRwMasterAccessRights||, CODE, READONLY, ALIGN=2

SYSMPU_SetRegionRwMasterAccessRights PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r6,r3
        CBZ      r6,|L9.16|
        B        |L9.26|
|L9.16|
        MOVS     r2,#0xfc
        ADR      r1,|L9.148|
        ADR      r0,|L9.192|
        BL       __aeabi_assert
|L9.26|
        CMP      r5,#0xc
        BCS      |L9.32|
        B        |L9.42|
|L9.32|
        MOVS     r2,#0xfd
        ADR      r1,|L9.148|
        ADR      r0,|L9.208|
        BL       __aeabi_assert
|L9.42|
        CMP      r4,#4
        BCC      |L9.48|
        B        |L9.58|
|L9.48|
        MOVS     r2,#0xfe
        ADR      r1,|L9.148|
        ADR      r0,|L9.256|
        BL       __aeabi_assert
|L9.58|
        CMP      r4,#6
        BHI      |L9.64|
        B        |L9.74|
|L9.64|
        MOVS     r2,#0xff
        ADR      r1,|L9.148|
        ADR      r0,|L9.308|
        BL       __aeabi_assert
|L9.74|
        SUBS     r0,r4,#4
        MOVS     r1,#0x18
        ADD      r1,r1,r0,LSL #1
        MOVS     r0,#3
        LSL      r9,r0,r1
        ADD      r0,r7,#0x800
        LDR      r8,[r0,r5,LSL #2]
        BIC      r8,r8,r9
        LDRB     r0,[r6,#0]
        LDRB     r1,[r6,#1]
        ORR      r1,r0,r1,LSL #1
        SUBS     r0,r4,#4
        MOVS     r2,#0x18
        ADD      r0,r2,r0,LSL #1
        LSL      r0,r1,r0
        SUBS     r1,r4,#4
        ADD      r2,r2,r1,LSL #1
        MOVS     r1,#3
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        ORR      r8,r0,r8
        ADD      r0,r7,#0x800
        STR      r8,[r0,r5,LSL #2]
        POP      {r4-r10,pc}
        ENDP

|L9.148|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L9.192|
        DCB      "accessRights",0
        DCB      0
        DCB      0
        DCB      0
|L9.208|
        DCB      "regionNum < FSL_FEATURE_SYSMPU_DESCRIPTOR_COUNT",0
|L9.256|
        DCB      "masterNum >= SYSMPU_MASTER_RWATTRIBUTE_START_PORT",0
        DCB      0
        DCB      0
|L9.308|
        DCB      "masterNum <= (FSL_FEATURE_SYSMPU_MASTER_COUNT - 1)",0
        DCB      0

        AREA ||i.SYSMPU_SetRegionRwxMasterAccessRights||, CODE, READONLY, ALIGN=2

SYSMPU_SetRegionRwxMasterAccessRights PROC
        PUSH     {r4-r10,lr}
        MOV      r8,r0
        MOV      r6,r1
        MOV      r4,r2
        MOV      r5,r3
        CBZ      r5,|L10.16|
        B        |L10.26|
|L10.16|
        MOVS     r2,#0xd0
        ADR      r1,|L10.172|
        ADR      r0,|L10.216|
        BL       __aeabi_assert
|L10.26|
        CMP      r6,#0xc
        BCS      |L10.32|
        B        |L10.42|
|L10.32|
        MOVS     r2,#0xd1
        ADR      r1,|L10.172|
        ADR      r0,|L10.232|
        BL       __aeabi_assert
|L10.42|
        CMP      r4,#4
        BCS      |L10.48|
        B        |L10.58|
|L10.48|
        MOVS     r2,#0xd2
        ADR      r1,|L10.172|
        ADR      r0,|L10.280|
        BL       __aeabi_assert
|L10.58|
        ADD      r0,r4,r4,LSL #1
        LSLS     r1,r0,#1
        MOVS     r0,#0x1f
        LSL      r9,r0,r1
        ADD      r0,r8,#0x800
        LDR      r7,[r0,r6,LSL #2]
        ADD      r0,r4,r4,LSL #1
        MOVS     r1,#5
        ADD      r1,r1,r0,LSL #1
        MOVS     r0,#1
        LSLS     r0,r0,r1
        ORR      r9,r0,r9
        BIC      r7,r7,r9
        LDRB     r0,[r5,#1]
        LDRB     r1,[r5,#0]
        ORR      r0,r0,r1,LSL #3
        ADD      r1,r4,r4,LSL #1
        LSLS     r1,r1,#1
        LSLS     r0,r0,r1
        ADD      r1,r4,r4,LSL #1
        LSLS     r2,r1,#1
        MOVS     r1,#0x1f
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        ORRS     r7,r7,r0
        LDRB     r0,[r5,#2]
        ADD      r1,r4,r4,LSL #1
        MOVS     r2,#5
        ADD      r1,r2,r1,LSL #1
        LSLS     r0,r0,r1
        ADD      r1,r4,r4,LSL #1
        ADD      r2,r2,r1,LSL #1
        MOVS     r1,#1
        LSLS     r1,r1,r2
        ANDS     r0,r0,r1
        ORRS     r7,r7,r0
        ADD      r0,r8,#0x800
        STR      r7,[r0,r6,LSL #2]
        POP      {r4-r10,pc}
        ENDP

|L10.172|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c",0
        DCB      0
|L10.216|
        DCB      "accessRights",0
        DCB      0
        DCB      0
        DCB      0
|L10.232|
        DCB      "regionNum < FSL_FEATURE_SYSMPU_DESCRIPTOR_COUNT",0
|L10.280|
        DCB      "masterNum < SYSMPU_MASTER_RWATTRIBUTE_START_PORT",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

g_sysmpuClock
        DCD      0x10400002

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_sysmpu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_sysmpu_c_b44ab17b____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_fsl_sysmpu_c_b44ab17b____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_sysmpu_c_b44ab17b____REVSH|
#line 483
|__asm___12_fsl_sysmpu_c_b44ab17b____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_sysmpu_c_b44ab17b____RRX|
#line 670
|__asm___12_fsl_sysmpu_c_b44ab17b____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SYSMPU_Deinit [CODE]
        EXPORT SYSMPU_GetDetailErrorAccessInfo [CODE]
        EXPORT SYSMPU_GetHardwareInfo [CODE]
        EXPORT SYSMPU_GetSlavePortErrorStatus [CODE]
        EXPORT SYSMPU_Init [CODE]
        EXPORT SYSMPU_SetRegionAddr [CODE]
        EXPORT SYSMPU_SetRegionConfig [CODE]
        EXPORT SYSMPU_SetRegionRwMasterAccessRights [CODE]
        EXPORT SYSMPU_SetRegionRwxMasterAccessRights [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]

        KEEP SYSMPU_Enable
        KEEP g_sysmpuClock

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
