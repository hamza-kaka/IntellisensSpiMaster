; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_llwu.o --depend=.\objects\fsl_llwu.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_llwu.crf ..\..\devices\MK66F18\drivers\fsl_llwu.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.LLWU_ClearExternalWakeupPinFlag||, CODE, READONLY, ALIGN=1

LLWU_ClearExternalWakeupPinFlag PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        LSRS     r3,r1,#3
        CBZ      r3,|L1.22|
        CMP      r3,#1
        BEQ      |L1.28|
        CMP      r3,#2
        BEQ      |L1.34|
        CMP      r3,#3
        BNE      |L1.46|
        B        |L1.40|
|L1.22|
        ADD      r0,r2,#9
        B        |L1.50|
|L1.28|
        ADD      r0,r2,#0xa
        B        |L1.50|
|L1.34|
        ADD      r0,r2,#0xb
        B        |L1.50|
|L1.40|
        ADD      r0,r2,#0xc
        B        |L1.50|
|L1.46|
        MOVS     r0,#0
        NOP      
|L1.50|
        NOP      
        CBZ      r0,|L1.64|
        AND      r4,r1,#7
        MOVS     r3,#1
        LSLS     r3,r3,r4
        STRB     r3,[r0,#0]
|L1.64|
        POP      {r4,pc}
        ENDP


        AREA ||i.LLWU_ClearPinFilterFlag||, CODE, READONLY, ALIGN=1

LLWU_ClearPinFilterFlag PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        CMP      r1,#1
        BEQ      |L2.22|
        CMP      r1,#2
        BEQ      |L2.28|
        CMP      r1,#3
        BEQ      |L2.34|
        CMP      r1,#4
        BNE      |L2.46|
        B        |L2.40|
|L2.22|
        ADD      r0,r2,#0xe
        B        |L2.50|
|L2.28|
        ADD      r0,r2,#0xf
        B        |L2.50|
|L2.34|
        ADD      r0,r2,#0x10
        B        |L2.50|
|L2.40|
        ADD      r0,r2,#0x11
        B        |L2.50|
|L2.46|
        MOVS     r0,#0
        NOP      
|L2.50|
        NOP      
        CBZ      r0,|L2.62|
        LDRB     r3,[r0,#0]
        ORR      r3,r3,#0x80
        STRB     r3,[r0,#0]
|L2.62|
        POP      {r4,pc}
        ENDP


        AREA ||i.LLWU_GetExternalWakeupPinFlag||, CODE, READONLY, ALIGN=1

LLWU_GetExternalWakeupPinFlag PROC
        PUSH     {r4,r5,lr}
        MOV      r2,r0
        MOV      r3,r1
        LSRS     r0,r3,#3
        CBZ      r0,|L3.24|
        CMP      r0,#1
        BEQ      |L3.30|
        CMP      r0,#2
        BEQ      |L3.36|
        CMP      r0,#3
        BNE      |L3.48|
        B        |L3.42|
|L3.24|
        ADD      r1,r2,#9
        B        |L3.52|
|L3.30|
        ADD      r1,r2,#0xa
        B        |L3.52|
|L3.36|
        ADD      r1,r2,#0xb
        B        |L3.52|
|L3.42|
        ADD      r1,r2,#0xc
        B        |L3.52|
|L3.48|
        MOVS     r1,#0
        NOP      
|L3.52|
        NOP      
        CBZ      r1,|L3.78|
        LDRB     r0,[r1,#0]
        AND      r5,r3,#7
        MOVS     r4,#1
        LSLS     r4,r4,r5
        ANDS     r0,r0,r4
        CBZ      r0,|L3.74|
        MOVS     r0,#1
|L3.72|
        POP      {r4,r5,pc}
|L3.74|
        MOVS     r0,#0
        B        |L3.72|
|L3.78|
        MOVS     r0,#0
        B        |L3.72|
        ENDP


        AREA ||i.LLWU_GetPinFilterFlag||, CODE, READONLY, ALIGN=1

LLWU_GetPinFilterFlag PROC
        MOV      r2,r0
        MOVS     r0,#0
        CMP      r1,#1
        BEQ      |L4.22|
        CMP      r1,#2
        BEQ      |L4.28|
        CMP      r1,#3
        BEQ      |L4.34|
        CMP      r1,#4
        BNE      |L4.46|
        B        |L4.40|
|L4.22|
        LDRB     r3,[r2,#0xe]
        LSRS     r0,r3,#7
        B        |L4.48|
|L4.28|
        LDRB     r3,[r2,#0xf]
        LSRS     r0,r3,#7
        B        |L4.48|
|L4.34|
        LDRB     r3,[r2,#0x10]
        LSRS     r0,r3,#7
        B        |L4.48|
|L4.40|
        LDRB     r3,[r2,#0x11]
        LSRS     r0,r3,#7
        B        |L4.48|
|L4.46|
        NOP      
|L4.48|
        NOP      
        BX       lr
        ENDP


        AREA ||i.LLWU_SetExternalWakeupPinMode||, CODE, READONLY, ALIGN=1

LLWU_SetExternalWakeupPinMode PROC
        PUSH     {r4-r7,lr}
        MOV      r3,r0
        MOV      r5,r2
        LSRS     r6,r1,#2
        CMP      r6,#8
        BCS      |L5.56|
        TBB      [pc,r6]
        DCB      0x04,0x06,0x08,0x0a
        DCB      0x0c,0x0e,0x10,0x12
        MOV      r0,r3
        B        |L5.60|
        ADDS     r0,r3,#1
        B        |L5.60|
        ADDS     r0,r3,#2
        B        |L5.60|
        ADDS     r0,r3,#3
        B        |L5.60|
        ADDS     r0,r3,#4
        B        |L5.60|
        ADDS     r0,r3,#5
        B        |L5.60|
        ADDS     r0,r3,#6
        B        |L5.60|
        ADDS     r0,r3,#7
        B        |L5.60|
|L5.56|
        MOVS     r0,#0
        NOP      
|L5.60|
        NOP      
        CBZ      r0,|L5.86|
        LDRB     r2,[r0,#0]
        LSLS     r6,r1,#30
        LSRS     r4,r6,#29
        MOVS     r6,#3
        LSLS     r6,r6,r4
        BICS     r2,r2,r6
        LSL      r6,r5,r4
        UXTB     r6,r6
        ORRS     r2,r2,r6
        STRB     r2,[r0,#0]
|L5.86|
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.LLWU_SetPinFilterMode||, CODE, READONLY, ALIGN=1

LLWU_SetPinFilterMode PROC
        PUSH     {r0-r5,lr}
        MOV      r4,r0
        CMP      r1,#1
        BEQ      |L6.22|
        CMP      r1,#2
        BEQ      |L6.28|
        CMP      r1,#3
        BEQ      |L6.34|
        CMP      r1,#4
        BNE      |L6.46|
        B        |L6.40|
|L6.22|
        ADD      r0,r4,#0xe
        B        |L6.50|
|L6.28|
        ADD      r0,r4,#0xf
        B        |L6.50|
|L6.34|
        ADD      r0,r4,#0x10
        B        |L6.50|
|L6.40|
        ADD      r0,r4,#0x11
        B        |L6.50|
|L6.46|
        MOVS     r0,#0
        NOP      
|L6.50|
        NOP      
        CBZ      r0,|L6.86|
        LDRB     r2,[r0,#0]
        BIC      r2,r2,#0x7f
        LDR      r3,[sp,#8]
        AND      r3,r3,#0x1f
        ORRS     r2,r2,r3
        LDRB     r3,[sp,#0xc]
        MOVS     r5,#0x60
        AND      r3,r5,r3,LSL #5
        ORRS     r2,r2,r3
        ORR      r2,r2,#0x80
        STRB     r2,[r0,#0]
|L6.86|
        POP      {r0-r5,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_llwu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_llwu_c_a037f22e____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_fsl_llwu_c_a037f22e____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_llwu_c_a037f22e____REVSH|
#line 483
|__asm___10_fsl_llwu_c_a037f22e____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_fsl_llwu_c_a037f22e____RRX|
#line 670
|__asm___10_fsl_llwu_c_a037f22e____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT LLWU_ClearExternalWakeupPinFlag [CODE]
        EXPORT LLWU_ClearPinFilterFlag [CODE]
        EXPORT LLWU_GetExternalWakeupPinFlag [CODE]
        EXPORT LLWU_GetPinFilterFlag [CODE]
        EXPORT LLWU_SetExternalWakeupPinMode [CODE]
        EXPORT LLWU_SetPinFilterMode [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
