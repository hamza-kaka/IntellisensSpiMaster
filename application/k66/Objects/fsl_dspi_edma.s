; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --gnu -o.\objects\fsl_dspi_edma.o --depend=.\objects\fsl_dspi_edma.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\board -I..\..\CMSIS\Include -I..\..\devices\MK66F18 -I..\..\devices\MK66F18\drivers -I..\..\devices\MK66F18\arm -I..\..\devices\MK66F18\utilities -I..\..\devices\MK66F18\utilities\str -I..\..\devices\MK66F18\utilities\debug_console -I..\..\TestingFiles -I..\..\SpiCommunication -I..\..\I2Commands -I..\..\HelpingModules -I..\k66 -I..\..\components\serial_manager -I..\..\spiApp -I..\..\application -I.\RTE\_Target_1 -I"C:\Users\Taraz Tech1\AppData\Local\Arm\Packs\Keil\Kinetis_K60_DFP\1.5.0\Device\Include" -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=528 -DMK66FN2M0xxx18 -DCPU_MK66FN2M0VLQ18 --omf_browse=.\objects\fsl_dspi_edma.crf ..\..\devices\MK66F18\drivers\fsl_dspi_edma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DSPI_ClearStatusFlags||, CODE, READONLY, ALIGN=1

DSPI_ClearStatusFlags PROC
        STR      r1,[r0,#0x2c]
        BX       lr
        ENDP


        AREA ||i.DSPI_DisableDMA||, CODE, READONLY, ALIGN=1

DSPI_DisableDMA PROC
        LDR      r2,[r0,#0x30]
        BICS     r2,r2,r1
        STR      r2,[r0,#0x30]
        BX       lr
        ENDP


        AREA ||i.DSPI_EnableDMA||, CODE, READONLY, ALIGN=1

DSPI_EnableDMA PROC
        LDR      r2,[r0,#0x30]
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x30]
        BX       lr
        ENDP


        AREA ||i.DSPI_FlushFifo||, CODE, READONLY, ALIGN=1

DSPI_FlushFifo PROC
        PUSH     {r4,r5,lr}
        LDR      r3,[r0,#0]
        BIC      r3,r3,#0xc00
        MOV      r5,#0x800
        AND      r4,r5,r1,LSL #11
        ORRS     r3,r3,r4
        ASRS     r5,r5,#1
        AND      r4,r5,r2,LSL #10
        ORRS     r3,r3,r4
        STR      r3,[r0,#0]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.DSPI_MasterGetFormattedCommand||, CODE, READONLY, ALIGN=1

DSPI_MasterGetFormattedCommand PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0]
        MOV      r2,#0x80000000
        AND      r0,r2,r0,LSL #31
        LDRB     r2,[r1,#1]
        MOV      r3,#0x70000000
        AND      r2,r3,r2,LSL #28
        ORRS     r0,r0,r2
        LDRB     r2,[r1,#2]
        MOV      r3,#0x3f0000
        AND      r2,r3,r2,LSL #16
        ORRS     r0,r0,r2
        LDRB     r2,[r1,#3]
        MOV      r3,#0x8000000
        AND      r2,r3,r2,LSL #27
        ORRS     r0,r0,r2
        LDRB     r2,[r1,#4]
        ASRS     r3,r3,#1
        AND      r2,r3,r2,LSL #26
        ORRS     r0,r0,r2
        BX       lr
        ENDP


        AREA ||i.DSPI_MasterHalfDuplexTransferEDMA||, CODE, READONLY, ALIGN=2

DSPI_MasterHalfDuplexTransferEDMA PROC
        PUSH     {r0-r8,lr}
        MOV      r7,r0
        MOV      r6,r1
        MOV      r4,r2
        CBZ      r4,|L6.14|
        B        |L6.26|
|L6.14|
        MOV      r2,#0x3c5
        ADR      r1,|L6.180|
        ADR      r0,|L6.228|
        BL       __aeabi_assert
|L6.26|
        CBZ      r6,|L6.30|
        B        |L6.42|
|L6.30|
        MOV      r2,#0x3c6
        ADR      r1,|L6.180|
        ADR      r0,|L6.244|
        BL       __aeabi_assert
|L6.42|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        STR      r0,[sp,#8]
        STR      r0,[sp,#0xc]
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L6.72|
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#8]
        B        |L6.84|
|L6.72|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#8]
|L6.84|
        LDRB     r0,[r4,#0x14]
        CMP      r0,#1
        BNE      |L6.100|
        LDR      r0,[r4,#0x10]
        ORR      r0,r0,#0x200000
        STR      r0,[sp,#0xc]
        B        |L6.108|
|L6.100|
        LDR      r0,[r4,#0x10]
        BIC      r0,r0,#0x200000
        STR      r0,[sp,#0xc]
|L6.108|
        MOV      r1,sp
        MOV      r0,r7
        BL       DSPI_MasterTransferBlocking
        MOV      r5,r0
        CBZ      r5,|L6.128|
        MOV      r0,r5
|L6.122|
        ADD      sp,sp,#0x10
        POP      {r4-r8,pc}
|L6.128|
        LDRB     r0,[r4,#0x15]
        CMP      r0,#1
        BNE      |L6.148|
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,[r4,#4]
        STR      r0,[sp,#4]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#8]
        B        |L6.160|
|L6.148|
        LDR      r0,[r4,#0]
        STR      r0,[sp,#0]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#8]
|L6.160|
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0xc]
        MOV      r2,sp
        MOV      r1,r6
        MOV      r0,r7
        BL       DSPI_MasterTransferEDMA
        MOV      r5,r0
        MOV      r0,r5
        B        |L6.122|
        ENDP

|L6.180|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L6.228|
        DCB      "NULL != xfer",0
        DCB      0
        DCB      0
        DCB      0
|L6.244|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_MasterTransferAbortEDMA||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferAbortEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L7.10|
        B        |L7.22|
|L7.10|
        MOV      r2,#0x419
        ADR      r1,|L7.60|
        ADR      r0,|L7.108|
        BL       __aeabi_assert
|L7.22|
        MOV      r0,r5
        BL       DSPI_StopTransfer
        LDR      r1,|L7.124|
        MOV      r0,r5
        BL       DSPI_DisableDMA
        LDR      r0,[r4,#0x34]
        BL       EDMA_AbortTransfer
        LDR      r0,[r4,#0x38]
        BL       EDMA_AbortTransfer
        LDR      r0,[r4,#0x3c]
        BL       EDMA_AbortTransfer
        MOVS     r0,#0
        STRB     r0,[r4,#0xf]
        POP      {r4-r6,pc}
        ENDP

|L7.60|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L7.108|
        DCB      "NULL != handle",0
        DCB      0
|L7.124|
        DCD      0x03030000

        AREA ||i.DSPI_MasterTransferCreateHandleEDMA||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferCreateHandleEDMA PROC
        PUSH     {r4-r12,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r7,r2
        MOV      r8,r3
        LDRD     r10,r11,[sp,#0x2c]
        LDR      r9,[sp,#0x28]
        CBZ      r4,|L8.24|
        B        |L8.34|
|L8.24|
        MOVS     r2,#0x63
        ADR      r1,|L8.140|
        ADR      r0,|L8.188|
        BL       __aeabi_assert
|L8.34|
        CMP      r9,#0
        BEQ      |L8.42|
        B        |L8.52|
|L8.42|
        MOVS     r2,#0x64
        ADR      r1,|L8.140|
        ADR      r0,|L8.204|
        BL       __aeabi_assert
|L8.52|
        CMP      r10,#0
        BEQ      |L8.60|
        B        |L8.70|
|L8.60|
        MOVS     r2,#0x66
        ADR      r1,|L8.140|
        ADR      r0,|L8.236|
        BL       __aeabi_assert
|L8.70|
        CMP      r11,#0
        BEQ      |L8.78|
        B        |L8.88|
|L8.78|
        MOVS     r2,#0x68
        ADR      r1,|L8.140|
        ADR      r0,|L8.276|
        BL       __aeabi_assert
|L8.88|
        MOVS     r1,#0x80
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOV      r0,r6
        BL       DSPI_GetInstance
        MOV      r5,r0
        LDR      r0,|L8.316|
        STR      r6,[r0,r5,LSL #3]
        ADD      r0,r0,r5,LSL #3
        STR      r4,[r0,#4]
        STR      r7,[r4,#0x2c]
        STR      r8,[r4,#0x30]
        STR      r9,[r4,#0x34]
        STR      r10,[r4,#0x38]
        STR      r11,[r4,#0x3c]
        POP      {r4-r12,pc}
        ENDP

        DCW      0x0000
|L8.140|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L8.188|
        DCB      "NULL != handle",0
        DCB      0
|L8.204|
        DCB      "NULL != edmaRxRegToRxDataHandle",0
|L8.236|
        DCB      "NULL != edmaTxDataToIntermediaryHandle",0
        DCB      0
|L8.276|
        DCB      "NULL != edmaIntermediaryToTxRegHandle",0
        DCB      0
        DCB      0
|L8.316|
        DCD      s_dspiMasterEdmaPrivateHandle

        AREA ||i.DSPI_MasterTransferEDMA||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferEDMA PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x7c
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L9.16|
        B        |L9.26|
|L9.16|
        MOVS     r2,#0x87
        ADR      r1,|L9.976|
        ADR      r0,|L9.1024|
        BL       __aeabi_assert
|L9.26|
        CBZ      r5,|L9.30|
        B        |L9.40|
|L9.30|
        MOVS     r2,#0x88
        ADR      r1,|L9.976|
        ADR      r0,|L9.1040|
        BL       __aeabi_assert
|L9.40|
        LDR      r0,[r5,#8]
        CBNZ     r0,|L9.52|
        MOVS     r0,#4
|L9.46|
        ADD      sp,sp,#0x7c
        POP      {r4-r11,pc}
|L9.52|
        LDR      r0,[r5,#0]
        CBNZ     r0,|L9.64|
        LDR      r0,[r5,#4]
        CBNZ     r0,|L9.64|
        MOVS     r0,#4
        B        |L9.46|
|L9.64|
        LDRB     r0,[r4,#0xf]
        CMP      r0,#1
        BNE      |L9.76|
        MOV      r0,#0x258
        B        |L9.46|
|L9.76|
        MOVS     r0,#1
        STRB     r0,[r4,#0xf]
        MOV      r0,r6
        BL       DSPI_GetInstance
        STR      r0,[sp,#0x78]
        MOVS     r7,#0
        MOV      r0,r6
        BL       DSPI_GetDummyDataInstance
        MOV      r9,r0
        MOVS     r0,#0
        STR      r0,[sp,#0x74]
        MOVS     r0,#2
        STR      r0,[sp,#0x70]
        MOVS     r0,#0
        STR      r0,[sp,#0x6c]
        MOV      r8,r0
        NOP      
        ADD      r0,r6,#0x38
        STR      r0,[sp,#0x68]
        NOP      
        SUBS     r0,r0,#4
        STR      r0,[sp,#0x64]
        ADD      r0,r4,#0x60
        BIC      r0,r0,#0x1f
        STR      r0,[sp,#0x60]
        ORR      r0,r9,r9,LSL #8
        STR      r0,[r4,#0x28]
        MOV      r0,r6
        BL       DSPI_StopTransfer
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       DSPI_FlushFifo
        LDR      r1,|L9.1060|
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDRB     r0,[r5,#0xc]
        UBFX     r1,r0,#4,#4
        MOVS     r0,#1
        LSLS     r0,r0,r1
        UXTB     r0,r0
        STRB     r0,[sp,#0x2a]
        MOVS     r0,#0
        STRB     r0,[sp,#0x2b]
        STRB     r0,[sp,#0x2c]
        LDRB     r0,[r5,#0xc]
        AND      r0,r0,#0xf
        STRB     r0,[sp,#0x29]
        LDR      r0,[r5,#0xc]
        AND      r0,r0,#0x100000
        CBZ      r0,|L9.214|
        MOVS     r0,#1
        B        |L9.216|
|L9.214|
        MOVS     r0,#0
|L9.216|
        STRB     r0,[sp,#0x28]
        ADD      r0,sp,#0x28
        BL       DSPI_MasterGetFormattedCommand
        STR      r0,[r4,#4]
        MOVS     r0,#1
        STRB     r0,[sp,#0x2b]
        LDR      r0,[r5,#0xc]
        AND      r0,r0,#0x200000
        CBZ      r0,|L9.246|
        MOVS     r0,#1
        B        |L9.248|
|L9.246|
        MOVS     r0,#0
|L9.248|
        STRB     r0,[sp,#0x28]
        ADD      r0,sp,#0x28
        BL       DSPI_MasterGetFormattedCommand
        STR      r0,[r4,#8]
        LDRB     r1,[sp,#0x29]
        ADD      r0,r6,#0xc
        LDR      r0,[r0,r1,LSL #2]
        UBFX     r0,r0,#27,#4
        ADDS     r0,r0,#1
        STR      r0,[r4,#0]
        LDR      r0,[r6,#0]
        STR      r0,[sp,#0x6c]
        LDR      r0,[sp,#0x6c]
        AND      r0,r0,#0x1000
        CBNZ     r0,|L9.300|
        LDR      r0,[sp,#0x6c]
        AND      r0,r0,#0x2000
        CBZ      r0,|L9.306|
|L9.300|
        MOVS     r0,#1
        STRB     r0,[r4,#0xc]
        B        |L9.342|
|L9.306|
        LDR      r0,|L9.1064|
        CMP      r6,r0
        BNE      |L9.316|
        MOVS     r0,#4
        B        |L9.340|
|L9.316|
        LDR      r0,|L9.1068|
        CMP      r6,r0
        BNE      |L9.326|
        MOVS     r0,#1
        B        |L9.340|
|L9.326|
        LDR      r0,|L9.1072|
        CMP      r6,r0
        BNE      |L9.336|
        MOVS     r0,#1
        B        |L9.340|
|L9.336|
        MOV      r0,#0xffffffff
|L9.340|
        STRB     r0,[r4,#0xc]
|L9.342|
        LDR      r0,[r5,#0]
        STR      r0,[r4,#0x10]
        LDR      r0,[r5,#4]
        STR      r0,[r4,#0x14]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x18]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x1c]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x20]
        MOVS     r0,#0
        STR      r0,[sp,#0x24]
        MOV      r0,#0x7fff
        STR      r0,[sp,#0x24]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.398|
        LDR      r1,[r5,#8]
        LDR      r0,[sp,#0x24]
        CMP      r1,r0,LSL #1
        BLS      |L9.416|
        MOVS     r0,#0
        STRB     r0,[r4,#0xf]
        MOV      r0,#0x25b
        B        |L9.46|
|L9.398|
        LDR      r1,[r5,#8]
        LDR      r0,[sp,#0x24]
        CMP      r1,r0
        BLS      |L9.416|
        MOVS     r0,#0
        STRB     r0,[r4,#0xf]
        MOV      r0,#0x25b
        B        |L9.46|
|L9.416|
        LDR      r0,[r5,#8]
        AND      r0,r0,#1
        CBZ      r0,|L9.438|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.438|
        MOVS     r0,#0
        STRB     r0,[r4,#0xf]
        MOVS     r0,#4
        B        |L9.46|
|L9.438|
        LDR      r1,|L9.1076|
        MOV      r0,r6
        BL       DSPI_DisableDMA
        LDR      r3,|L9.1080|
        LDR      r1,[sp,#0x78]
        ADD      r2,r3,r1,LSL #3
        LDR      r1,|L9.1084|
        LDR      r0,[r4,#0x34]
        BL       EDMA_SetCallback
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.564|
        LDR      r0,[r4,#0x18]
        CMP      r0,#2
        BHI      |L9.518|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L9.498|
        LDR      r0,[r4,#0x10]
        LDRB     r7,[r0,#0]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0x10]
        LDRB     r0,[r0,#0]
        ORR      r7,r7,r0,LSL #8
        B        |L9.502|
|L9.498|
        ORR      r7,r9,r9,LSL #8
|L9.502|
        LDR      r0,[r4,#8]
        BFC      r0,#0,#16
        ORRS     r0,r0,r7
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        STR      r0,[r4,#4]
        B        |L9.614|
|L9.518|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L9.548|
        LDR      r0,[r4,#0x10]
        LDRB     r7,[r0,#0]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        LDR      r0,[r4,#0x10]
        LDRB     r0,[r0,#0]
        ORR      r7,r7,r0,LSL #8
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L9.552|
|L9.548|
        ORR      r7,r9,r9,LSL #8
|L9.552|
        LDR      r0,[r4,#4]
        BFC      r0,#0,#16
        ORRS     r0,r0,r7
        STR      r0,[r4,#4]
        B        |L9.614|
|L9.564|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L9.580|
        LDR      r0,[r4,#0x10]
        LDRB     r7,[r0,#0]
        LDR      r0,[r4,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x10]
        B        |L9.582|
|L9.580|
        MOV      r7,r9
|L9.582|
        LDR      r0,[r4,#0x18]
        CMP      r0,#1
        BNE      |L9.604|
        LDR      r0,[r4,#8]
        BFC      r0,#0,#16
        ORRS     r0,r0,r7
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        STR      r0,[r4,#4]
        B        |L9.614|
|L9.604|
        LDR      r0,[r4,#4]
        BFC      r0,#0,#16
        ORRS     r0,r0,r7
        STR      r0,[r4,#4]
|L9.614|
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_ResetChannel
        LDR      r0,[sp,#0x68]
        STR      r0,[sp,#0x48]
        MOVS     r0,#0
        STRH     r0,[sp,#0x52]
        LDR      r0,[r4,#0x14]
        CBZ      r0,|L9.650|
        LDR      r0,[r4,#0x14]
        STR      r0,[sp,#0x4c]
        MOVS     r0,#1
        STRH     r0,[sp,#0x54]
        B        |L9.662|
|L9.650|
        ADD      r0,r4,#0x24
        STR      r0,[sp,#0x4c]
        MOVS     r0,#0
        STRH     r0,[sp,#0x54]
|L9.662|
        MOVS     r0,#0
        STRB     r0,[sp,#0x51]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L9.690|
        MOVS     r0,#0
        STRB     r0,[sp,#0x50]
        MOVS     r0,#1
        STR      r0,[sp,#0x58]
        LDR      r0,[r4,#0x1c]
        STR      r0,[sp,#0x5c]
        B        |L9.706|
|L9.690|
        MOVS     r0,#1
        STRB     r0,[sp,#0x50]
        MOVS     r0,#2
        STR      r0,[sp,#0x58]
        LDR      r0,[r4,#0x1c]
        LSRS     r0,r0,#1
        STR      r0,[sp,#0x5c]
|L9.706|
        LDR      r0,[sp,#0x58]
        STRB     r0,[r4,#0xe]
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        MOVS     r3,#0
        LDR      r0,[r2,#8]
        ADD      r2,sp,#0x48
        BL       EDMA_SetTransferConfig
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOVS     r2,#2
        BL       EDMA_EnableChannelInterrupts
        LDR      r8,[r4,#0x18]
        CMP      r8,#0
        BEQ      |L9.748|
        NOP      
|L9.748|
        CMP      r8,#1
        BLS      |L9.760|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.772|
|L9.760|
        CMP      r8,#2
        BLS      |L9.880|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.880|
|L9.772|
        NOP      
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L9.856|
        MOVS     r2,#0
        LDR      r3,[r4,#0]
        CMP      r3,#8
        BHI      |L9.792|
        LDR      r3,[r4,#0x18]
        SUBS     r2,r3,#1
        B        |L9.796|
|L9.792|
        LDR      r3,[r4,#0x18]
        SUBS     r2,r3,#2
|L9.796|
        LDR      r0,[r4,#8]
        LDR      r1,[r4,#0x10]
        LDR      r3,[r4,#0]
        CMP      r3,#8
        BHI      |L9.824|
        LSRS     r3,r0,#16
        LSLS     r3,r3,#16
        SUB      r12,r2,#1
        LDRB     r12,[r1,r12]
        ORR      r0,r3,r12
        B        |L9.852|
|L9.824|
        LSR      r12,r0,#16
        LSL      r12,r12,#16
        SUBS     r3,r2,#1
        LDRB     r3,[r1,r3]
        ORR      r3,r12,r3,LSL #8
        SUB      r12,r2,#2
        LDRB     r12,[r1,r12]
        ORR      r0,r3,r12
|L9.852|
        STR      r0,[r4,#8]
        B        |L9.880|
|L9.856|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L9.866|
        MOV      r7,r9
        B        |L9.870|
|L9.866|
        ORR      r7,r9,r9,LSL #8
|L9.870|
        LDR      r0,[r4,#8]
        BFC      r0,#0,#16
        ORRS     r0,r0,r7
        STR      r0,[r4,#8]
|L9.880|
        LDR      r2,[r4,#0x38]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_ResetChannel
        ADD      r0,r4,#8
        STR      r0,[sp,#0x30]
        ADDS     r0,r4,#4
        STR      r0,[sp,#0x34]
        MOVS     r0,#2
        STRB     r0,[sp,#0x38]
        STRB     r0,[sp,#0x39]
        MOVS     r0,#0
        STRH     r0,[sp,#0x3a]
        STRH     r0,[sp,#0x3c]
        MOVS     r0,#4
        STR      r0,[sp,#0x40]
        MOVS     r0,#1
        STR      r0,[sp,#0x44]
        LDR      r0,[sp,#0x60]
        BL       EDMA_TcdReset
        MOVS     r2,#0
        ADD      r1,sp,#0x30
        LDR      r0,[sp,#0x60]
        BL       EDMA_TcdSetTransferConfig
        LDR      r8,[r4,#0x18]
        CMP      r8,#2
        BLS      |L9.960|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.972|
|L9.960|
        CMP      r8,#4
        BLS      |L9.1088|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.1088|
|L9.972|
        B        |L9.1090|
        DCW      0x0000
|L9.976|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L9.1024|
        DCB      "NULL != handle",0
        DCB      0
|L9.1040|
        DCB      "NULL != transfer",0
        DCB      0
        DCB      0
        DCB      0
|L9.1060|
        DCD      0xda0a0000
|L9.1064|
        DCD      0x4002c000
|L9.1068|
        DCD      0x4002d000
|L9.1072|
        DCD      0x400ac000
|L9.1076|
        DCD      0x03030000
|L9.1080|
        DCD      s_dspiMasterEdmaPrivateHandle
|L9.1084|
        DCD      EDMA_DspiMasterCallback
|L9.1088|
        B        |L9.1204|
|L9.1090|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L9.1106|
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0x30]
        MOVS     r0,#1
        STRH     r0,[sp,#0x3a]
        B        |L9.1118|
|L9.1106|
        ADD      r0,r4,#0x28
        STR      r0,[sp,#0x30]
        MOVS     r0,#0
        STRH     r0,[sp,#0x3a]
|L9.1118|
        ADDS     r0,r4,#4
        STR      r0,[sp,#0x34]
        MOVS     r0,#0
        STRH     r0,[sp,#0x3c]
        STRB     r0,[sp,#0x38]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L9.1156|
        MOVS     r0,#0
        STRB     r0,[sp,#0x39]
        MOVS     r0,#1
        STR      r0,[sp,#0x40]
        LDR      r0,[r4,#0x18]
        SUBS     r0,r0,#2
        STR      r0,[sp,#0x44]
        B        |L9.1176|
|L9.1156|
        MOVS     r0,#1
        STRB     r0,[sp,#0x39]
        MOVS     r0,#2
        STR      r0,[sp,#0x40]
        LDR      r0,[r4,#0x18]
        MOVS     r1,#2
        RSB      r0,r1,r0,LSR #1
        STR      r0,[sp,#0x44]
|L9.1176|
        LDR      r2,[r4,#0x38]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        ADD      r2,sp,#0x30
        LDR      r3,[sp,#0x60]
        BL       EDMA_SetTransferConfig
        LDR      r2,[r4,#0x3c]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOVS     r2,#0
        BL       EDMA_EnableAutoStopRequest
        B        |L9.1218|
|L9.1204|
        LDR      r2,[r4,#0x38]
        LDRB     r1,[r2,#0x10]
        MOVS     r3,#0
        LDR      r0,[r2,#8]
        ADD      r2,sp,#0x30
        BL       EDMA_SetTransferConfig
|L9.1218|
        LDR      r2,[r4,#0x3c]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_ResetChannel
        LDR      r8,[r4,#0x18]
        NOP      
        LDR      r8,[r4,#0x18]
        CMP      r8,#1
        BLS      |L9.1250|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L9.1264|
|L9.1250|
        CMP      r8,#2
        BLS      |L9.1262|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L9.1264|
|L9.1262|
        NOP      
|L9.1264|
        ADDS     r0,r4,#4
        STR      r0,[sp,#0xc]
        LDR      r0,[sp,#0x64]
        STR      r0,[sp,#0x10]
        MOVS     r0,#2
        STRB     r0,[sp,#0x14]
        STRB     r0,[sp,#0x15]
        MOVS     r0,#0
        STRH     r0,[sp,#0x16]
        STRH     r0,[sp,#0x18]
        MOVS     r0,#4
        STR      r0,[sp,#0x1c]
        MOVS     r0,#1
        STR      r0,[sp,#0x20]
        LDR      r2,[r4,#0x3c]
        LDRB     r1,[r2,#0x10]
        MOVS     r3,#0
        LDR      r0,[r2,#8]
        ADD      r2,sp,#0xc
        BL       EDMA_SetTransferConfig
        LDR      r2,[r4,#0x3c]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOVS     r2,#0
        BL       EDMA_EnableAutoStopRequest
        LDR      r0,[r4,#0x34]
        BL       EDMA_StartTransfer
        LDR      r0,[r4,#0x38]
        BL       EDMA_StartTransfer
        LDR      r0,[r4,#0x3c]
        BL       EDMA_StartTransfer
        LDR      r0,[r4,#0x34]
        LDRB     r10,[r0,#0x10]
        LDR      r0,[r4,#0x38]
        LDRB     r11,[r0,#0x10]
        LDR      r0,[r4,#0x3c]
        LDRB     r0,[r0,#0x10]
        STR      r0,[sp,#8]
        MOVS     r0,#0
        STR      r0,[sp,#4]
        CMP      r10,r11
        BLE      |L9.1380|
        STR      r10,[sp,#4]
        MOV      r10,r11
        LDR      r11,[sp,#4]
|L9.1380|
        LDR      r0,[sp,#8]
        CMP      r10,r0
        BLE      |L9.1398|
        STR      r10,[sp,#4]
        LDR      r10,[sp,#8]
        LDR      r0,[sp,#4]
        STR      r0,[sp,#8]
|L9.1398|
        LDR      r0,[sp,#8]
        CMP      r11,r0
        BLE      |L9.1416|
        STR      r11,[sp,#4]
        LDR      r11,[sp,#8]
        LDR      r0,[sp,#4]
        STR      r0,[sp,#8]
|L9.1416|
        MOVS     r0,#1
        STRB     r0,[sp,#0]
        STRB     r0,[sp,#1]
        STRB     r10,[sp,#2]
        LDR      r2,[r4,#0x3c]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOV      r2,sp
        BL       EDMA_SetChannelPreemptionConfig
        STRB     r11,[sp,#2]
        LDR      r2,[r4,#0x38]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOV      r2,sp
        BL       EDMA_SetChannelPreemptionConfig
        LDR      r0,[sp,#8]
        STRB     r0,[sp,#2]
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOV      r2,sp
        BL       EDMA_SetChannelPreemptionConfig
        LDR      r0,[r4,#0x18]
        CMP      r0,#1
        BLS      |L9.1498|
        LDR      r2,[r4,#0x38]
        LDRB     r3,[r2,#0x10]
        LDR      r2,[r4,#0x3c]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOVS     r2,#2
        BL       EDMA_SetChannelLink
|L9.1498|
        LDR      r1,|L9.1516|
        MOV      r0,r6
        BL       DSPI_EnableDMA
        MOV      r0,r6
        BL       DSPI_StartTransfer
        MOVS     r0,#0
        B        |L9.46|
        ENDP

|L9.1516|
        DCD      0x03030000

        AREA ||i.DSPI_MasterTransferGetCountEDMA||, CODE, READONLY, ALIGN=2

DSPI_MasterTransferGetCountEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L10.14|
        B        |L10.26|
|L10.14|
        MOV      r2,#0x432
        ADR      r1,|L10.76|
        ADR      r0,|L10.124|
        BL       __aeabi_assert
|L10.26|
        CBNZ     r5,|L10.34|
        MOVS     r0,#4
|L10.30|
        POP      {r4-r8,pc}
|L10.34|
        LDRB     r0,[r4,#0xf]
        CMP      r0,#1
        BEQ      |L10.48|
        MOVS     r0,#0
        STR      r0,[r5,#0]
        MOVS     r0,#6
        B        |L10.30|
|L10.48|
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_GetRemainingMajorLoopCount
        LDRB     r1,[r4,#0xe]
        MUL      r6,r0,r1
        LDR      r0,[r4,#0x20]
        SUBS     r0,r0,r6
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L10.30|
        ENDP

        DCW      0x0000
|L10.76|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L10.124|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_SlaveTransferAbortEDMA||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferAbortEDMA PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L11.10|
        B        |L11.22|
|L11.10|
        MOV      r2,#0x5e7
        ADR      r1,|L11.56|
        ADR      r0,|L11.104|
        BL       __aeabi_assert
|L11.22|
        MOV      r0,r5
        BL       DSPI_StopTransfer
        LDR      r1,|L11.120|
        MOV      r0,r5
        BL       DSPI_DisableDMA
        LDR      r0,[r4,#0x30]
        BL       EDMA_AbortTransfer
        LDR      r0,[r4,#0x34]
        BL       EDMA_AbortTransfer
        MOVS     r0,#0
        STRB     r0,[r4,#0x25]
        POP      {r4-r6,pc}
        ENDP

|L11.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L11.104|
        DCB      "NULL != handle",0
        DCB      0
|L11.120|
        DCD      0x03030000

        AREA ||i.DSPI_SlaveTransferCreateHandleEDMA||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferCreateHandleEDMA PROC
        PUSH     {r4-r10,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r7,r2
        MOV      r8,r3
        LDRD     r9,r10,[sp,#0x20]
        CBZ      r4,|L12.20|
        B        |L12.32|
|L12.20|
        MOV      r2,#0x464
        ADR      r1,|L12.120|
        ADR      r0,|L12.168|
        BL       __aeabi_assert
|L12.32|
        CMP      r9,#0
        BEQ      |L12.40|
        B        |L12.52|
|L12.40|
        MOV      r2,#0x465
        ADR      r1,|L12.120|
        ADR      r0,|L12.184|
        BL       __aeabi_assert
|L12.52|
        CMP      r10,#0
        BEQ      |L12.60|
        B        |L12.72|
|L12.60|
        MOV      r2,#0x466
        ADR      r1,|L12.120|
        ADR      r0,|L12.216|
        BL       __aeabi_assert
|L12.72|
        MOVS     r1,#0x38
        MOV      r0,r4
        BL       __aeabi_memclr4
        MOV      r0,r6
        BL       DSPI_GetInstance
        MOV      r5,r0
        LDR      r0,|L12.248|
        STR      r6,[r0,r5,LSL #3]
        ADD      r0,r0,r5,LSL #3
        STR      r4,[r0,#4]
        STR      r7,[r4,#0x28]
        STR      r8,[r4,#0x2c]
        STR      r9,[r4,#0x30]
        STR      r10,[r4,#0x34]
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L12.120|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L12.168|
        DCB      "NULL != handle",0
        DCB      0
|L12.184|
        DCB      "NULL != edmaRxRegToRxDataHandle",0
|L12.216|
        DCB      "NULL != edmaTxDataToTxRegHandle",0
|L12.248|
        DCD      s_dspiSlaveEdmaPrivateHandle

        AREA ||i.DSPI_SlaveTransferEDMA||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferEDMA PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x54
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L13.16|
        B        |L13.28|
|L13.16|
        MOV      r2,#0x486
        ADR      r1,|L13.660|
        ADR      r0,|L13.708|
        BL       __aeabi_assert
|L13.28|
        CBZ      r5,|L13.32|
        B        |L13.44|
|L13.32|
        MOV      r2,#0x487
        ADR      r1,|L13.660|
        ADR      r0,|L13.724|
        BL       __aeabi_assert
|L13.44|
        LDR      r0,[r5,#8]
        CBNZ     r0,|L13.56|
        MOVS     r0,#4
|L13.50|
        ADD      sp,sp,#0x54
        POP      {r4-r11,pc}
|L13.56|
        LDR      r0,[r5,#0]
        CBNZ     r0,|L13.68|
        LDR      r0,[r5,#4]
        CBNZ     r0,|L13.68|
        MOVS     r0,#4
        B        |L13.50|
|L13.68|
        LDRB     r0,[r4,#0x25]
        CMP      r0,#1
        BNE      |L13.82|
        MOV      r0,#0x258
        B        |L13.50|
|L13.82|
        MOVS     r0,#1
        STRB     r0,[r4,#0x25]
        MOV      r0,r6
        BL       DSPI_GetInstance
        MOV      r9,r0
        LDRB     r0,[r5,#0xc]
        AND      r11,r0,#7
        ADD      r0,r6,#0xc
        LDR      r0,[r0,r11,LSL #2]
        UBFX     r0,r0,#27,#4
        ADDS     r0,r0,#1
        STR      r0,[r4,#0]
        MOVS     r0,#0
        STR      r0,[sp,#0x50]
        MOV      r0,#0x7fff
        STR      r0,[sp,#0x50]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L13.156|
        LDR      r1,[r5,#8]
        LDR      r0,[sp,#0x50]
        CMP      r1,r0,LSL #1
        BLS      |L13.176|
        MOVS     r0,#0
        STRB     r0,[r4,#0x25]
        MOV      r0,#0x25b
        B        |L13.50|
|L13.156|
        LDR      r1,[r5,#8]
        LDR      r0,[sp,#0x50]
        CMP      r1,r0
        BLS      |L13.176|
        MOVS     r0,#0
        STRB     r0,[r4,#0x25]
        MOV      r0,#0x25b
        B        |L13.50|
|L13.176|
        LDR      r0,[r5,#8]
        AND      r0,r0,#1
        CBZ      r0,|L13.200|
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BLS      |L13.200|
        MOVS     r0,#0
        STRB     r0,[r4,#0x25]
        MOVS     r0,#4
        B        |L13.50|
|L13.200|
        LDR      r1,|L13.744|
        ADD      r2,r1,r9,LSL #3
        LDR      r1,|L13.748|
        LDR      r0,[r4,#0x30]
        BL       EDMA_SetCallback
        LDR      r0,[r5,#0]
        STR      r0,[r4,#4]
        LDR      r0,[r5,#4]
        STR      r0,[r4,#8]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0xc]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x10]
        LDR      r0,[r5,#8]
        STR      r0,[r4,#0x14]
        MOVS     r0,#0
        STR      r0,[sp,#0x4c]
        MOV      r0,r6
        BL       DSPI_GetDummyDataInstance
        MOV      r10,r0
        MOVS     r0,#0
        STR      r0,[sp,#0x48]
        MOVS     r0,#2
        STR      r0,[sp,#0x44]
        NOP      
        ADD      r0,r6,#0x38
        STR      r0,[sp,#0x40]
        NOP      
        SUBS     r0,r0,#4
        STR      r0,[sp,#0x3c]
        MOV      r0,r6
        BL       DSPI_StopTransfer
        MOVS     r2,#1
        MOV      r1,r2
        MOV      r0,r6
        BL       DSPI_FlushFifo
        LDR      r1,|L13.752|
        MOV      r0,r6
        BL       DSPI_ClearStatusFlags
        LDR      r1,|L13.756|
        MOV      r0,r6
        BL       DSPI_DisableDMA
        MOV      r0,r6
        BL       DSPI_StartTransfer
        LDR      r0,[r4,#0x10]
        CMP      r0,#0
        BEQ      |L13.436|
        LDR      r2,[r4,#0x30]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_ResetChannel
        LDR      r0,[sp,#0x40]
        STR      r0,[sp,#0x24]
        MOVS     r0,#0
        STRH     r0,[sp,#0x2e]
        LDR      r0,[r4,#8]
        CBZ      r0,|L13.348|
        LDR      r0,[r4,#8]
        STR      r0,[sp,#0x28]
        MOVS     r0,#1
        STRH     r0,[sp,#0x30]
        B        |L13.360|
|L13.348|
        ADD      r0,r4,#0x18
        STR      r0,[sp,#0x28]
        MOVS     r0,#0
        STRH     r0,[sp,#0x30]
|L13.360|
        MOVS     r0,#0
        STRB     r0,[sp,#0x2d]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L13.388|
        MOVS     r0,#0
        STRB     r0,[sp,#0x2c]
        MOVS     r0,#1
        STR      r0,[sp,#0x34]
        LDR      r0,[r4,#0x10]
        STR      r0,[sp,#0x38]
        B        |L13.404|
|L13.388|
        MOVS     r0,#1
        STRB     r0,[sp,#0x2c]
        MOVS     r0,#2
        STR      r0,[sp,#0x34]
        LDR      r0,[r4,#0x10]
        LSRS     r0,r0,#1
        STR      r0,[sp,#0x38]
|L13.404|
        LDR      r0,[sp,#0x34]
        STRB     r0,[r4,#0x24]
        LDR      r2,[r4,#0x30]
        LDRB     r1,[r2,#0x10]
        MOVS     r3,#0
        LDR      r0,[r2,#8]
        ADD      r2,sp,#0x24
        BL       EDMA_SetTransferConfig
        LDR      r2,[r4,#0x30]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        MOVS     r2,#2
        BL       EDMA_EnableChannelInterrupts
|L13.436|
        LDR      r0,[r4,#0xc]
        CBZ      r0,|L13.534|
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_ResetChannel
        LDR      r0,[sp,#0x3c]
        STR      r0,[sp,#0x10]
        MOVS     r0,#0
        STRH     r0,[sp,#0x18]
        LDR      r0,[r4,#4]
        CBZ      r0,|L13.476|
        LDR      r0,[r4,#4]
        STR      r0,[sp,#0xc]
        MOVS     r0,#1
        STRH     r0,[sp,#0x16]
        B        |L13.506|
|L13.476|
        ADD      r0,r4,#0x1c
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STRH     r0,[sp,#0x16]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L13.500|
        STR      r10,[r4,#0x1c]
        B        |L13.506|
|L13.500|
        ORR      r0,r10,r10,LSL #8
        STR      r0,[r4,#0x1c]
|L13.506|
        MOVS     r0,#0
        STRB     r0,[sp,#0x14]
        LDR      r0,[r4,#0]
        CMP      r0,#8
        BHI      |L13.536|
        MOVS     r0,#0
        STRB     r0,[sp,#0x15]
        MOVS     r0,#1
        STR      r0,[sp,#0x1c]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#0x20]
        B        |L13.552|
|L13.534|
        B        |L13.572|
|L13.536|
        MOVS     r0,#1
        STRB     r0,[sp,#0x15]
        MOVS     r0,#2
        STR      r0,[sp,#0x1c]
        LDR      r0,[r4,#0xc]
        LSRS     r0,r0,#1
        STR      r0,[sp,#0x20]
|L13.552|
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        MOVS     r3,#0
        LDR      r0,[r2,#8]
        ADD      r2,sp,#0xc
        BL       EDMA_SetTransferConfig
        LDR      r0,[r4,#0x34]
        BL       EDMA_StartTransfer
|L13.572|
        LDR      r0,[r4,#0x30]
        BL       EDMA_StartTransfer
        LDR      r0,[r4,#0x30]
        LDRB     r7,[r0,#0x10]
        LDR      r0,[r4,#0x34]
        LDRB     r8,[r0,#0x10]
        MOVS     r0,#0
        STR      r0,[sp,#8]
        CMP      r7,r8
        BLE      |L13.604|
        STR      r7,[sp,#8]
        MOV      r7,r8
        LDR      r8,[sp,#8]
|L13.604|
        MOVS     r0,#1
        STRB     r0,[sp,#4]
        STRB     r0,[sp,#5]
        STRB     r7,[sp,#6]
        LDR      r2,[r4,#0x34]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        ADD      r2,sp,#4
        BL       EDMA_SetChannelPreemptionConfig
        STRB     r8,[sp,#6]
        LDR      r2,[r4,#0x30]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        ADD      r2,sp,#4
        BL       EDMA_SetChannelPreemptionConfig
        LDR      r1,|L13.756|
        MOV      r0,r6
        BL       DSPI_EnableDMA
        MOVS     r0,#0
        B        |L13.50|
        ENDP

        DCW      0x0000
|L13.660|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L13.708|
        DCB      "NULL != handle",0
        DCB      0
|L13.724|
        DCB      "NULL != transfer",0
        DCB      0
        DCB      0
        DCB      0
|L13.744|
        DCD      s_dspiSlaveEdmaPrivateHandle
|L13.748|
        DCD      EDMA_DspiSlaveCallback
|L13.752|
        DCD      0xda0a0000
|L13.756|
        DCD      0x03030000

        AREA ||i.DSPI_SlaveTransferGetCountEDMA||, CODE, READONLY, ALIGN=2

DSPI_SlaveTransferGetCountEDMA PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        CBZ      r4,|L14.14|
        B        |L14.26|
|L14.14|
        MOV      r2,#0x5ff
        ADR      r1,|L14.80|
        ADR      r0,|L14.128|
        BL       __aeabi_assert
|L14.26|
        CBNZ     r5,|L14.34|
        MOVS     r0,#4
|L14.30|
        POP      {r4-r8,pc}
|L14.34|
        LDRB     r0,[r4,#0x25]
        CMP      r0,#1
        BEQ      |L14.50|
        MOVS     r0,#0
        STR      r0,[r5,#0]
        MOVS     r0,#6
        B        |L14.30|
|L14.50|
        LDR      r2,[r4,#0x30]
        LDRB     r1,[r2,#0x10]
        LDR      r0,[r2,#8]
        BL       EDMA_GetRemainingMajorLoopCount
        LDRB     r1,[r4,#0x24]
        MUL      r6,r0,r1
        LDR      r0,[r4,#0x14]
        SUBS     r0,r0,r6
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L14.30|
        ENDP

        DCW      0x0000
|L14.80|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L14.128|
        DCB      "NULL != handle",0
        DCB      0

        AREA ||i.DSPI_StartTransfer||, CODE, READONLY, ALIGN=1

DSPI_StartTransfer PROC
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.DSPI_StopTransfer||, CODE, READONLY, ALIGN=1

DSPI_StopTransfer PROC
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.EDMA_DspiMasterCallback||, CODE, READONLY, ALIGN=2

EDMA_DspiMasterCallback PROC
        PUSH     {r4-r10,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r8,r2
        MOV      r9,r3
        CBZ      r6,|L17.16|
        B        |L17.28|
|L17.16|
        MOV      r2,#0x3fd
        ADR      r1,|L17.84|
        ADR      r0,|L17.132|
        BL       __aeabi_assert
|L17.28|
        CBZ      r5,|L17.32|
        B        |L17.44|
|L17.32|
        MOV      r2,#0x3fe
        ADR      r1,|L17.84|
        ADR      r0,|L17.152|
        BL       __aeabi_assert
|L17.44|
        MOV      r4,r5
        LDR      r1,|L17.184|
        LDR      r0,[r4,#0]
        BL       DSPI_DisableDMA
        MOVS     r0,#0
        LDR      r1,[r4,#4]
        STRB     r0,[r1,#0xf]
        LDR      r0,[r4,#4]
        LDR      r0,[r0,#0x2c]
        CBZ      r0,|L17.80|
        LDR      r2,[r4,#4]
        MOV      r1,r2
        LDR      r3,[r2,#0x30]
        LDR      r0,[r4,#0]
        LDR      r7,[r2,#0x2c]
        MOVS     r2,#0
        BLX      r7
|L17.80|
        POP      {r4-r10,pc}
        ENDP

|L17.84|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L17.132|
        DCB      "NULL != edmaHandle",0
        DCB      0
|L17.152|
        DCB      "NULL != g_dspiEdmaPrivateHandle",0
|L17.184|
        DCD      0x03030000

        AREA ||i.EDMA_DspiSlaveCallback||, CODE, READONLY, ALIGN=2

EDMA_DspiSlaveCallback PROC
        PUSH     {r4-r10,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r8,r2
        MOV      r9,r3
        CBZ      r6,|L18.16|
        B        |L18.28|
|L18.16|
        MOV      r2,#0x5cb
        ADR      r1,|L18.88|
        ADR      r0,|L18.136|
        BL       __aeabi_assert
|L18.28|
        CBZ      r5,|L18.32|
        B        |L18.44|
|L18.32|
        MOV      r2,#0x5cc
        ADR      r1,|L18.88|
        ADR      r0,|L18.156|
        BL       __aeabi_assert
|L18.44|
        MOV      r4,r5
        LDR      r1,|L18.188|
        LDR      r0,[r4,#0]
        BL       DSPI_DisableDMA
        MOVS     r0,#0
        LDR      r1,[r4,#4]
        STRB     r0,[r1,#0x25]
        LDR      r0,[r4,#4]
        LDR      r0,[r0,#0x28]
        CBZ      r0,|L18.82|
        LDR      r2,[r4,#4]
        MOV      r1,r2
        LDR      r3,[r2,#0x2c]
        LDR      r0,[r4,#0]
        LDR      r7,[r2,#0x28]
        MOVS     r2,#0
        BLX      r7
|L18.82|
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L18.88|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c",0
        DCB      0
        DCB      0
|L18.136|
        DCB      "NULL != edmaHandle",0
        DCB      0
|L18.156|
        DCB      "NULL != g_dspiEdmaPrivateHandle",0
|L18.188|
        DCD      0x03030000

        AREA ||i.EDMA_EnableAutoStopRequest||, CODE, READONLY, ALIGN=2

EDMA_EnableAutoStopRequest PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        CMP      r4,#0x20
        BCS      |L19.14|
        B        |L19.26|
|L19.14|
        MOV      r2,#0x1ce
        ADR      r1,|L19.56|
        ADR      r0,|L19.100|
        BL       __aeabi_assert
|L19.26|
        MVNS     r0,r6
        MVNS     r1,r0
        ADD      r0,r5,#0x1000
        ADD      r0,r0,r4,LSL #5
        LDRH     r0,[r0,#0x1c]
        BFI      r0,r1,#3,#1
        ADD      r1,r5,#0x1000
        ADD      r1,r1,r4,LSL #5
        STRH     r0,[r1,#0x1c]
        POP      {r4-r6,pc}
        ENDP

|L19.56|
        DCB      "..\\..\\devices\\MK66F18\\drivers\\fsl_edma.h",0
        DCB      0
        DCB      0
        DCB      0
|L19.100|
        DCB      "channel < (uint32_t)FSL_FEATURE_DMAMUX_MODULE_CHANNEL",0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

s_dspiMasterEdmaPrivateHandle
        %        24
s_dspiSlaveEdmaPrivateHandle
        %        24

;*** Start embedded assembler ***

#line 1 "..\\..\\devices\\MK66F18\\drivers\\fsl_dspi_edma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_fsl_dspi_edma_c_c0991e60____REV16|
#line 468 "..\\..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___15_fsl_dspi_edma_c_c0991e60____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_fsl_dspi_edma_c_c0991e60____REVSH|
#line 483
|__asm___15_fsl_dspi_edma_c_c0991e60____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_fsl_dspi_edma_c_c0991e60____RRX|
#line 670
|__asm___15_fsl_dspi_edma_c_c0991e60____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT DSPI_MasterHalfDuplexTransferEDMA [CODE]
        EXPORT DSPI_MasterTransferAbortEDMA [CODE]
        EXPORT DSPI_MasterTransferCreateHandleEDMA [CODE]
        EXPORT DSPI_MasterTransferEDMA [CODE]
        EXPORT DSPI_MasterTransferGetCountEDMA [CODE]
        EXPORT DSPI_SlaveTransferAbortEDMA [CODE]
        EXPORT DSPI_SlaveTransferCreateHandleEDMA [CODE]
        EXPORT DSPI_SlaveTransferEDMA [CODE]
        EXPORT DSPI_SlaveTransferGetCountEDMA [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_assert [CODE]
        IMPORT __aeabi_memclr4 [CODE]
        IMPORT DSPI_GetInstance [CODE]
        IMPORT DSPI_GetDummyDataInstance [CODE]
        IMPORT EDMA_SetCallback [CODE]
        IMPORT EDMA_ResetChannel [CODE]
        IMPORT EDMA_SetTransferConfig [CODE]
        IMPORT EDMA_EnableChannelInterrupts [CODE]
        IMPORT EDMA_TcdReset [CODE]
        IMPORT EDMA_TcdSetTransferConfig [CODE]
        IMPORT EDMA_StartTransfer [CODE]
        IMPORT EDMA_SetChannelPreemptionConfig [CODE]
        IMPORT EDMA_SetChannelLink [CODE]
        IMPORT DSPI_MasterTransferBlocking [CODE]
        IMPORT EDMA_AbortTransfer [CODE]
        IMPORT EDMA_GetRemainingMajorLoopCount [CODE]

        KEEP DSPI_ClearStatusFlags
        KEEP DSPI_DisableDMA
        KEEP DSPI_EnableDMA
        KEEP DSPI_FlushFifo
        KEEP DSPI_MasterGetFormattedCommand
        KEEP DSPI_StartTransfer
        KEEP DSPI_StopTransfer
        KEEP EDMA_DspiMasterCallback
        KEEP EDMA_DspiSlaveCallback
        KEEP EDMA_EnableAutoStopRequest
        KEEP s_dspiMasterEdmaPrivateHandle
        KEEP s_dspiSlaveEdmaPrivateHandle

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
